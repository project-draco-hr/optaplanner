{
  List<Move> moveList=new ArrayList<Move>();
  TravelingTournament travelingTournament=(TravelingTournament)localSearchSolver.getCurrentSolution();
  moveList.addAll(cachedMoveList);
  RotationMovesFactory rotationMovesFactory=new RotationMovesFactory(travelingTournament);
  log.debug("Reused " + moveList.size() + " moves for N1 neighborhood.");
  int oldSize=moveList.size();
  rotationMovesFactory.addDayRotation(moveList);
  log.debug("Created " + (moveList.size() - oldSize) + " moves for N3 U N5 neighborhood.");
  oldSize=moveList.size();
  rotationMovesFactory.addTeamRotation(moveList);
  log.debug("Created " + (moveList.size() - oldSize) + " moves for N2 U N4 neighborhood.");
  rotationMovesFactory=null;
  return moveList.iterator();
}
