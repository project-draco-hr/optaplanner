{
  TravelingSalesmanTour travelingSalesmanTour=(TravelingSalesmanTour)solution;
  translator=new LatitudeLongitudeTranslator();
  for (  City city : travelingSalesmanTour.getCityList()) {
    translator.addCoordinates(city.getLatitude(),city.getLongitude());
  }
  Dimension size=getSize();
  double width=size.getWidth();
  double height=size.getHeight();
  translator.prepareFor(width,height);
  Graphics g=createCanvas(width,height);
  g.setColor(TangoColors.SKY_BLUE_1);
  for (  City city : travelingSalesmanTour.getCityList()) {
    int x=translator.translateLongitudeToX(city.getLongitude());
    int y=translator.translateLatitudeToY(city.getLatitude());
    g.fillRect(x - 1,y - 1,3,3);
  }
  g.setColor(TangoColors.SCARLET_1);
  for (  Depot depot : travelingSalesmanTour.getDepotList()) {
    int x=translator.translateLongitudeToX(depot.getCity().getLongitude());
    int y=translator.translateLatitudeToY(depot.getCity().getLatitude());
    g.fillRect(x - 2,y - 2,5,5);
  }
  g.setColor(TangoColors.CHOCOLATE_1);
  for (  Journey journey : travelingSalesmanTour.getJourneyList()) {
    if (journey.getPreviousTerminal() != null) {
      City previousCity=journey.getPreviousTerminal().getCity();
      int previousX=translator.translateLongitudeToX(previousCity.getLongitude());
      int previousY=translator.translateLatitudeToY(previousCity.getLatitude());
      City city=journey.getCity();
      int x=translator.translateLongitudeToX(city.getLongitude());
      int y=translator.translateLatitudeToY(city.getLatitude());
      g.drawLine(previousX,previousY,x,y);
      boolean needsBackToDepotLineDraw=true;
      for (      Journey chainedJourney : travelingSalesmanTour.getJourneyList()) {
        if (chainedJourney.getPreviousTerminal() == journey) {
          needsBackToDepotLineDraw=false;
          break;
        }
      }
      if (needsBackToDepotLineDraw) {
        Depot depot=travelingSalesmanTour.getDepotList().get(0);
        City depotCity=depot.getCity();
        int depotX=translator.translateLongitudeToX(depotCity.getLongitude());
        int depotY=translator.translateLatitudeToY(depotCity.getLatitude());
        g.drawLine(x,y,depotX,depotY);
      }
    }
  }
  repaint();
}
