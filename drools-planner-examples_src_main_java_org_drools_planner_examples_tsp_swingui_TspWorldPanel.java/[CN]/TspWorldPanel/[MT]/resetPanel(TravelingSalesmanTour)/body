{
  translator=new LatitudeLongitudeTranslator();
  for (  City city : travelingSalesmanTour.getCityList()) {
    translator.addCoordinates(city.getLatitude(),city.getLongitude());
  }
  Dimension size=getSize();
  double width=size.getWidth();
  double height=size.getHeight();
  translator.prepareFor(width,height);
  Graphics g=createCanvas(width,height);
  String tourName=travelingSalesmanTour.getName();
  if (tourName.startsWith("europe")) {
    g.drawImage(europaBackground.getImage(),0,0,translator.getImageWidth(),translator.getImageHeight(),this);
  }
  g.setColor(TangoColors.ALUMINIUM_6);
  g.setFont(g.getFont().deriveFont(8.0f));
  for (  City city : travelingSalesmanTour.getCityList()) {
    if (city.getName() != null) {
      int x=translator.translateLongitudeToX(city.getLongitude());
      int y=translator.translateLatitudeToY(city.getLatitude());
      g.drawString(city.getName(),x + 3,y - 3);
    }
  }
  g.setColor(TangoColors.PLUM_2);
  for (  City city : travelingSalesmanTour.getCityList()) {
    int x=translator.translateLongitudeToX(city.getLongitude());
    int y=translator.translateLatitudeToY(city.getLatitude());
    g.fillRect(x - 1,y - 1,3,3);
  }
  g.setColor(TangoColors.SCARLET_2);
  for (  Domicile domicile : travelingSalesmanTour.getDomicileList()) {
    int x=translator.translateLongitudeToX(domicile.getCity().getLongitude());
    int y=translator.translateLatitudeToY(domicile.getCity().getLatitude());
    g.fillRect(x - 2,y - 2,5,5);
  }
  g.setColor(TangoColors.CHOCOLATE_1);
  for (  Visit visit : travelingSalesmanTour.getVisitList()) {
    if (visit.getPreviousAppearance() != null) {
      City previousCity=visit.getPreviousAppearance().getCity();
      int previousX=translator.translateLongitudeToX(previousCity.getLongitude());
      int previousY=translator.translateLatitudeToY(previousCity.getLatitude());
      City city=visit.getCity();
      int x=translator.translateLongitudeToX(city.getLongitude());
      int y=translator.translateLatitudeToY(city.getLatitude());
      g.drawLine(previousX,previousY,x,y);
      boolean needsBackToDomicileLineDraw=true;
      for (      Visit chainedVisit : travelingSalesmanTour.getVisitList()) {
        if (chainedVisit.getPreviousAppearance() == visit) {
          needsBackToDomicileLineDraw=false;
          break;
        }
      }
      if (needsBackToDomicileLineDraw) {
        Domicile domicile=travelingSalesmanTour.getDomicileList().get(0);
        City domicileCity=domicile.getCity();
        int domicileX=translator.translateLongitudeToX(domicileCity.getLongitude());
        int domicileY=translator.translateLatitudeToY(domicileCity.getLatitude());
        g.drawLine(x,y,domicileX,domicileY);
      }
    }
  }
  g.setFont(g.getFont().deriveFont(8.0f));
  g.setColor(TangoColors.PLUM_2);
  g.fillRect(6,(int)height - 19,3,3);
  g.drawString("Visit",15,(int)height - 15);
  g.setColor(TangoColors.SCARLET_2);
  g.fillRect(5,(int)height - 10,5,5);
  g.drawString("Domicile",15,(int)height - 5);
  repaint();
}
