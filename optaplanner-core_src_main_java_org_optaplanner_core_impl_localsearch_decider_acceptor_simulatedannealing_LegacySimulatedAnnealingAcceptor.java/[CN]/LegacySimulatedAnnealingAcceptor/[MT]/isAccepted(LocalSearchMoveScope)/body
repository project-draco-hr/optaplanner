{
  LocalSearchSolverPhaseScope phaseScope=moveScope.getStepScope().getPhaseScope();
  Score lastStepScore=phaseScope.getLastCompletedStepScope().getScore();
  Score moveScore=moveScope.getScore();
  if (moveScore.compareTo(lastStepScore) > 0) {
    return true;
  }
  Score moveScoreDifference=lastStepScore.subtract(moveScore);
  double[] moveScoreDifferenceLevels=ScoreUtils.extractLevelDoubles(moveScoreDifference);
  for (int i=0; i < moveScoreDifferenceLevels.length - 1; i++) {
    if (moveScoreDifferenceLevels[i] != 0) {
      return false;
    }
  }
  double diff=moveScoreDifferenceLevels[moveScoreDifferenceLevels.length - 1];
  double acceptChance=Math.exp(-diff / temperature);
  if (moveScope.getWorkingRandom().nextDouble() < acceptChance) {
    return true;
  }
 else {
    return false;
  }
}
