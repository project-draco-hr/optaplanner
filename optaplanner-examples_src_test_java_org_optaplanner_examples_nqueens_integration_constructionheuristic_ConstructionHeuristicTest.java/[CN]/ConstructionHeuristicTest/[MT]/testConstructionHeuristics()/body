{
  SolverConfig config=SolverFactory.createFromXmlResource("org/optaplanner/examples/nqueens/solver/nqueensSolverConfig.xml").getSolverConfig();
  List<PhaseConfig> phaseConfigs=config.getPhaseConfigList();
  if (phaseConfigs.get(1) instanceof LocalSearchPhaseConfig) {
    phaseConfigs.remove(1);
  }
 else {
    throw new IllegalStateException("Config file had to be changed! Check org/optaplanner/examples/nqueens/solver/nqueensSolverConfig.xml");
  }
  if (phaseConfigs.get(0) instanceof ConstructionHeuristicPhaseConfig) {
    ConstructionHeuristicPhaseConfig chConfig=(ConstructionHeuristicPhaseConfig)phaseConfigs.get(0);
    chConfig.setValueSorterManner(valueSorterManner);
    chConfig.setEntitySorterManner(entitySorterManner);
    chConfig.setConstructionHeuristicType(constructionHeuristicType);
  }
 else {
    throw new IllegalStateException("Config file had to be changed! Check org/optaplanner/examples/nqueens/solver/nqueensSolverConfig.xml");
  }
  NQueensGenerator generator=new NQueensGenerator();
  NQueens solution=generator.createNQueens(8);
  QueenCoordinatesStepListener listener=new QueenCoordinatesStepListener();
  DefaultSolver solver=(DefaultSolver)config.buildSolver();
  solver.addPhaseLifecycleListener(listener);
  solver.solve(solution);
  NQueens result=(NQueens)solver.getBestSolution();
  assertNotNull(result);
  assertCoordinates(expectedCoordinates,listener.getCoordinates());
}
