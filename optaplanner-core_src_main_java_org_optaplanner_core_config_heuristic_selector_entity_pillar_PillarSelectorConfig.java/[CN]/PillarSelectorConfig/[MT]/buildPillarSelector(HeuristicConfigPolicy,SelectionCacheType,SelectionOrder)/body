{
  if (minimumCacheType.compareTo(SelectionCacheType.STEP) > 0) {
    throw new IllegalArgumentException("The pillarSelectorConfig (" + this + ")'s minimumCacheType ("+ minimumCacheType+ ") must not be higher than "+ SelectionCacheType.STEP+ " because the pillars change every step.");
  }
  EntitySelectorConfig entitySelectorConfig_=entitySelectorConfig == null ? new EntitySelectorConfig() : entitySelectorConfig;
  EntitySelector entitySelector=entitySelectorConfig_.buildEntitySelector(configPolicy,minimumCacheType,SelectionOrder.ORIGINAL);
  Collection<GenuineVariableDescriptor> variableDescriptors=entitySelector.getEntityDescriptor().getGenuineVariableDescriptors();
  if (BooleanUtils.isFalse(subPillarEnabled) && (minimumSubPillarSize != null || maximumSubPillarSize != null)) {
    throw new IllegalArgumentException("The pillarSelectorConfig (" + this + ") must not have subPillarEnabled ("+ subPillarEnabled+ ") with minimumSubPillarSize ("+ minimumSubPillarSize+ ") and maximumSubPillarSize ("+ maximumSubPillarSize+ ").");
  }
  return new DefaultPillarSelector(entitySelector,variableDescriptors,inheritedSelectionOrder.toRandomSelectionBoolean(),subPillarEnabled == null ? true : subPillarEnabled,minimumSubPillarSize == null ? 1 : minimumSubPillarSize,maximumSubPillarSize == null ? Integer.MAX_VALUE : maximumSubPillarSize);
}
