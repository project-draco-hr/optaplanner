{
  if (minimumCacheType.compareTo(SelectionCacheType.STEP) > 0) {
    throw new IllegalArgumentException("The pillarSelectorConfig (" + this + ")'s minimumCacheType ("+ minimumCacheType+ ") must not be higher than "+ SelectionCacheType.STEP+ " because the pillars change every step.");
  }
  EntitySelector entitySelector=entitySelectorConfig.buildEntitySelector(environmentMode,solutionDescriptor,minimumCacheType,SelectionOrder.ORIGINAL);
  Collection<PlanningVariableDescriptor> variableDescriptors=entitySelector.getEntityDescriptor().getPlanningVariableDescriptors();
  return new SameValuePillarSelector(entitySelector,variableDescriptors,inheritedSelectionOrder.toRandomSelectionBoolean());
}
