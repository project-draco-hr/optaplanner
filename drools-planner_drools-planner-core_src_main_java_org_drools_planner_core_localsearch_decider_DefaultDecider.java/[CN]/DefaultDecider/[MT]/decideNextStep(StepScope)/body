{
  WorkingMemory workingMemory=stepScope.getWorkingMemory();
  Iterator<Move> moveIterator=selector.moveIterator(stepScope);
  while (moveIterator.hasNext()) {
    Move move=moveIterator.next();
    MoveScope moveScope=new MoveScope(stepScope);
    moveScope.setMove(move);
    if (move.isMoveDoable(workingMemory)) {
      doMove(moveScope);
      if (forager.isQuitEarly()) {
        break;
      }
    }
 else {
      logger.debug("    Move ({}) ignored because it is not doable.",move);
    }
  }
  MoveScope pickedMoveScope=forager.pickMove(stepScope);
  if (pickedMoveScope != null) {
    Move step=pickedMoveScope.getMove();
    stepScope.setStep(step);
    stepScope.setUndoStep(step.createUndoMove(workingMemory));
    stepScope.setScore(pickedMoveScope.getScore());
  }
}
