{
  SolverBenchmarkResult solverBenchmarkResult=spy(new SolverBenchmarkResult(null));
  SingleBenchmarkResult singleBenchmarkResult1=mock(SingleBenchmarkResult.class);
  SingleBenchmarkResult singleBenchmarkResult2=mock(SingleBenchmarkResult.class);
  when(solverBenchmarkResult.getSingleBenchmarkResultList()).thenReturn(Arrays.asList(singleBenchmarkResult1,singleBenchmarkResult2));
  when(solverBenchmarkResult.getAverageScore()).thenReturn(HardSoftScore.valueOf(-10,-100));
  when(solverBenchmarkResult.getTotalUninitializedVariableCount()).thenReturn(2);
  when(solverBenchmarkResult.getFailureCount()).thenReturn(1);
  assertEquals("2uninitialized/-10hard/-100soft",solverBenchmarkResult.getAverageScoreWithUninitializedPrefix());
  when(solverBenchmarkResult.getFailureCount()).thenReturn(0);
  assertEquals("1uninitialized/-10hard/-100soft",solverBenchmarkResult.getAverageScoreWithUninitializedPrefix());
  when(solverBenchmarkResult.getFailureCount()).thenReturn(2);
  assertEquals(null,solverBenchmarkResult.getAverageScoreWithUninitializedPrefix());
}
