{
  if (resolvedCacheType.isCached() && resolvedCacheType.compareTo(valueSelector.getCacheType()) > 0) {
    if (!(valueSelector instanceof EntityIndependentValueSelector)) {
      throw new IllegalArgumentException("The valueSelectorConfig (" + this + ") with resolvedSelectionOrder ("+ resolvedSelectionOrder+ ") needs to be based on a EntityIndependentValueSelector."+ " Check your @"+ ValueRange.class.getSimpleName()+ " annotations.");
    }
    valueSelector=new CachingValueSelector((EntityIndependentValueSelector)valueSelector,resolvedCacheType,resolvedSelectionOrder.toRandomSelectionBoolean());
  }
  return valueSelector;
}
