{
  final VrpLocation newLocation=new VrpLocation();
  newLocation.setId(nextLocationId);
  nextLocationId++;
  newLocation.setLongitude(longitude);
  newLocation.setLatitude(latitude);
  logger.info("Scheduling insertion of newLocation ({}).",newLocation);
  solutionBusiness.doProblemFactChange(new ProblemFactChange(){
    public void doChange(    ScoreDirector scoreDirector){
      VrpSchedule schedule=(VrpSchedule)scoreDirector.getWorkingSolution();
      scoreDirector.beforeProblemFactAdded(newLocation);
      schedule.getLocationList().add(newLocation);
      scoreDirector.afterProblemFactAdded(newLocation);
      VrpCustomer newCustomer;
      if (schedule instanceof VrpTimeWindowedSchedule) {
        VrpTimeWindowedCustomer newTimeWindowedCustomer=new VrpTimeWindowedCustomer();
        newTimeWindowedCustomer.setMilliReadyTime(10000);
        newTimeWindowedCustomer.setMilliDueTime(100000);
        newTimeWindowedCustomer.setMilliServiceDuration(10000);
        newCustomer=newTimeWindowedCustomer;
      }
 else {
        newCustomer=new VrpCustomer();
      }
      newCustomer.setId(newLocation.getId());
      newCustomer.setLocation(newLocation);
      newCustomer.setDemand(demandRandom.nextInt(10) + 1);
      scoreDirector.beforeEntityAdded(newCustomer);
      schedule.getCustomerList().add(newCustomer);
      scoreDirector.afterEntityAdded(newCustomer);
    }
  }
);
  updatePanel(solutionBusiness.getSolution());
}
