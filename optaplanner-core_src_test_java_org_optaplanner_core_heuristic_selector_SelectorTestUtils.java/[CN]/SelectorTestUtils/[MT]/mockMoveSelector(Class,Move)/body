{
  MoveSelector moveSelector=mock(MoveSelector.class);
  final List<Move> moveList=Arrays.<Move>asList(moves);
  when(moveSelector.iterator()).thenAnswer(new Answer<Iterator<Move>>(){
    public Iterator<Move> answer(    InvocationOnMock invocation) throws Throwable {
      return moveList.iterator();
    }
  }
);
  when(moveSelector.isContinuous()).thenReturn(false);
  when(moveSelector.isNeverEnding()).thenReturn(false);
  when(moveSelector.getCacheType()).thenReturn(SelectionCacheType.JUST_IN_TIME);
  when(moveSelector.getSize()).thenReturn((long)moveList.size());
  return moveSelector;
}
