{
  int periodSize=readHeaderWithNumber("Periods");
  List<Period> periodList=new ArrayList<>(periodSize);
  DateTimeFormatter DATE_FORMAT=DateTimeFormatter.ofPattern("dd:MM:yyyy HH:mm:ss",Locale.UK);
  LocalDateTime referenceDateTime=null;
  for (int i=0; i < periodSize; i++) {
    Period period=new Period();
    period.setId((long)i);
    String line=bufferedReader.readLine();
    String[] lineTokens=line.split(SPLIT_REGEX);
    if (lineTokens.length != 4) {
      throw new IllegalArgumentException("Read line (" + line + ") is expected to contain 4 tokens.");
    }
    String startDateTimeString=lineTokens[0] + " " + lineTokens[1];
    period.setStartDateTimeString(startDateTimeString);
    period.setPeriodIndex(i);
    LocalDateTime dateTime;
    try {
      dateTime=LocalDateTime.parse(startDateTimeString,DATE_FORMAT);
    }
 catch (    DateTimeParseException e) {
      throw new IllegalArgumentException("Illegal startDateTimeString (" + startDateTimeString + ").",e);
    }
    if (referenceDateTime == null) {
      referenceDateTime=dateTime;
    }
    int dayIndex=(int)ChronoUnit.DAYS.between(referenceDateTime,dateTime);
    if (dayIndex < 0) {
      throw new IllegalStateException("The periods should be in ascending order.");
    }
    period.setDayIndex(dayIndex);
    period.setDuration(Integer.parseInt(lineTokens[2]));
    period.setPenalty(Integer.parseInt(lineTokens[3]));
    periodList.add(period);
  }
  examination.setPeriodList(periodList);
}
