{
  List<Accepter> accepterList=new ArrayList<Accepter>();
  if (accepter != null) {
    accepterList.add(accepter);
  }
  if (accepterClass != null) {
    try {
      accepterList.add(accepterClass.newInstance());
    }
 catch (    InstantiationException e) {
      throw new IllegalArgumentException("accepterClass (" + accepterClass.getName() + ") does not have a public no-arg constructor",e);
    }
catch (    IllegalAccessException e) {
      throw new IllegalArgumentException("accepterClass (" + accepterClass.getName() + ") does not have a public no-arg constructor",e);
    }
  }
  if ((accepterTypeList != null && accepterTypeList.contains(AccepterType.MOVE_TABU)) || completeMoveTabuSize != null || partialMoveTabuSize != null) {
    MoveTabuAccepter moveTabuAccepter=new MoveTabuAccepter();
    moveTabuAccepter.setUseUndoMoveAsTabuMove(false);
    if (completeMoveTabuSize != null) {
      moveTabuAccepter.setCompleteTabuSize(completeMoveTabuSize);
    }
    if (partialMoveTabuSize != null) {
      moveTabuAccepter.setPartialTabuSize(partialMoveTabuSize);
    }
    accepterList.add(moveTabuAccepter);
  }
  if ((accepterTypeList != null && accepterTypeList.contains(AccepterType.UNDO_MOVE_TABU)) || completeUndoMoveTabuSize != null || partialUndoMoveTabuSize != null) {
    MoveTabuAccepter undoMoveTabuAccepter=new MoveTabuAccepter();
    undoMoveTabuAccepter.setUseUndoMoveAsTabuMove(true);
    if (completeUndoMoveTabuSize != null) {
      undoMoveTabuAccepter.setCompleteTabuSize(completeUndoMoveTabuSize);
    }
    if (partialUndoMoveTabuSize != null) {
      undoMoveTabuAccepter.setPartialTabuSize(partialUndoMoveTabuSize);
    }
    accepterList.add(undoMoveTabuAccepter);
  }
  if ((accepterTypeList != null && accepterTypeList.contains(AccepterType.PROPERTY_TABU)) || completePropertyTabuSize != null || partialPropertyTabuSize != null) {
    PropertyTabuAccepter propertyTabuAccepter=new PropertyTabuAccepter();
    if (completePropertyTabuSize != null) {
      propertyTabuAccepter.setCompleteTabuSize(completePropertyTabuSize);
    }
    if (partialPropertyTabuSize != null) {
      propertyTabuAccepter.setPartialTabuSize(partialPropertyTabuSize);
    }
    accepterList.add(propertyTabuAccepter);
  }
  if ((accepterTypeList != null && accepterTypeList.contains(AccepterType.SOLUTION_TABU)) || completeSolutionTabuSize != null || partialSolutionTabuSize != null) {
    SolutionTabuAccepter solutionTabuAccepter=new SolutionTabuAccepter();
    if (completeSolutionTabuSize != null) {
      solutionTabuAccepter.setCompleteTabuSize(completeSolutionTabuSize);
    }
    if (partialSolutionTabuSize != null) {
      solutionTabuAccepter.setPartialTabuSize(partialSolutionTabuSize);
    }
    accepterList.add(solutionTabuAccepter);
  }
  if ((accepterTypeList != null && accepterTypeList.contains(AccepterType.SIMULATED_ANNEALING))) {
    SimulatedAnnealingAccepter simulatedAnnealingAccepter=new SimulatedAnnealingAccepter();
    accepterList.add(simulatedAnnealingAccepter);
  }
  if ((accepterTypeList != null && accepterTypeList.contains(AccepterType.GREAT_DELUGE))) {
    throw new UnsupportedOperationException();
  }
  if (accepterList.size() == 1) {
    return accepterList.get(0);
  }
 else   if (accepterList.size() > 1) {
    CompositeAccepter compositeAccepter=new CompositeAccepter();
    compositeAccepter.setAccepterList(accepterList);
    return compositeAccepter;
  }
 else {
    SolutionTabuAccepter solutionTabuAccepter=new SolutionTabuAccepter();
    solutionTabuAccepter.setCompleteTabuSize(1500);
    return solutionTabuAccepter;
  }
}
