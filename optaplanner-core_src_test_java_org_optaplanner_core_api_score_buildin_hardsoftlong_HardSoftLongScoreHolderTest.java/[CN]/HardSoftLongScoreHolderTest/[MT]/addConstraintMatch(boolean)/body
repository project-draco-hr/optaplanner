{
  HardSoftLongScoreHolder scoreHolder=new HardSoftLongScoreHolder(constraintMatchEnabled);
  scoreHolder.addHardConstraintMatch(createRuleContext("scoreRule1"),-1000L);
  RuleContext ruleContext2=createRuleContext("scoreRule2");
  scoreHolder.addHardConstraintMatch(ruleContext2,-200L);
  callUnMatch(ruleContext2);
  RuleContext ruleContext3=createRuleContext("scoreRule3");
  scoreHolder.addSoftConstraintMatch(ruleContext3,-30L);
  scoreHolder.addSoftConstraintMatch(ruleContext3,-3L);
  scoreHolder.addHardConstraintMatch(ruleContext3,-300L);
  scoreHolder.addHardConstraintMatch(ruleContext3,-400L);
  RuleContext ruleContext4=createRuleContext("scoreRule4");
  scoreHolder.addHardConstraintMatch(ruleContext4,-1);
  scoreHolder.addSoftConstraintMatch(ruleContext4,-1);
  callUnMatch(ruleContext4,1);
  assertEquals(HardSoftLongScore.valueOf(-1401L,-3L),scoreHolder.extractScore());
  if (constraintMatchEnabled) {
    assertEquals(6,scoreHolder.getConstraintMatchTotals().size());
  }
}
