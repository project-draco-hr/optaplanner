{
  DefaultCategoryDataset dataset=new DefaultCategoryDataset();
  for (  SolverBenchmark solverBenchmark : solverBenchmarkList) {
    ScoreDefinition scoreDefinition=solverBenchmark.getLocalSearchSolverConfig().getScoreDefinitionConfig().buildScoreDefinition();
    for (    SolverBenchmarkResult result : solverBenchmark.getSolverBenchmarkResultList()) {
      Score score=result.getScore();
      Double scoreGraphValue=scoreDefinition.translateScoreToGraphValue(score);
      dataset.addValue(scoreGraphValue,solverBenchmark.getName(),result.getUnsolvedSolutionFile().getName());
    }
  }
  JFreeChart chart=ChartFactory.createBarChart("Best score summary (higher score is better)","Data","Score",dataset,PlotOrientation.VERTICAL,true,true,false);
  CategoryItemRenderer renderer=((CategoryPlot)chart.getPlot()).getRenderer();
  CategoryItemLabelGenerator generator=new StandardCategoryItemLabelGenerator();
  renderer.setBaseItemLabelGenerator(generator);
  renderer.setBaseItemLabelsVisible(true);
  BufferedImage chartImage=chart.createBufferedImage(1024,768);
  File chartSummaryFile=new File(solverStatisticFilesDirectory,"summary.png");
  OutputStream out=null;
  try {
    out=new FileOutputStream(chartSummaryFile);
    ImageIO.write(chartImage,"png",out);
  }
 catch (  IOException e) {
    throw new IllegalArgumentException("Problem writing graphStatisticFile: " + chartSummaryFile,e);
  }
 finally {
    IOUtils.closeQuietly(out);
  }
  return "  <img src=\"" + chartSummaryFile.getName() + "\"/>\n";
}
