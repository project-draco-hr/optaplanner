{
  failureCount=0;
  boolean firstNonFailure=true;
  totalScore=null;
  totalWinningScoreDifference=null;
  ScoreDifferencePercentage totalWorstScoreDifferencePercentage=null;
  long totalAverageCalculateCountPerSecond=0L;
  long totalTimeMillisSpend=0L;
  for (  SingleBenchmarkResult singleBenchmarkResult : singleBenchmarkResultList) {
    if (singleBenchmarkResult.isFailure()) {
      failureCount++;
    }
 else {
      if (firstNonFailure) {
        totalScore=singleBenchmarkResult.getScore();
        totalWinningScoreDifference=singleBenchmarkResult.getWinningScoreDifference();
        totalWorstScoreDifferencePercentage=singleBenchmarkResult.getWorstScoreDifferencePercentage();
        totalAverageCalculateCountPerSecond=singleBenchmarkResult.getAverageCalculateCountPerSecond();
        totalTimeMillisSpend=singleBenchmarkResult.getTimeMillisSpend();
        firstNonFailure=false;
      }
 else {
        totalScore=totalScore.add(singleBenchmarkResult.getScore());
        totalWinningScoreDifference=totalWinningScoreDifference.add(singleBenchmarkResult.getWinningScoreDifference());
        totalWorstScoreDifferencePercentage=totalWorstScoreDifferencePercentage.add(singleBenchmarkResult.getWorstScoreDifferencePercentage());
        totalAverageCalculateCountPerSecond+=singleBenchmarkResult.getAverageCalculateCountPerSecond();
        totalTimeMillisSpend+=singleBenchmarkResult.getTimeMillisSpend();
      }
    }
  }
  if (!firstNonFailure) {
    int successCount=getSuccessCount();
    averageScore=totalScore.divide(successCount);
    averageWorstScoreDifferencePercentage=totalWorstScoreDifferencePercentage.divide((double)successCount);
    averageAverageCalculateCountPerSecond=totalAverageCalculateCountPerSecond / (long)successCount;
    averageTimeMillisSpend=totalTimeMillisSpend / (long)successCount;
  }
}
