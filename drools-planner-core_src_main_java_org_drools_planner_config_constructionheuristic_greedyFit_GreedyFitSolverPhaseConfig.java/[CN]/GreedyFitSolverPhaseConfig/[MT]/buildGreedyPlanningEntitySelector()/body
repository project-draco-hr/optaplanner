{
  GreedyPlanningEntitySelector greedyPlanningEntitySelector=new GreedyPlanningEntitySelector();
  boolean resetInitializedPlanningEntitiesValue=resetInitializedPlanningEntities == null ? false : resetInitializedPlanningEntities.booleanValue();
  greedyPlanningEntitySelector.setResetInitializedPlanningEntities(resetInitializedPlanningEntitiesValue);
  if (fitOrderPlanningEntityComparatorClass != null && planningEntityDifficultyWeightFactoryClass != null) {
    throw new IllegalArgumentException("Cannot configure fitOrderPlanningEntityComparatorClass (" + fitOrderPlanningEntityComparatorClass + ") and planningEntityDifficultyWeightFactoryClass ("+ planningEntityDifficultyWeightFactoryClass+ ") at the same time.");
  }
  if (fitOrderPlanningEntityComparatorClass != null) {
    Comparator<Object> fitOrderPlanningEntityComparator;
    try {
      fitOrderPlanningEntityComparator=fitOrderPlanningEntityComparatorClass.newInstance();
    }
 catch (    InstantiationException e) {
      throw new IllegalArgumentException("The fitOrderPlanningEntityComparatorClass (" + fitOrderPlanningEntityComparatorClass.getName() + ") does not have a public no-arg constructor",e);
    }
catch (    IllegalAccessException e) {
      throw new IllegalArgumentException("The fitOrderPlanningEntityComparatorClass (" + fitOrderPlanningEntityComparatorClass.getName() + ") does not have a public no-arg constructor",e);
    }
    greedyPlanningEntitySelector.setFitOrderPlanningEntityComparator(fitOrderPlanningEntityComparator);
  }
  if (planningEntityDifficultyWeightFactoryClass != null) {
    PlanningEntityDifficultyWeightFactory planningEntityDifficultyWeightFactory;
    try {
      planningEntityDifficultyWeightFactory=planningEntityDifficultyWeightFactoryClass.newInstance();
    }
 catch (    InstantiationException e) {
      throw new IllegalArgumentException("The planningEntityDifficultyWeightFactoryClass (" + planningEntityDifficultyWeightFactoryClass.getName() + ") does not have a public no-arg constructor",e);
    }
catch (    IllegalAccessException e) {
      throw new IllegalArgumentException("The planningEntityDifficultyWeightFactoryClass (" + planningEntityDifficultyWeightFactoryClass.getName() + ") does not have a public no-arg constructor",e);
    }
    greedyPlanningEntitySelector.setPlanningEntityDifficultyWeightFactory(planningEntityDifficultyWeightFactory);
  }
  return greedyPlanningEntitySelector;
}
