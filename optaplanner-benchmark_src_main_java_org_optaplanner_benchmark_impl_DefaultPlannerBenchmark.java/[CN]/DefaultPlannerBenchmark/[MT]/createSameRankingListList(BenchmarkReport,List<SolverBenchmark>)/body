{
  List<List<SolverBenchmark>> sameRankingListList=new ArrayList<List<SolverBenchmark>>(rankableSolverBenchmarkList.size());
  if (benchmarkReport.getSolverBenchmarkRankingComparator() != null) {
    Comparator<SolverBenchmark> comparator=Collections.reverseOrder(benchmarkReport.getSolverBenchmarkRankingComparator());
    Collections.sort(rankableSolverBenchmarkList,comparator);
    List<SolverBenchmark> sameRankingList=null;
    SolverBenchmark previousSolverBenchmark=null;
    for (    SolverBenchmark solverBenchmark : rankableSolverBenchmarkList) {
      if (previousSolverBenchmark == null || comparator.compare(previousSolverBenchmark,solverBenchmark) != 0) {
        sameRankingList=new ArrayList<SolverBenchmark>();
        sameRankingListList.add(sameRankingList);
      }
      sameRankingList.add(solverBenchmark);
      previousSolverBenchmark=solverBenchmark;
    }
  }
 else   if (benchmarkReport.getSolverBenchmarkRankingWeightFactory() != null) {
    SortedMap<Comparable,List<SolverBenchmark>> rankedMap=new TreeMap<Comparable,List<SolverBenchmark>>(new ReverseComparator());
    for (    SolverBenchmark solverBenchmark : rankableSolverBenchmarkList) {
      Comparable rankingWeight=benchmarkReport.getSolverBenchmarkRankingWeightFactory().createRankingWeight(rankableSolverBenchmarkList,solverBenchmark);
      List<SolverBenchmark> sameRankingList=rankedMap.get(rankingWeight);
      if (sameRankingList == null) {
        sameRankingList=new ArrayList<SolverBenchmark>();
        rankedMap.put(rankingWeight,sameRankingList);
      }
      sameRankingList.add(solverBenchmark);
    }
    for (    Map.Entry<Comparable,List<SolverBenchmark>> entry : rankedMap.entrySet()) {
      sameRankingListList.add(entry.getValue());
    }
  }
 else {
    throw new IllegalStateException("Ranking is impossible" + " because solverBenchmarkRankingComparator and solverBenchmarkRankingWeightFactory are null.");
  }
  return sameRankingListList;
}
