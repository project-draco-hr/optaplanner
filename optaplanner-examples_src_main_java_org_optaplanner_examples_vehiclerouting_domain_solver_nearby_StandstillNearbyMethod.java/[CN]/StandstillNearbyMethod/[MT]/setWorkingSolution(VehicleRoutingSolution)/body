{
  List<Vehicle> vehicleList=workingSolution.getVehicleList();
  int vehicleListSize=vehicleList.size();
  List<Customer> customerList=workingSolution.getCustomerList();
  nearbyStandstillListMap=new HashMap<Customer,Standstill[]>(customerList.size());
  for (  final Customer origin : customerList) {
    Standstill[] nearbyStandstillList=new Standstill[vehicleListSize + customerList.size()];
    for (int i=0; i < nearbyStandstillList.length; i++) {
      nearbyStandstillList[i]=(i < vehicleListSize) ? vehicleList.get(i) : customerList.get(i - vehicleListSize);
    }
    Arrays.sort(nearbyStandstillList,new Comparator<Standstill>(){
      @Override public int compare(      Standstill a,      Standstill b){
        int aDistance=origin.getDistanceTo(a);
        int bDistance=origin.getDistanceTo(b);
        if (aDistance < bDistance) {
          return -1;
        }
 else         if (aDistance > bDistance) {
          return 1;
        }
 else {
          return a.getLocation().getId().compareTo(b.getLocation().getId());
        }
      }
    }
);
    nearbyStandstillListMap.put(origin,nearbyStandstillList);
  }
}
