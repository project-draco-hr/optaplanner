{
  AbstractSolverPhaseScope phaseScope=stepScope.getPhaseScope();
  DefaultSolverScope solverScope=phaseScope.getSolverScope();
  int bestUninitializedVariableCount=solverScope.getBestUninitializedVariableCount();
  Score bestScore=solverScope.getBestScore();
  boolean bestScoreImproved;
  if (uninitializedVariableCount == bestUninitializedVariableCount) {
    bestScoreImproved=score.compareTo(bestScore) > 0;
  }
 else {
    bestScoreImproved=uninitializedVariableCount < bestUninitializedVariableCount;
  }
  if (bestScoreImproved) {
    stepScope.setBestScoreImproved(bestScoreImproved);
  }
  if (bestScoreImproved) {
    phaseScope.setBestSolutionStepIndex(stepScope.getStepIndex());
    Solution newBestSolution=solverScope.getScoreDirector().cloneWorkingSolution();
    updateBestSolution(solverScope,newBestSolution,uninitializedVariableCount);
  }
 else   if (assertBestScoreIsUnmodified) {
    solverScope.assertScoreFromScratch(solverScope.getBestSolution());
  }
}
