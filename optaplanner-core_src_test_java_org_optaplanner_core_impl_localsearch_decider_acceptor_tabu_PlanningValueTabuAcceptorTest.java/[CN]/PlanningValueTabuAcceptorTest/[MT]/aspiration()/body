{
  PlanningValueTabuAcceptor acceptor=new PlanningValueTabuAcceptor();
  acceptor.setTabuSize(2);
  acceptor.setAspirationEnabled(true);
  TestdataValue v0=new TestdataValue("v0");
  TestdataValue v1=new TestdataValue("v1");
  DefaultSolverScope solverScope=new DefaultSolverScope();
  solverScope.setBestScore(SimpleScore.valueOf(-100));
  LocalSearchSolverPhaseScope phaseScope=new LocalSearchSolverPhaseScope(solverScope);
  acceptor.phaseStarted(phaseScope);
  LocalSearchStepScope stepScope0=new LocalSearchStepScope(phaseScope);
  stepScope0.setStepIndex(0);
  stepScope0.setStep(buildMoveScope(stepScope0,v1).getMove());
  acceptor.stepEnded(stepScope0);
  LocalSearchStepScope stepScope1=new LocalSearchStepScope(phaseScope);
  stepScope1.setStepIndex(1);
  assertEquals(true,acceptor.isAccepted(buildMoveScope(stepScope1,-120,v0)));
  assertEquals(true,acceptor.isAccepted(buildMoveScope(stepScope1,-20,v0)));
  assertEquals(false,acceptor.isAccepted(buildMoveScope(stepScope1,-120,v1)));
  assertEquals(true,acceptor.isAccepted(buildMoveScope(stepScope1,-20,v1)));
  assertEquals(false,acceptor.isAccepted(buildMoveScope(stepScope1,-120,v0,v1)));
  assertEquals(true,acceptor.isAccepted(buildMoveScope(stepScope1,-20,v0,v1)));
  stepScope1.setStep(buildMoveScope(stepScope1,-20,v1).getMove());
  acceptor.stepEnded(stepScope1);
  acceptor.phaseEnded(phaseScope);
}
