{
  double tolerance=0.00001;
  SimpleScore score1=SimpleScore.valueOfInitialized(-100);
  SimpleScore score2=SimpleScore.valueOfInitialized(-100);
  ScoreDifferencePercentage scoreDifferencePercentage=ScoreDifferencePercentage.calculateScoreDifferencePercentage(score1,score2);
  assertEquals(0.0,scoreDifferencePercentage.getPercentageLevels()[0],tolerance);
  score1=SimpleScore.valueOfInitialized(100);
  score2=SimpleScore.valueOfInitialized(100);
  scoreDifferencePercentage=ScoreDifferencePercentage.calculateScoreDifferencePercentage(score1,score2);
  assertEquals(0.0,scoreDifferencePercentage.getPercentageLevels()[0],tolerance);
  score1=SimpleScore.valueOfInitialized(-100);
  score2=SimpleScore.valueOfInitialized(-10);
  scoreDifferencePercentage=ScoreDifferencePercentage.calculateScoreDifferencePercentage(score1,score2);
  assertEquals(0.9,scoreDifferencePercentage.getPercentageLevels()[0],tolerance);
  score1=SimpleScore.valueOfInitialized(100);
  score2=SimpleScore.valueOfInitialized(10);
  scoreDifferencePercentage=ScoreDifferencePercentage.calculateScoreDifferencePercentage(score1,score2);
  assertEquals(-0.9,scoreDifferencePercentage.getPercentageLevels()[0],tolerance);
  score1=SimpleScore.valueOfInitialized(-100);
  score2=SimpleScore.valueOfInitialized(-1);
  scoreDifferencePercentage=ScoreDifferencePercentage.calculateScoreDifferencePercentage(score1,score2);
  assertEquals(0.99,scoreDifferencePercentage.getPercentageLevels()[0],tolerance);
  score1=SimpleScore.valueOfInitialized(100);
  score2=SimpleScore.valueOfInitialized(1);
  scoreDifferencePercentage=ScoreDifferencePercentage.calculateScoreDifferencePercentage(score1,score2);
  assertEquals(-0.99,scoreDifferencePercentage.getPercentageLevels()[0],tolerance);
  HardSoftScore hardSoftScore1=HardSoftScore.valueOfInitialized(-100,-1);
  HardSoftScore hardSoftScore2=HardSoftScore.valueOfInitialized(-100,-1);
  scoreDifferencePercentage=ScoreDifferencePercentage.calculateScoreDifferencePercentage(hardSoftScore1,hardSoftScore2);
  assertEquals(0.0,scoreDifferencePercentage.getPercentageLevels()[0],tolerance);
  assertEquals(0.0,scoreDifferencePercentage.getPercentageLevels()[1],tolerance);
  hardSoftScore1=HardSoftScore.valueOfInitialized(-100,-100);
  hardSoftScore2=HardSoftScore.valueOfInitialized(-1,-10);
  scoreDifferencePercentage=ScoreDifferencePercentage.calculateScoreDifferencePercentage(hardSoftScore1,hardSoftScore2);
  assertEquals(0.99,scoreDifferencePercentage.getPercentageLevels()[0],tolerance);
  assertEquals(0.9,scoreDifferencePercentage.getPercentageLevels()[1],tolerance);
  hardSoftScore1=HardSoftScore.valueOfInitialized(100,100);
  hardSoftScore2=HardSoftScore.valueOfInitialized(1,10);
  scoreDifferencePercentage=ScoreDifferencePercentage.calculateScoreDifferencePercentage(hardSoftScore1,hardSoftScore2);
  assertEquals(-0.99,scoreDifferencePercentage.getPercentageLevels()[0],tolerance);
  assertEquals(-0.9,scoreDifferencePercentage.getPercentageLevels()[1],tolerance);
  hardSoftScore1=HardSoftScore.valueOfInitialized(100,-100);
  hardSoftScore2=HardSoftScore.valueOfInitialized(-100,200);
  scoreDifferencePercentage=ScoreDifferencePercentage.calculateScoreDifferencePercentage(hardSoftScore1,hardSoftScore2);
  assertEquals(-2,scoreDifferencePercentage.getPercentageLevels()[0],tolerance);
  assertEquals(3,scoreDifferencePercentage.getPercentageLevels()[1],tolerance);
}
