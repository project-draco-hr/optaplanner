{
  SolutionDescriptor solutionDescriptor=getSolutionDescriptor();
  Solution cloneSolution=solutionDescriptor.getSolutionCloner().cloneSolution(originalSolution);
  if (scoreDirectorFactory.isAssertClonedSolution()) {
    if (!ObjectUtils.equals(originalSolution.getScore(),cloneSolution.getScore())) {
      throw new IllegalStateException("Cloning corruption: " + "the original's score (" + originalSolution.getScore() + ") is different from the clone's score ("+ cloneSolution.getScore()+ ").\n"+ "Check the "+ SolutionCloner.class.getSimpleName()+ ".");
    }
    List<Object> originalEntityList=solutionDescriptor.getEntityList(originalSolution);
    Map<Object,Object> originalEntityMap=new IdentityHashMap<Object,Object>(originalEntityList.size());
    for (    Object originalEntity : originalEntityList) {
      originalEntityMap.put(originalEntity,null);
    }
    for (    Object cloneEntity : solutionDescriptor.getEntityList(cloneSolution)) {
      if (originalEntityMap.containsKey(cloneEntity)) {
        throw new IllegalStateException("Cloning corruption: " + "the same entity (" + cloneEntity + ") is present in both the original and the clone.\n"+ "So when a planning variable in the original solution changes, "+ "the cloned solution will change too.\n"+ "Check the "+ SolutionCloner.class.getSimpleName()+ ".");
      }
    }
  }
  return cloneSolution;
}
