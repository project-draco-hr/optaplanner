{
  if (resultSet == null) {
    return null;
  }
  int levelsSize=scoreDefinition.getLevelsSize();
  int[] scoreWeights=new int[levelsSize];
  int nullCount=0;
  for (int i=0; i < levelsSize; i++) {
    Integer scoreWeight=(Integer)StandardBasicTypes.INTEGER.nullSafeGet(resultSet,names[i],session,owner);
    if (scoreWeight == null) {
      nullCount++;
    }
 else {
      scoreWeights[i]=scoreWeight;
    }
  }
  if (nullCount == levelsSize) {
    return null;
  }
 else   if (nullCount != 0) {
    throw new IllegalStateException("The nullCount (" + nullCount + ") must be 0 or levelsSize ("+ levelsSize+ ").");
  }
  int hardLevelsSize=scoreDefinition.getHardLevelsSize();
  return BendableScore.valueOf(Arrays.copyOfRange(scoreWeights,0,hardLevelsSize),Arrays.copyOfRange(scoreWeights,hardLevelsSize,levelsSize));
}
