{
  allocationsPerProjectMap.get(allocation.getJob().getProject()).remove(allocation);
  Integer endDate=allocation.getEndDate();
  if (endDate != null && endDate >= maximalEndDate) {
    maximalEndDate=getMaximalEndDate();
    softScore=-(maximalEndDate - minimalReleaseDate);
  }
  mediumScore=-getTotalProjectDelay(allocation);
  ExecutionMode executionMode=allocation.getExecutionMode();
  if (executionMode != null && allocation.getJob().getJobType() == JobType.STANDARD) {
    for (    ResourceRequirement resourceRequirement : executionMode.getResourceRequirementList()) {
      ResourceCapacityTracker tracker=resourceCapacityTrackerMap.get(resourceRequirement.getResource());
      hardScore-=tracker.getHardScore();
      tracker.retract(resourceRequirement,allocation);
      hardScore+=tracker.getHardScore();
    }
  }
}
