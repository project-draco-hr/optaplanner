{
  int availableProcessorCount=Runtime.getRuntime().availableProcessors();
  int resolvedThreadPoolSize;
  if (threadPoolSize == null || threadPoolSize.equals(THREAD_POOL_SIZE_AUTO)) {
    resolvedThreadPoolSize=availableProcessorCount <= 1 ? 1 : availableProcessorCount - 1;
  }
 else {
    resolvedThreadPoolSize=ConfigUtils.resolveThreadPoolSizeScript("threadPoolSize",threadPoolSize,THREAD_POOL_SIZE_AUTO);
  }
  if (resolvedThreadPoolSize < 1) {
    throw new IllegalArgumentException("The threadPoolSize (" + threadPoolSize + ") resulted in a resolvedThreadPoolSize ("+ resolvedThreadPoolSize+ ") that is lower than 1.");
  }
  if (resolvedThreadPoolSize > availableProcessorCount) {
    logger.warn("Because the resolvedThreadPoolSize (" + resolvedThreadPoolSize + ") is higher than the availableProcessorCount ("+ availableProcessorCount+ "), it is reduced to availableProcessorCount.");
  }
  return Executors.newFixedThreadPool(resolvedThreadPoolSize);
}
