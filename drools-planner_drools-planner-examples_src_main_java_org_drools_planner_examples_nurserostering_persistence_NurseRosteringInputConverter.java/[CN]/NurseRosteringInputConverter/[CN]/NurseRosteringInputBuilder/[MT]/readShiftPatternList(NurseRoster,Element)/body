{
  if (patternsElement == null) {
    return;
  }
  List<Element> patternElementList=(List<Element>)patternsElement.getChildren();
  List<ShiftPattern> shiftPatternList=new ArrayList<ShiftPattern>(patternElementList.size());
  shiftPatternMap=new HashMap<String,ShiftPattern>(patternElementList.size());
  long id=0L;
  for (  Element element : patternElementList) {
    assertElementName(element,"Pattern");
    ShiftPattern shiftPattern=new ShiftPattern();
    shiftPattern.setId(id);
    shiftPattern.setCode(element.getAttribute("ID").getValue());
    shiftPattern.setWeight(element.getAttribute("weight").getIntValue());
    List<Element> patternEntryElementList=(List<Element>)element.getChild("PatternEntries").getChildren();
    for (    Element patternEntryElement : patternEntryElementList) {
      assertElementName(patternEntryElement,"PatternEntry");
      Element shiftTypeElement=patternEntryElement.getChild("ShiftType");
      ShiftType shiftType=shiftTypeMap.get(shiftTypeElement.getText());
      if (shiftType == null) {
        if (shiftTypeElement.getText().equals("Any")) {
        }
 else         if (shiftTypeElement.getText().equals("None")) {
        }
 else {
          throw new IllegalArgumentException("The shiftType (" + shiftTypeElement.getText() + ") of shiftPattern ("+ shiftPattern.getCode()+ ") does not exist.");
        }
      }
    }
    shiftPatternList.add(shiftPattern);
    shiftPatternMap.put(shiftPattern.getCode(),shiftPattern);
    id++;
  }
  nurseRoster.setShiftPatternList(shiftPatternList);
}
