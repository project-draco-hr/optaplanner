{
  ConstructionHeuristicSolverPhaseScope phaseScope=new ConstructionHeuristicSolverPhaseScope(solverScope);
  phaseStarted(phaseScope);
  ConstructionHeuristicStepScope stepScope=new ConstructionHeuristicStepScope(phaseScope);
  for (  Placement placement : entityPlacer) {
    stepStarted(stepScope);
    decider.decideNextStep(stepScope,placement);
    if (stepScope.getStep() == null) {
      if (termination.isPhaseTerminated(phaseScope)) {
        logger.trace("    Step index ({}), time spend ({}) terminated without picking a nextStep.",stepScope.getStepIndex(),stepScope.getPhaseScope().calculateSolverTimeMillisSpend());
      }
 else       if (stepScope.getSelectedMoveCount() == 0L) {
        logger.warn("    No doable selected move at step index ({}), time spend ({})." + " Terminating phase early.",stepScope.getStepIndex(),stepScope.getPhaseScope().calculateSolverTimeMillisSpend());
      }
 else {
        throw new IllegalStateException("The step index (" + stepScope.getStepIndex() + ") has selected move count ("+ stepScope.getSelectedMoveCount()+ ") but failed to pick a nextStep ("+ stepScope.getStep()+ ").");
      }
      break;
    }
    doStep(stepScope);
    stepEnded(stepScope);
    phaseScope.setLastCompletedStepScope(stepScope);
    stepScope=new ConstructionHeuristicStepScope(phaseScope);
    if (termination.isPhaseTerminated(phaseScope)) {
      break;
    }
  }
  phaseEnded(phaseScope);
}
