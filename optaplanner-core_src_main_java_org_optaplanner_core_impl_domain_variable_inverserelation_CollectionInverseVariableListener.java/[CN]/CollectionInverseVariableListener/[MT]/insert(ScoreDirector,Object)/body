{
  Object shadowEntity=sourceVariableDescriptor.getValue(entity);
  if (shadowEntity != null) {
    Collection shadowCollection=(Collection)shadowVariableDescriptor.getValue(shadowEntity);
    if (shadowCollection == null) {
      throw new IllegalStateException("The entity (" + entity + ") has a variable ("+ sourceVariableDescriptor.getVariableName()+ ") with value ("+ shadowEntity+ ") which has a sourceVariableName variable ("+ shadowVariableDescriptor.getVariableName()+ ") with a value ("+ shadowCollection+ ") which is null.\n"+ "Verify the consistency of your input problem for that bi-directional relationship.\n"+ "Every non-singleton inverse variable can never be null. It should at least be an empty "+ Collection.class.getSimpleName()+ " instead.");
    }
    scoreDirector.beforeVariableChanged(shadowVariableDescriptor,shadowEntity);
    boolean added=shadowCollection.add(entity);
    if (!added) {
      throw new IllegalStateException("The entity (" + entity + ") has a variable ("+ sourceVariableDescriptor.getVariableName()+ ") with value ("+ shadowEntity+ ") which has a sourceVariableName variable ("+ shadowVariableDescriptor.getVariableName()+ ") with a value ("+ shadowCollection+ ") which already contained the entity ("+ entity+ ").\n"+ "Verify the consistency of your input problem for that bi-directional relationship.");
    }
    scoreDirector.afterVariableChanged(shadowVariableDescriptor,shadowEntity);
  }
}
