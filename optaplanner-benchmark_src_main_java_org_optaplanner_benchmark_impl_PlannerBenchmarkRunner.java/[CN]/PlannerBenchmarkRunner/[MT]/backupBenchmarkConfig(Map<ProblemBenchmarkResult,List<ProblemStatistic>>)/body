{
  Map<SolverBenchmarkResult,ConfigBackup> configBackupMap=new HashMap<SolverBenchmarkResult,ConfigBackup>(plannerBenchmarkResult.getSolverBenchmarkResultList().size());
  for (  SolverBenchmarkResult solverBenchmarkResult : plannerBenchmarkResult.getSolverBenchmarkResultList()) {
    TerminationConfig originalTerminationConfig=solverBenchmarkResult.getSolverConfig().getTerminationConfig();
    ConfigBackup configBackup=new ConfigBackup(originalTerminationConfig);
    for (    SingleBenchmarkResult singleBenchmarkResult : solverBenchmarkResult.getSingleBenchmarkResultList()) {
      List<PureSingleStatistic> originalPureSingleStatisticList=singleBenchmarkResult.getPureSingleStatisticList();
      List<PureSingleStatistic> singleBenchmarkStatisticPutResult=configBackup.getPureSingleStatisticMap().put(singleBenchmarkResult,originalPureSingleStatisticList);
      if (singleBenchmarkStatisticPutResult != null) {
        throw new IllegalStateException("SingleBenchmarkStatisticMap of ConfigBackup ( " + configBackup + " ) already contained key ( "+ singleBenchmarkResult+ " ) with value ( "+ singleBenchmarkStatisticPutResult+ " ).");
      }
      singleBenchmarkResult.setPureSingleStatisticList(Collections.<PureSingleStatistic>emptyList());
      ProblemBenchmarkResult problemBenchmarkResult=singleBenchmarkResult.getProblemBenchmarkResult();
      List<ProblemStatistic> originalProblemStatisticList=problemBenchmarkResult.getProblemStatisticList();
      if (!originalProblemStatisticMap.containsKey(problemBenchmarkResult)) {
        List<ProblemStatistic> problemStatisticPutResult=originalProblemStatisticMap.put(problemBenchmarkResult,originalProblemStatisticList);
        if (problemStatisticPutResult != null && !originalProblemStatisticList.isEmpty()) {
          throw new IllegalStateException("OriginalProblemStatisticMap already contained key ( " + problemBenchmarkResult + " ) with value ( "+ problemStatisticPutResult+ " ).");
        }
      }
      singleBenchmarkResult.getProblemBenchmarkResult().setProblemStatisticList(Collections.<ProblemStatistic>emptyList());
      singleBenchmarkResult.initSingleStatisticMap();
    }
    ConfigBackup configBackupPutResult=configBackupMap.put(solverBenchmarkResult,configBackup);
    if (configBackupPutResult != null) {
      throw new IllegalStateException("ConfigBackupMap already contained key ( " + solverBenchmarkResult + " ) with value ( "+ configBackupPutResult+ " ).");
    }
  }
  return configBackupMap;
}
