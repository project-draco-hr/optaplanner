{
  if (finalistScore == null) {
    return 1;
  }
  for (int i=0; i < lastStepLevelNumbers.length; i++) {
    boolean moveIsHigher=((Comparable)moveLevelNumbers[i]).compareTo(lastStepLevelNumbers[i]) > 0;
    boolean finalistIsHigher=((Comparable)finalistLevelNumbers[i]).compareTo(lastStepLevelNumbers[i]) > 0;
    if (moveIsHigher) {
      if (finalistIsHigher) {
        break;
      }
 else {
        return 1;
      }
    }
 else     if (finalistIsHigher) {
      return -1;
    }
  }
  return moveScore.compareTo(finalistScore);
}
