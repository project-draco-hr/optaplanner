{
  if (!(uncorruptedScoreDirector instanceof DroolsScoreDirector)) {
    return;
  }
  Set<ConstraintOccurrence> uncorruptedConstraintOccurrenceSet=new LinkedHashSet<ConstraintOccurrence>((Collection<ConstraintOccurrence>)((DroolsScoreDirector)uncorruptedScoreDirector).kieSession.getObjects(new ClassObjectFilter(ConstraintOccurrence.class)));
  if (!uncorruptedConstraintOccurrenceSet.isEmpty()) {
    Set<ConstraintOccurrence> corruptedConstraintOccurrenceSet=new LinkedHashSet<ConstraintOccurrence>((Collection<ConstraintOccurrence>)((DroolsScoreDirector)corruptedScoreDirector).kieSession.getObjects(new ClassObjectFilter(ConstraintOccurrence.class)));
    if (corruptedConstraintOccurrenceSet.isEmpty()) {
      analysis.append("  Migration analysis: Corrupted ConstraintMatchTotals:\n");
      for (      ScoreConstraintMatchTotal constraintMatchTotal : corruptedScoreDirector.getConstraintMatchTotals()) {
        analysis.append("    ").append(constraintMatchTotal).append("\n");
      }
    }
 else {
      analysis.append("  Legacy analysis: Corrupted ConstraintOccurrence totals:\n");
      appendLegacyTotals(analysis,corruptedConstraintOccurrenceSet);
    }
    analysis.append("  Legacy analysis: Uncorrupted ConstraintOccurrence totals:\n");
    appendLegacyTotals(analysis,uncorruptedConstraintOccurrenceSet);
  }
}
