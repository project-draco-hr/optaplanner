{
  BendableScoreHolder scoreHolder=new BendableScoreHolder(constraintMatchEnabled,1,2);
  scoreHolder.addHardConstraintMatch(createRuleContext("scoreRule1"),0,-1000);
  RuleContext ruleContext2=createRuleContext("scoreRule2");
  scoreHolder.addHardConstraintMatch(ruleContext2,0,-200);
  callUnMatch(ruleContext2);
  RuleContext ruleContext3=createRuleContext("scoreRule3");
  scoreHolder.addSoftConstraintMatch(ruleContext3,0,-30);
  scoreHolder.addSoftConstraintMatch(ruleContext3,0,-3);
  scoreHolder.addSoftConstraintMatch(createRuleContext("scoreRule4"),1,-4);
  assertEquals(BendableScore.valueOf(new int[]{-1000},new int[]{-3,-4}),scoreHolder.extractScore());
  if (constraintMatchEnabled) {
    assertEquals(4,scoreHolder.getConstraintMatchTotals().size());
  }
}
