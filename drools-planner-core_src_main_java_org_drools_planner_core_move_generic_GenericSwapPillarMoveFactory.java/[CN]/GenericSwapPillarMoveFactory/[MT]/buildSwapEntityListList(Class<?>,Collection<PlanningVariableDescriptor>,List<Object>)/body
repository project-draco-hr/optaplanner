{
  Map<List<Object>,List<Object>> valueStateToSwapEntityListMap=new LinkedHashMap<List<Object>,List<Object>>(globalEntityList.size());
  for (  Object entity : globalEntityList) {
    if (entityClass.isInstance(entity)) {
      List<Object> valueState=new ArrayList<Object>(variableDescriptors.size());
      for (      PlanningVariableDescriptor variableDescriptor : variableDescriptors) {
        Object value=variableDescriptor.getValue(entity);
        valueState.add(value);
      }
      List<Object> swapEntityList=valueStateToSwapEntityListMap.get(valueState);
      if (swapEntityList == null) {
        swapEntityList=new ArrayList<Object>();
        valueStateToSwapEntityListMap.put(valueState,swapEntityList);
      }
      swapEntityList.add(entity);
    }
  }
  return new ArrayList<List<Object>>(valueStateToSwapEntityListMap.values());
}
