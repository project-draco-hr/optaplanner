{
  List<Move> moveList=new ArrayList<Move>();
  List<Object> globalEntityList=solutionDescriptor.getPlanningEntityList(solution);
  for (  Class<?> entityClass : solutionDescriptor.getPlanningEntityImplementationClassSet()) {
    PlanningEntityDescriptor entityDescriptor=solutionDescriptor.getPlanningEntityDescriptor(entityClass);
    Collection<PlanningVariableDescriptor> variableDescriptors=entityDescriptor.getPlanningVariableDescriptors();
    List<List<Object>> swapEntityListList=buildSwapEntityListList(entityClass,variableDescriptors,globalEntityList);
    for (ListIterator<List<Object>> leftIt=swapEntityListList.listIterator(); leftIt.hasNext(); ) {
      List<Object> leftPlanningEntityList=leftIt.next();
      for (ListIterator<List<Object>> rightIt=swapEntityListList.listIterator(leftIt.nextIndex()); rightIt.hasNext(); ) {
        List<Object> rightPlanningEntityList=rightIt.next();
        moveList.add(new GenericSwapPillarMove(variableDescriptors,leftPlanningEntityList,rightPlanningEntityList));
      }
    }
  }
  return moveList;
}
