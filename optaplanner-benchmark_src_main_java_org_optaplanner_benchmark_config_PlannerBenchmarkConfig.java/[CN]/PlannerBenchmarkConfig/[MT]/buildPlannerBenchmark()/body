{
  validate();
  generateSolverBenchmarkConfigNames();
  inherit();
  DefaultPlannerBenchmark plannerBenchmarkResult=new DefaultPlannerBenchmark();
  plannerBenchmarkResult.setName(name);
  PlannerBenchmarkRunner plannerBenchmarkRunner=new PlannerBenchmarkRunner(plannerBenchmarkResult);
  plannerBenchmarkRunner.setBenchmarkDirectory(benchmarkDirectory);
  plannerBenchmarkResult.setParallelBenchmarkCount(resolveParallelBenchmarkCount());
  plannerBenchmarkResult.setWarmUpTimeMillisSpend(calculateWarmUpTimeMillisSpendTotal());
  BenchmarkReport benchmarkReport=new BenchmarkReport(plannerBenchmarkResult);
  plannerBenchmarkRunner.setBenchmarkReport(benchmarkReport);
  benchmarkReport.setLocale(benchmarkReportLocale == null ? Locale.getDefault() : benchmarkReportLocale);
  supplySolverBenchmarkRanking(benchmarkReport);
  List<SolverBenchmark> solverBenchmarkList=new ArrayList<SolverBenchmark>(solverBenchmarkConfigList.size());
  List<ProblemBenchmark> unifiedProblemBenchmarkList=new ArrayList<ProblemBenchmark>();
  plannerBenchmarkResult.setUnifiedProblemBenchmarkList(unifiedProblemBenchmarkList);
  for (  SolverBenchmarkConfig solverBenchmarkConfig : solverBenchmarkConfigList) {
    SolverBenchmark solverBenchmark=solverBenchmarkConfig.buildSolverBenchmark(plannerBenchmarkResult);
    solverBenchmarkList.add(solverBenchmark);
  }
  plannerBenchmarkResult.setSolverBenchmarkList(solverBenchmarkList);
  return plannerBenchmarkRunner;
}
