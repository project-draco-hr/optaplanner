{
  File resumeBenchmarkDir=null;
  File[] benchmarkDirs=benchmarkDirectory.listFiles();
  if (forceNoResume || benchmarkDirs == null || benchmarkDirs.length < 1) {
    return null;
  }
 else {
    final Pattern pattern=Pattern.compile("\\d{4}-\\d{2}-\\d{2}_\\d{6}");
    final DateFormat dateFormat=new SimpleDateFormat("yyyy-MM-dd_HHmmss");
    Arrays.sort(benchmarkDirs,new Comparator<File>(){
      public int compare(      File file1,      File file2){
        return parseResumeDirName(file1,pattern,dateFormat).compareTo(parseResumeDirName(file2,pattern,dateFormat));
      }
    }
);
    if (!new File(benchmarkDirs[benchmarkDirs.length - 1],"index.html").exists()) {
      resumeBenchmarkDir=benchmarkDirs[benchmarkDirs.length - 1];
      File latestResumeConfig=new File(resumeBenchmarkDir,"resumeBenchmarkConfig.xml");
      if (!latestResumeConfig.exists()) {
        throw new IllegalArgumentException("Resume benchmark config file is not present in" + " resume directory (" + resumeBenchmarkDir.getName() + ").");
      }
      try {
        if (!resumeConfig.equals(FileUtils.readFileToString(latestResumeConfig))) {
          throw new IllegalArgumentException("Resume benchmark config file is not compatible with" + " current configuration.");
        }
      }
 catch (      IOException ex) {
        throw new IllegalStateException("Error while reading resume configuration file",ex);
      }
    }
  }
  return resumeBenchmarkDir;
}
