{
  Score undoScore=calculateScore();
  if (!undoScore.equals(beforeMoveScore)) {
    getScoreDirector().assertWorkingScoreFromScratch(undoScore,undoMove);
    throw new IllegalStateException("UndoMove corruption: the beforeMoveScore (" + beforeMoveScore + ") is not the undoScore ("+ undoScore+ ") which is the uncorruptedScore ("+ undoScore+ ") of the workingSolution.\n"+ "  1) Enable EnvironmentMode "+ EnvironmentMode.FULL_ASSERT+ " (if you haven't already) to fail-faster in case there's a score corruption.\n"+ "  2) Check the Move.createUndoMove(...) method of the moveClass ("+ move.getClass()+ ")."+ " The move ("+ move+ ") might have a corrupted undoMove ("+ undoMove+ ").\n"+ "  3) Check your custom "+ VariableListener.class.getSimpleName()+ "s (if you have any)"+ " for shadow variables that are used by the score constraints with a different score weight"+ " between the beforeMoveScore ("+ beforeMoveScore+ ") and the undoScore ("+ undoScore+ ").");
  }
}
