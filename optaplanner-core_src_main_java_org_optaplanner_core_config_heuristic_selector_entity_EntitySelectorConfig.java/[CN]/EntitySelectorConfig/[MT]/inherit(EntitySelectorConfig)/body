{
  super.inherit(inheritedConfig);
  id=ConfigUtils.inheritOverwritableProperty(id,inheritedConfig.getId());
  mimicSelectorRef=ConfigUtils.inheritOverwritableProperty(mimicSelectorRef,inheritedConfig.getMimicSelectorRef());
  entityClass=ConfigUtils.inheritOverwritableProperty(entityClass,inheritedConfig.getEntityClass());
  if (nearbyOriginEntitySelectorConfig == null) {
    nearbyOriginEntitySelectorConfig=inheritedConfig.getNearbyOriginEntitySelectorConfig();
  }
 else   if (inheritedConfig.getNearbyOriginEntitySelectorConfig() != null) {
    nearbyOriginEntitySelectorConfig.inherit(inheritedConfig.getNearbyOriginEntitySelectorConfig());
  }
  nearEntityNearbyMethodClass=ConfigUtils.inheritOverwritableProperty(nearEntityNearbyMethodClass,inheritedConfig.getNearEntityNearbyMethodClass());
  cacheType=ConfigUtils.inheritOverwritableProperty(cacheType,inheritedConfig.getCacheType());
  selectionOrder=ConfigUtils.inheritOverwritableProperty(selectionOrder,inheritedConfig.getSelectionOrder());
  filterClassList=ConfigUtils.inheritOverwritableProperty(filterClassList,inheritedConfig.getFilterClassList());
  sorterManner=ConfigUtils.inheritOverwritableProperty(sorterManner,inheritedConfig.getSorterManner());
  sorterComparatorClass=ConfigUtils.inheritOverwritableProperty(sorterComparatorClass,inheritedConfig.getSorterComparatorClass());
  sorterWeightFactoryClass=ConfigUtils.inheritOverwritableProperty(sorterWeightFactoryClass,inheritedConfig.getSorterWeightFactoryClass());
  sorterOrder=ConfigUtils.inheritOverwritableProperty(sorterOrder,inheritedConfig.getSorterOrder());
  sorterClass=ConfigUtils.inheritOverwritableProperty(sorterClass,inheritedConfig.getSorterClass());
  probabilityWeightFactoryClass=ConfigUtils.inheritOverwritableProperty(probabilityWeightFactoryClass,inheritedConfig.getProbabilityWeightFactoryClass());
  selectedCountLimit=ConfigUtils.inheritOverwritableProperty(selectedCountLimit,inheritedConfig.getSelectedCountLimit());
}
