{
  if (resolvedSelectionOrder == SelectionOrder.SORTED) {
    SelectionSorter sorter;
    if (sorterManner != null) {
      sorter=sorterManner.determineSorter(entitySelector.getEntityDescriptor());
    }
 else     if (sorterComparatorClass != null) {
      Comparator<Object> sorterComparator=ConfigUtils.newInstance(this,"sorterComparatorClass",sorterComparatorClass);
      sorter=new ComparatorSelectionSorter(sorterComparator,SelectionSorterOrder.resolve(sorterOrder));
    }
 else     if (sorterWeightFactoryClass != null) {
      SelectionSorterWeightFactory sorterWeightFactory=ConfigUtils.newInstance(this,"sorterWeightFactoryClass",sorterWeightFactoryClass);
      sorter=new WeightFactorySelectionSorter(sorterWeightFactory,SelectionSorterOrder.resolve(sorterOrder));
    }
 else     if (sorterClass != null) {
      sorter=ConfigUtils.newInstance(this,"sorterClass",sorterClass);
    }
 else {
      throw new IllegalArgumentException("The entitySelectorConfig (" + this + ") with resolvedSelectionOrder ("+ resolvedSelectionOrder+ ") needs a sorterManner ("+ sorterManner+ ") or a sorterComparatorClass ("+ sorterComparatorClass+ ") or a sorterWeightFactoryClass ("+ sorterWeightFactoryClass+ ") or a sorterClass ("+ sorterClass+ ").");
    }
    entitySelector=new SortingEntitySelector(entitySelector,resolvedCacheType,sorter);
  }
  return entitySelector;
}
