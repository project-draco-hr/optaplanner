{
  PlanningEntityDescriptor entityDescriptor=deduceEntityDescriptor(configPolicy.getSolutionDescriptor(),entityClass);
  SelectionCacheType resolvedCacheType=SelectionCacheType.resolve(cacheType,minimumCacheType);
  SelectionOrder resolvedSelectionOrder=SelectionOrder.resolve(selectionOrder,inheritedSelectionOrder);
  validateCacheTypeVersusSelectionOrder(resolvedCacheType,resolvedSelectionOrder);
  validateSorting(resolvedSelectionOrder);
  validateProbability(resolvedSelectionOrder);
  EntitySelector entitySelector=buildBaseEntitySelector(configPolicy,entityDescriptor,SelectionCacheType.max(minimumCacheType,resolvedCacheType),determineBaseRandomSelection(entityDescriptor,resolvedCacheType,resolvedSelectionOrder));
  entitySelector=applyFiltering(entityDescriptor,resolvedCacheType,resolvedSelectionOrder,entitySelector);
  entitySelector=applySorting(resolvedCacheType,resolvedSelectionOrder,entitySelector);
  entitySelector=applyProbability(resolvedCacheType,resolvedSelectionOrder,entitySelector);
  entitySelector=applyShuffling(resolvedCacheType,resolvedSelectionOrder,entitySelector);
  entitySelector=applyCaching(resolvedCacheType,resolvedSelectionOrder,entitySelector);
  return entitySelector;
}
