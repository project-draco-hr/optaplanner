{
  logger.info("Scheduling delete of machine ({}).",machine);
  doProblemFactChange(new ProblemFactChange(){
    public void doChange(    ScoreDirector scoreDirector){
      MachineReassignment machineReassignment=(MachineReassignment)scoreDirector.getWorkingSolution();
      for (      MrProcessAssignment processAssignment : machineReassignment.getProcessAssignmentList()) {
        if (ObjectUtils.equals(processAssignment.getMachine(),machine)) {
          scoreDirector.beforeEntityRemoved(processAssignment);
          processAssignment.setMachine(null);
          scoreDirector.afterEntityRemoved(processAssignment);
        }
      }
      machineReassignment.setMachineList(new ArrayList<MrMachine>(machineReassignment.getMachineList()));
      for (Iterator<MrMachine> it=machineReassignment.getMachineList().iterator(); it.hasNext(); ) {
        MrMachine workingMachine=it.next();
        if (ObjectUtils.equals(workingMachine,machine)) {
          scoreDirector.beforeProblemFactRemoved(workingMachine);
          it.remove();
          scoreDirector.beforeProblemFactRemoved(workingMachine);
          break;
        }
      }
    }
  }
);
}
