{
  this.entityDescriptor=entityDescriptor;
  this.variableMemberAccessor=variableMemberAccessor;
  variableName=variableMemberAccessor.getName();
  if (variableMemberAccessor.getType().isPrimitive()) {
    throw new IllegalStateException("The entityClass (" + entityDescriptor.getEntityClass() + ") has a "+ PlanningVariable.class.getSimpleName()+ " annotated member ("+ variableMemberAccessor+ ") that returns a primitive type ("+ variableMemberAccessor.getType()+ "). This means it cannot represent an uninitialized variable as null"+ " and the Construction Heuristics think it's already initialized.\n"+ "  Maybe let the member ("+ getSimpleEntityAndVariableName()+ ") return its primitive wrapper type instead.");
  }
}
