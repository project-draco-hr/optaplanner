{
  if (getterMethod.getParameterTypes().length != 0) {
    throw new IllegalStateException("The getterMethod (" + getterMethod + ") with a "+ annotationClass.getSimpleName()+ " annotation must not have any parameters ("+ Arrays.toString(getterMethod.getParameterTypes())+ ").");
  }
  String methodName=getterMethod.getName();
  if (methodName.startsWith(PROPERTY_ACCESSOR_PREFIX_GET)) {
    if (getterMethod.getReturnType() != void.class) {
      throw new IllegalStateException("The getterMethod (" + getterMethod + ") with a "+ annotationClass.getSimpleName()+ " annotation must have a non-void return type ("+ getterMethod.getReturnType()+ ").");
    }
  }
 else   if (methodName.startsWith(PROPERTY_ACCESSOR_PREFIX_IS)) {
    if (getterMethod.getReturnType() == boolean.class) {
      throw new IllegalStateException("The getterMethod (" + getterMethod + ") with a "+ annotationClass.getSimpleName()+ " annotation must have a primitive boolean return type ("+ getterMethod.getReturnType()+ ") or use another prefix in its methodName ("+ methodName+ ").");
    }
  }
 else {
    throw new IllegalStateException("The getterMethod (" + getterMethod + ") with a "+ annotationClass.getSimpleName()+ " annotation has a methodName ("+ methodName+ ") that does not start with a valid prefix ("+ Arrays.toString(PROPERTY_ACCESSOR_PREFIXES)+ ").");
  }
}
