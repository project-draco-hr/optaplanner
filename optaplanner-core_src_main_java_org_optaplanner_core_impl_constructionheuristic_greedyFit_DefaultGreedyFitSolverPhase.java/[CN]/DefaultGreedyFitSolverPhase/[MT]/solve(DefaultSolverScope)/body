{
  GreedyFitSolverPhaseScope phaseScope=new GreedyFitSolverPhaseScope(solverScope);
  phaseStarted(phaseScope);
  GreedyFitStepScope stepScope=new GreedyFitStepScope(phaseScope);
  Iterator it=greedyPlanningEntitySelector.iterator();
  while (!termination.isPhaseTerminated(phaseScope) && it.hasNext()) {
    Object planningEntity=it.next();
    stepScope.setPlanningEntity(planningEntity);
    stepStarted(stepScope);
    greedyDecider.decideNextStep(stepScope);
    Move nextStep=stepScope.getStep();
    if (nextStep == null) {
      logger.warn("    Cancelled step index ({}), time spend ({}): there is no doable move. Terminating phase early.",stepScope.getStepIndex(),phaseScope.calculateSolverTimeMillisSpend());
      break;
    }
    nextStep.doMove(stepScope.getScoreDirector());
    phaseScope.getWorkingSolution().setScore(stepScope.getScore());
    if (assertStepScoreFromScratch) {
      phaseScope.assertWorkingScoreFromScratch(stepScope.getScore(),nextStep);
    }
    if (assertExpectedStepScore) {
      phaseScope.assertExpectedWorkingScore(stepScope.getScore(),nextStep);
    }
    stepEnded(stepScope);
    phaseScope.setLastCompletedStepScope(stepScope);
    stepScope=new GreedyFitStepScope(phaseScope);
  }
  phaseEnded(phaseScope);
}
