{
switch (stepCountingHillClimbingType) {
case SELECTED_MOVE:
    long selectedMoveCount=stepScope.getSelectedMoveCount();
  return selectedMoveCount > Integer.MAX_VALUE ? Integer.MAX_VALUE : (int)selectedMoveCount;
case ACCEPTED_MOVE:
long acceptedMoveCount=stepScope.getAcceptedMoveCount();
return acceptedMoveCount > Integer.MAX_VALUE ? Integer.MAX_VALUE : (int)acceptedMoveCount;
case STEP:
return 1;
case EQUAL_OR_IMPROVING_STEP:
return stepScope.getScore().compareTo(stepScope.getPhaseScope().getLastCompletedStepScope().getScore()) >= 0 ? 1 : 0;
case IMPROVING_STEP:
return stepScope.getScore().compareTo(stepScope.getPhaseScope().getLastCompletedStepScope().getScore()) > 0 ? 1 : 0;
default :
throw new IllegalStateException("The stepCountingHillClimbingType (" + stepCountingHillClimbingType + ") is not implemented.");
}
}
