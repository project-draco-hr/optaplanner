{
  final MoveSelector baseMoveSelector=SelectorTestUtils.mockMoveSelector(DummyMove.class);
  MoveSelectorConfig moveSelectorConfig=new MoveSelectorConfig(){
    @Override protected MoveSelector buildBaseMoveSelector(    EnvironmentMode environmentMode,    SolutionDescriptor solutionDescriptor,    SelectionCacheType minimumCacheType,    SelectionOrder resolvedSelectionOrder){
      assertEquals(SelectionOrder.ORIGINAL,resolvedSelectionOrder);
      assertEquals(SelectionCacheType.STEP,minimumCacheType);
      return baseMoveSelector;
    }
  }
;
  moveSelectorConfig.setCacheType(SelectionCacheType.STEP);
  SolutionDescriptor solutionDescriptor=SelectorTestUtils.mockSolutionDescriptor();
  MoveSelector moveSelector=moveSelectorConfig.buildMoveSelector(EnvironmentMode.REPRODUCIBLE,solutionDescriptor,SelectionCacheType.JUST_IN_TIME,SelectionOrder.ORIGINAL);
  assertTrue(moveSelector instanceof CachingMoveSelector);
  moveSelector=((CachingMoveSelector)moveSelector).getChildMoveSelector();
  assertSame(baseMoveSelector,moveSelector);
}
