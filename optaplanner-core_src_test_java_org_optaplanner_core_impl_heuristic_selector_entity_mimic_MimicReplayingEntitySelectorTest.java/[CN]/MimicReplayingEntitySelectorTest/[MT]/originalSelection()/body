{
  EntitySelector childEntitySelector=SelectorTestUtils.mockEntitySelector(TestdataEntity.class,new TestdataEntity("e1"),new TestdataEntity("e2"),new TestdataEntity("e3"));
  MimicRecordingEntitySelector mimicRecordingEntitySelector=new MimicRecordingEntitySelector(childEntitySelector);
  MimicReplayingEntitySelector mimicReplayingEntitySelector=new MimicReplayingEntitySelector(mimicRecordingEntitySelector);
  DefaultSolverScope solverScope=mock(DefaultSolverScope.class);
  mimicRecordingEntitySelector.solvingStarted(solverScope);
  mimicReplayingEntitySelector.solvingStarted(solverScope);
  AbstractSolverPhaseScope phaseScopeA=mock(AbstractSolverPhaseScope.class);
  when(phaseScopeA.getSolverScope()).thenReturn(solverScope);
  mimicRecordingEntitySelector.phaseStarted(phaseScopeA);
  mimicReplayingEntitySelector.phaseStarted(phaseScopeA);
  AbstractStepScope stepScopeA1=mock(AbstractStepScope.class);
  when(stepScopeA1.getPhaseScope()).thenReturn(phaseScopeA);
  mimicRecordingEntitySelector.stepStarted(stepScopeA1);
  mimicReplayingEntitySelector.stepStarted(stepScopeA1);
  runOriginalAsserts(mimicRecordingEntitySelector,mimicReplayingEntitySelector);
  mimicRecordingEntitySelector.stepEnded(stepScopeA1);
  mimicReplayingEntitySelector.stepEnded(stepScopeA1);
  AbstractStepScope stepScopeA2=mock(AbstractStepScope.class);
  when(stepScopeA2.getPhaseScope()).thenReturn(phaseScopeA);
  mimicRecordingEntitySelector.stepStarted(stepScopeA2);
  mimicReplayingEntitySelector.stepStarted(stepScopeA2);
  runOriginalAsserts(mimicRecordingEntitySelector,mimicReplayingEntitySelector);
  mimicRecordingEntitySelector.stepEnded(stepScopeA2);
  mimicReplayingEntitySelector.stepEnded(stepScopeA2);
  mimicRecordingEntitySelector.phaseEnded(phaseScopeA);
  mimicReplayingEntitySelector.phaseEnded(phaseScopeA);
  AbstractSolverPhaseScope phaseScopeB=mock(AbstractSolverPhaseScope.class);
  when(phaseScopeB.getSolverScope()).thenReturn(solverScope);
  mimicRecordingEntitySelector.phaseStarted(phaseScopeB);
  mimicReplayingEntitySelector.phaseStarted(phaseScopeB);
  AbstractStepScope stepScopeB1=mock(AbstractStepScope.class);
  when(stepScopeB1.getPhaseScope()).thenReturn(phaseScopeB);
  mimicRecordingEntitySelector.stepStarted(stepScopeB1);
  mimicReplayingEntitySelector.stepStarted(stepScopeB1);
  runOriginalAsserts(mimicRecordingEntitySelector,mimicReplayingEntitySelector);
  mimicRecordingEntitySelector.stepEnded(stepScopeB1);
  mimicReplayingEntitySelector.stepEnded(stepScopeB1);
  mimicRecordingEntitySelector.phaseEnded(phaseScopeB);
  mimicReplayingEntitySelector.phaseEnded(phaseScopeB);
  mimicRecordingEntitySelector.solvingEnded(solverScope);
  mimicReplayingEntitySelector.solvingEnded(solverScope);
  verifySolverPhaseLifecycle(childEntitySelector,1,2,3);
  verify(childEntitySelector,times(3)).iterator();
}
