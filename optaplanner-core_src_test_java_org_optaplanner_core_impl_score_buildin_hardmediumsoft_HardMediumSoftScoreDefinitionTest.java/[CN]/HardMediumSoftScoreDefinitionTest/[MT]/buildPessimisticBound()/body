{
  int scoreSize=new HardMediumSoftScoreDefinition().getLevelsSize();
  InitializingScoreTrendLevel[] levels=new InitializingScoreTrendLevel[scoreSize];
  for (int i=0; i < scoreSize; i++) {
    levels[i]=InitializingScoreTrendLevel.ONLY_UP;
  }
  HardMediumSoftScore score=HardMediumSoftScore.parseScore("-999hard/-999medium/-999soft");
  InitializingScoreTrend scoreTrend=new InitializingScoreTrend(levels);
  HardMediumSoftScoreDefinition hardMediumSoftScoreDefinition=new HardMediumSoftScoreDefinition();
  HardMediumSoftScore score2=hardMediumSoftScoreDefinition.buildPessimisticBound(scoreTrend,score);
  assertEquals(-999,score2.getHardScore());
  assertEquals(-999,score2.getMediumScore());
  assertEquals(-999,score2.getSoftScore());
  for (int i=0; i < scoreSize; i++) {
    levels[i]=InitializingScoreTrendLevel.ONLY_DOWN;
  }
  score2=hardMediumSoftScoreDefinition.buildPessimisticBound(scoreTrend,score);
  assertEquals(Integer.MIN_VALUE,score2.getHardScore());
  assertEquals(Integer.MIN_VALUE,score2.getMediumScore());
  assertEquals(Integer.MIN_VALUE,score2.getSoftScore());
}
