{
  BestSolutionRecaller recaller=new BestSolutionRecaller();
  recaller.setSolverEventSupport(mock(SolverEventSupport.class));
  DefaultSolverScope solverScope=new DefaultSolverScope();
  ConstructionHeuristicPhaseScope phaseScope=mock(ConstructionHeuristicPhaseScope.class);
  when(phaseScope.getSolverScope()).thenReturn(solverScope);
  ConstructionHeuristicStepScope stepScope=mock(ConstructionHeuristicStepScope.class);
  when(stepScope.getPhaseScope()).thenReturn(phaseScope);
  Solution solution=mock(Solution.class);
  Score score=SimpleScore.parseScore("0");
  when(solution.getScore()).thenReturn(score);
  when(stepScope.createOrGetClonedSolution()).thenReturn(solution);
  when(stepScope.getUninitializedVariableCount()).thenReturn(1);
  solverScope.setBestUninitializedVariableCount(2);
  recaller.processWorkingSolutionDuringStep(stepScope);
  assertEquals(solution,solverScope.getBestSolution());
  assertEquals(score,solverScope.getBestScore());
  assertEquals(1,solverScope.getBestUninitializedVariableCount());
}
