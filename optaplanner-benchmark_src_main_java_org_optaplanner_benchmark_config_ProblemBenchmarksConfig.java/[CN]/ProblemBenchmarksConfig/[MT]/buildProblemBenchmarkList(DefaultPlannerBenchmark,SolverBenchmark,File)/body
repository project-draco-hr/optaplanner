{
  validate(solverBenchmark);
  ProblemIO problemIO=buildProblemIO();
  List<ProblemBenchmark> problemBenchmarkList=new ArrayList<ProblemBenchmark>(inputSolutionFileList.size());
  List<ProblemBenchmark> unifiedProblemBenchmarkList=plannerBenchmark.getUnifiedProblemBenchmarkList();
  for (  File inputSolutionFile : inputSolutionFileList) {
    if (!inputSolutionFile.exists()) {
      throw new IllegalArgumentException("The inputSolutionFile (" + inputSolutionFile + ") does not exist.");
    }
    ProblemBenchmark newProblemBenchmark=buildProblemBenchmark(plannerBenchmark,problemIO,inputSolutionFile);
    ProblemBenchmark problemBenchmark;
    int index=unifiedProblemBenchmarkList.indexOf(newProblemBenchmark);
    if (index < 0) {
      problemBenchmark=newProblemBenchmark;
      unifiedProblemBenchmarkList.add(problemBenchmark);
    }
 else {
      problemBenchmark=unifiedProblemBenchmarkList.get(index);
    }
    addSingleBenchmark(solverBenchmark,problemBenchmark,latestResumeBenchmarkDir);
    problemBenchmarkList.add(problemBenchmark);
  }
  return problemBenchmarkList;
}
