{
  Map<String,ScoreDetail> scoreDetailMap=new HashMap<String,ScoreDetail>();
  WorkingMemory workingMemory=solverScope.getWorkingMemory();
  if (workingMemory == null) {
    return Collections.emptyList();
  }
  Iterator<ConstraintOccurrence> it=(Iterator<ConstraintOccurrence>)workingMemory.iterateObjects(new ClassObjectFilter(ConstraintOccurrence.class));
  while (it.hasNext()) {
    ConstraintOccurrence constraintOccurrence=it.next();
    ScoreDetail scoreDetail=scoreDetailMap.get(constraintOccurrence.getRuleId());
    if (scoreDetail == null) {
      scoreDetail=new ScoreDetail(constraintOccurrence.getRuleId(),constraintOccurrence.getConstraintType());
      scoreDetailMap.put(constraintOccurrence.getRuleId(),scoreDetail);
    }
    scoreDetail.addConstraintOccurrence(constraintOccurrence);
  }
  List<ScoreDetail> scoreDetailList=new ArrayList<ScoreDetail>(scoreDetailMap.values());
  Collections.sort(scoreDetailList);
  return scoreDetailList;
}
