{
  List<Acceptor> acceptorList=new ArrayList<Acceptor>();
  if (acceptorClassList != null) {
    for (    Class<? extends Acceptor> acceptorClass : acceptorClassList) {
      Acceptor acceptor=ConfigUtils.newInstance(this,"acceptorClass",acceptorClass);
      acceptorList.add(acceptor);
    }
  }
  if ((acceptorTypeList != null && acceptorTypeList.contains(AcceptorType.PLANNING_ENTITY_TABU)) || planningEntityTabuSize != null || planningEntityTabuRatio != null || fadingPlanningEntityTabuSize != null || fadingPlanningEntityTabuRatio != null) {
    PlanningEntityTabuAcceptor entityTabuAcceptor=new PlanningEntityTabuAcceptor();
    if (planningEntityTabuSize != null) {
      if (planningEntityTabuRatio != null) {
        throw new IllegalArgumentException("The acceptor cannot have both planningEntityTabuSize (" + planningEntityTabuSize + ") and planningEntityTabuRatio ("+ planningEntityTabuRatio+ ").");
      }
      entityTabuAcceptor.setTabuSizer(new FixedTabuSizer(planningEntityTabuSize));
    }
 else     if (planningEntityTabuRatio != null) {
      entityTabuAcceptor.setTabuSizer(new RatioTabuSizer(planningEntityTabuRatio));
    }
    if (fadingPlanningEntityTabuSize != null) {
      if (fadingPlanningEntityTabuRatio != null) {
        throw new IllegalArgumentException("The acceptor cannot have both fadingPlanningEntityTabuSize (" + fadingPlanningEntityTabuSize + ") and fadingPlanningEntityTabuRatio ("+ fadingPlanningEntityTabuRatio+ ").");
      }
      entityTabuAcceptor.setFadingTabuSizer(new FixedTabuSizer(fadingPlanningEntityTabuSize));
    }
 else     if (fadingPlanningEntityTabuRatio != null) {
      entityTabuAcceptor.setFadingTabuSizer(new RatioTabuSizer(fadingPlanningEntityTabuRatio));
    }
    if (environmentMode == EnvironmentMode.FULL_ASSERT) {
      entityTabuAcceptor.setAssertTabuHashCodeCorrectness(true);
    }
    acceptorList.add(entityTabuAcceptor);
  }
  if ((acceptorTypeList != null && acceptorTypeList.contains(AcceptorType.PLANNING_VALUE_TABU)) || planningValueTabuSize != null || fadingPlanningValueTabuSize != null) {
    PlanningValueTabuAcceptor valueTabuAcceptor=new PlanningValueTabuAcceptor();
    if (planningValueTabuSize != null) {
      valueTabuAcceptor.setTabuSizer(new FixedTabuSizer(planningValueTabuSize));
    }
    if (fadingPlanningValueTabuSize != null) {
      valueTabuAcceptor.setFadingTabuSizer(new FixedTabuSizer(fadingPlanningValueTabuSize));
    }
    if (environmentMode == EnvironmentMode.FULL_ASSERT) {
      valueTabuAcceptor.setAssertTabuHashCodeCorrectness(true);
    }
    acceptorList.add(valueTabuAcceptor);
  }
  if ((acceptorTypeList != null && acceptorTypeList.contains(AcceptorType.MOVE_TABU)) || moveTabuSize != null || fadingMoveTabuSize != null) {
    MoveTabuAcceptor moveTabuAcceptor=new MoveTabuAcceptor();
    moveTabuAcceptor.setUseUndoMoveAsTabuMove(false);
    if (moveTabuSize != null) {
      moveTabuAcceptor.setTabuSizer(new FixedTabuSizer(moveTabuSize));
    }
    if (fadingMoveTabuSize != null) {
      moveTabuAcceptor.setFadingTabuSizer(new FixedTabuSizer(fadingMoveTabuSize));
    }
    if (environmentMode == EnvironmentMode.FULL_ASSERT) {
      moveTabuAcceptor.setAssertTabuHashCodeCorrectness(true);
    }
    acceptorList.add(moveTabuAcceptor);
  }
  if ((acceptorTypeList != null && acceptorTypeList.contains(AcceptorType.UNDO_MOVE_TABU)) || undoMoveTabuSize != null || fadingUndoMoveTabuSize != null) {
    MoveTabuAcceptor undoMoveTabuAcceptor=new MoveTabuAcceptor();
    undoMoveTabuAcceptor.setUseUndoMoveAsTabuMove(true);
    if (undoMoveTabuSize != null) {
      undoMoveTabuAcceptor.setTabuSizer(new FixedTabuSizer(undoMoveTabuSize));
    }
    if (fadingUndoMoveTabuSize != null) {
      undoMoveTabuAcceptor.setFadingTabuSizer(new FixedTabuSizer(fadingUndoMoveTabuSize));
    }
    if (environmentMode == EnvironmentMode.FULL_ASSERT) {
      undoMoveTabuAcceptor.setAssertTabuHashCodeCorrectness(true);
    }
    acceptorList.add(undoMoveTabuAcceptor);
  }
  if ((acceptorTypeList != null && acceptorTypeList.contains(AcceptorType.SOLUTION_TABU)) || solutionTabuSize != null || fadingSolutionTabuSize != null) {
    SolutionTabuAcceptor solutionTabuAcceptor=new SolutionTabuAcceptor();
    if (solutionTabuSize != null) {
      solutionTabuAcceptor.setTabuSizer(new FixedTabuSizer(solutionTabuSize));
    }
    if (fadingSolutionTabuSize != null) {
      solutionTabuAcceptor.setFadingTabuSizer(new FixedTabuSizer(fadingSolutionTabuSize));
    }
    if (environmentMode == EnvironmentMode.FULL_ASSERT) {
      solutionTabuAcceptor.setAssertTabuHashCodeCorrectness(true);
    }
    acceptorList.add(solutionTabuAcceptor);
  }
  if ((acceptorTypeList != null && acceptorTypeList.contains(AcceptorType.SIMULATED_ANNEALING)) || simulatedAnnealingStartingTemperature != null) {
    SimulatedAnnealingAcceptor simulatedAnnealingAcceptor=new SimulatedAnnealingAcceptor();
    simulatedAnnealingAcceptor.setStartingTemperature(scoreDefinition.parseScore(simulatedAnnealingStartingTemperature));
    acceptorList.add(simulatedAnnealingAcceptor);
  }
  if ((acceptorTypeList != null && acceptorTypeList.contains(AcceptorType.GREAT_DELUGE)) || greatDelugeWaterLevelUpperBoundRate != null || greatDelugeWaterRisingRate != null) {
    double waterLevelUpperBoundRate=(Double)ObjectUtils.defaultIfNull(greatDelugeWaterLevelUpperBoundRate,1.20);
    double waterRisingRate=(Double)ObjectUtils.defaultIfNull(greatDelugeWaterRisingRate,0.0000001);
    acceptorList.add(new GreatDelugeAcceptor(waterLevelUpperBoundRate,waterRisingRate));
  }
  if ((acceptorTypeList != null && acceptorTypeList.contains(AcceptorType.LATE_ACCEPTANCE)) || lateAcceptanceSize != null) {
    LateAcceptanceAcceptor lateAcceptanceAcceptor=new LateAcceptanceAcceptor();
    lateAcceptanceAcceptor.setLateAcceptanceSize((lateAcceptanceSize == null) ? 1000 : lateAcceptanceSize);
    acceptorList.add(lateAcceptanceAcceptor);
  }
  if (acceptorList.size() == 1) {
    return acceptorList.get(0);
  }
 else   if (acceptorList.size() > 1) {
    CompositeAcceptor compositeAcceptor=new CompositeAcceptor();
    compositeAcceptor.setAcceptorList(acceptorList);
    return compositeAcceptor;
  }
 else {
    PlanningEntityTabuAcceptor entityTabuAcceptor=new PlanningEntityTabuAcceptor();
    entityTabuAcceptor.setTabuSizer(new FixedTabuSizer(5));
    if (environmentMode == EnvironmentMode.FULL_ASSERT) {
      entityTabuAcceptor.setAssertTabuHashCodeCorrectness(true);
    }
    return entityTabuAcceptor;
  }
}
