{
  List<Acceptor> acceptorList=new ArrayList<Acceptor>();
  if (acceptorClassList != null) {
    for (    Class<? extends Acceptor> acceptorClass : acceptorClassList) {
      Acceptor acceptor=ConfigUtils.newInstance(this,"acceptorClass",acceptorClass);
      acceptorList.add(acceptor);
    }
  }
  if ((acceptorTypeList != null && acceptorTypeList.contains(AcceptorType.PLANNING_ENTITY_TABU)) || entityTabuSize != null || entityTabuRatio != null || fadingEntityTabuSize != null || fadingEntityTabuRatio != null) {
    EntityTabuAcceptor entityTabuAcceptor=new EntityTabuAcceptor();
    if (entityTabuSize != null) {
      if (entityTabuRatio != null) {
        throw new IllegalArgumentException("The acceptor cannot have both entityTabuSize (" + entityTabuSize + ") and entityTabuRatio ("+ entityTabuRatio+ ").");
      }
      entityTabuAcceptor.setTabuSizeStrategy(new FixedTabuSizeStrategy(entityTabuSize));
    }
 else     if (entityTabuRatio != null) {
      entityTabuAcceptor.setTabuSizeStrategy(new EntityRatioTabuSizeStrategy(entityTabuRatio));
    }
    if (fadingEntityTabuSize != null) {
      if (fadingEntityTabuRatio != null) {
        throw new IllegalArgumentException("The acceptor cannot have both fadingEntityTabuSize (" + fadingEntityTabuSize + ") and fadingEntityTabuRatio ("+ fadingEntityTabuRatio+ ").");
      }
      entityTabuAcceptor.setFadingTabuSizeStrategy(new FixedTabuSizeStrategy(fadingEntityTabuSize));
    }
 else     if (fadingEntityTabuRatio != null) {
      entityTabuAcceptor.setFadingTabuSizeStrategy(new EntityRatioTabuSizeStrategy(fadingEntityTabuRatio));
    }
    if (environmentMode.isNonIntrusiveFullAsserted()) {
      entityTabuAcceptor.setAssertTabuHashCodeCorrectness(true);
    }
    acceptorList.add(entityTabuAcceptor);
  }
  if ((acceptorTypeList != null && acceptorTypeList.contains(AcceptorType.PLANNING_VALUE_TABU)) || valueTabuSize != null || valueTabuRatio != null || fadingValueTabuSize != null || fadingValueTabuRatio != null) {
    ValueTabuAcceptor valueTabuAcceptor=new ValueTabuAcceptor();
    if (valueTabuSize != null) {
      if (valueTabuRatio != null) {
        throw new IllegalArgumentException("The acceptor cannot have both valueTabuSize (" + valueTabuSize + ") and valueTabuRatio ("+ valueTabuRatio+ ").");
      }
      valueTabuAcceptor.setTabuSizeStrategy(new FixedTabuSizeStrategy(valueTabuSize));
    }
 else     if (valueTabuRatio != null) {
      valueTabuAcceptor.setTabuSizeStrategy(new ValueRatioTabuSizeStrategy(valueTabuRatio));
    }
    if (fadingValueTabuSize != null) {
      if (fadingValueTabuRatio != null) {
        throw new IllegalArgumentException("The acceptor cannot have both fadingValueTabuSize (" + fadingValueTabuSize + ") and fadingValueTabuRatio ("+ fadingValueTabuRatio+ ").");
      }
      valueTabuAcceptor.setFadingTabuSizeStrategy(new FixedTabuSizeStrategy(fadingValueTabuSize));
    }
 else     if (fadingValueTabuRatio != null) {
      valueTabuAcceptor.setFadingTabuSizeStrategy(new ValueRatioTabuSizeStrategy(fadingValueTabuRatio));
    }
    if (valueTabuSize != null) {
      valueTabuAcceptor.setTabuSizeStrategy(new FixedTabuSizeStrategy(valueTabuSize));
    }
    if (fadingValueTabuSize != null) {
      valueTabuAcceptor.setFadingTabuSizeStrategy(new FixedTabuSizeStrategy(fadingValueTabuSize));
    }
    if (environmentMode.isNonIntrusiveFullAsserted()) {
      valueTabuAcceptor.setAssertTabuHashCodeCorrectness(true);
    }
    acceptorList.add(valueTabuAcceptor);
  }
  if ((acceptorTypeList != null && acceptorTypeList.contains(AcceptorType.MOVE_TABU)) || moveTabuSize != null || fadingMoveTabuSize != null) {
    MoveTabuAcceptor moveTabuAcceptor=new MoveTabuAcceptor();
    moveTabuAcceptor.setUseUndoMoveAsTabuMove(false);
    if (moveTabuSize != null) {
      moveTabuAcceptor.setTabuSizeStrategy(new FixedTabuSizeStrategy(moveTabuSize));
    }
    if (fadingMoveTabuSize != null) {
      moveTabuAcceptor.setFadingTabuSizeStrategy(new FixedTabuSizeStrategy(fadingMoveTabuSize));
    }
    if (environmentMode.isNonIntrusiveFullAsserted()) {
      moveTabuAcceptor.setAssertTabuHashCodeCorrectness(true);
    }
    acceptorList.add(moveTabuAcceptor);
  }
  if ((acceptorTypeList != null && acceptorTypeList.contains(AcceptorType.UNDO_MOVE_TABU)) || undoMoveTabuSize != null || fadingUndoMoveTabuSize != null) {
    MoveTabuAcceptor undoMoveTabuAcceptor=new MoveTabuAcceptor();
    undoMoveTabuAcceptor.setUseUndoMoveAsTabuMove(true);
    if (undoMoveTabuSize != null) {
      undoMoveTabuAcceptor.setTabuSizeStrategy(new FixedTabuSizeStrategy(undoMoveTabuSize));
    }
    if (fadingUndoMoveTabuSize != null) {
      undoMoveTabuAcceptor.setFadingTabuSizeStrategy(new FixedTabuSizeStrategy(fadingUndoMoveTabuSize));
    }
    if (environmentMode.isNonIntrusiveFullAsserted()) {
      undoMoveTabuAcceptor.setAssertTabuHashCodeCorrectness(true);
    }
    acceptorList.add(undoMoveTabuAcceptor);
  }
  if ((acceptorTypeList != null && acceptorTypeList.contains(AcceptorType.SOLUTION_TABU)) || solutionTabuSize != null || fadingSolutionTabuSize != null) {
    SolutionTabuAcceptor solutionTabuAcceptor=new SolutionTabuAcceptor();
    if (solutionTabuSize != null) {
      solutionTabuAcceptor.setTabuSizeStrategy(new FixedTabuSizeStrategy(solutionTabuSize));
    }
    if (fadingSolutionTabuSize != null) {
      solutionTabuAcceptor.setFadingTabuSizeStrategy(new FixedTabuSizeStrategy(fadingSolutionTabuSize));
    }
    if (environmentMode.isNonIntrusiveFullAsserted()) {
      solutionTabuAcceptor.setAssertTabuHashCodeCorrectness(true);
    }
    acceptorList.add(solutionTabuAcceptor);
  }
  if ((acceptorTypeList != null && acceptorTypeList.contains(AcceptorType.SIMULATED_ANNEALING)) || simulatedAnnealingStartingTemperature != null) {
    SimulatedAnnealingAcceptor simulatedAnnealingAcceptor=new SimulatedAnnealingAcceptor();
    simulatedAnnealingAcceptor.setStartingTemperature(scoreDefinition.parseScore(simulatedAnnealingStartingTemperature));
    acceptorList.add(simulatedAnnealingAcceptor);
  }
  if ((acceptorTypeList != null && acceptorTypeList.contains(AcceptorType.GREAT_DELUGE)) || greatDelugeWaterLevelUpperBoundRate != null || greatDelugeWaterRisingRate != null) {
    double waterLevelUpperBoundRate=(Double)ObjectUtils.defaultIfNull(greatDelugeWaterLevelUpperBoundRate,1.20);
    double waterRisingRate=(Double)ObjectUtils.defaultIfNull(greatDelugeWaterRisingRate,0.0000001);
    acceptorList.add(new GreatDelugeAcceptor(waterLevelUpperBoundRate,waterRisingRate));
  }
  if ((acceptorTypeList != null && acceptorTypeList.contains(AcceptorType.LATE_ACCEPTANCE)) || lateAcceptanceSize != null) {
    LateAcceptanceAcceptor lateAcceptanceAcceptor=new LateAcceptanceAcceptor();
    lateAcceptanceAcceptor.setLateAcceptanceSize((lateAcceptanceSize == null) ? 1000 : lateAcceptanceSize);
    acceptorList.add(lateAcceptanceAcceptor);
  }
  if ((acceptorTypeList != null && acceptorTypeList.contains(AcceptorType.LATE_ANNEALING)) || lateAnnealingSize != null) {
    LateAnnealingAcceptor lateAnnealingAcceptor=new LateAnnealingAcceptor();
    lateAnnealingAcceptor.setLateAnnealingSize((lateAnnealingSize == null) ? 1000 : lateAnnealingSize);
    acceptorList.add(lateAnnealingAcceptor);
  }
  if (acceptorList.size() == 1) {
    return acceptorList.get(0);
  }
 else   if (acceptorList.size() > 1) {
    CompositeAcceptor compositeAcceptor=new CompositeAcceptor();
    compositeAcceptor.setAcceptorList(acceptorList);
    return compositeAcceptor;
  }
 else {
    EntityTabuAcceptor entityTabuAcceptor=new EntityTabuAcceptor();
    entityTabuAcceptor.setTabuSizeStrategy(new FixedTabuSizeStrategy(5));
    if (environmentMode.isNonIntrusiveFullAsserted()) {
      entityTabuAcceptor.setAssertTabuHashCodeCorrectness(true);
    }
    return entityTabuAcceptor;
  }
}
