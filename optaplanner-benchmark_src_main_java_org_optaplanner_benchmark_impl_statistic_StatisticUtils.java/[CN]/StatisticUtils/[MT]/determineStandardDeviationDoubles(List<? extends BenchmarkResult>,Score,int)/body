{
  if (successCount <= 0) {
    return null;
  }
  if (averageScore == null) {
    throw new IllegalArgumentException("Average score ( " + averageScore + " ) cannot be null.");
  }
  double[] differenceSquaredTotalDoubles=null;
  for (  BenchmarkResult benchmarkResult : solverProblemBenchmarkResultList) {
    if (benchmarkResult.isSuccess()) {
      Score difference=benchmarkResult.getScore().subtract(averageScore);
      double[] differenceDoubles=ScoreUtils.extractLevelDoubles(difference);
      if (differenceSquaredTotalDoubles == null) {
        differenceSquaredTotalDoubles=new double[differenceDoubles.length];
      }
      for (int i=0; i < differenceDoubles.length; i++) {
        differenceSquaredTotalDoubles[i]+=Math.pow(differenceDoubles[i],2.0);
      }
    }
  }
  double[] standardDeviationDoubles=new double[differenceSquaredTotalDoubles.length];
  for (int i=0; i < differenceSquaredTotalDoubles.length; i++) {
    standardDeviationDoubles[i]=Math.pow(differenceSquaredTotalDoubles[i] / successCount,0.5);
  }
  return standardDeviationDoubles;
}
