{
  Random workingRandom=mock(Random.class);
  when(workingRandom.nextInt(anyInt())).thenReturn(3,0);
  assertElementsOfIterator(new BigIntegerValueRange(new BigInteger("0"),new BigInteger("7")).createRandomIterator(workingRandom),new BigInteger("3"),new BigInteger("0"));
  when(workingRandom.nextInt(anyInt())).thenReturn(3,0);
  assertElementsOfIterator(new BigIntegerValueRange(new BigInteger("100"),new BigInteger("104")).createRandomIterator(workingRandom),new BigInteger("103"),new BigInteger("100"));
  when(workingRandom.nextInt(anyInt())).thenReturn(3,0);
  assertElementsOfIterator(new BigIntegerValueRange(new BigInteger("-4"),new BigInteger("3")).createRandomIterator(workingRandom),new BigInteger("-1"),new BigInteger("-4"));
  assertAllElementsOfIterator(new BigIntegerValueRange(new BigInteger("7"),new BigInteger("7")).createRandomIterator(workingRandom));
  when(workingRandom.nextInt(anyInt())).thenReturn(3,0);
  assertElementsOfIterator(new BigIntegerValueRange(new BigInteger("0"),new BigInteger("10"),new BigInteger("2")).createRandomIterator(workingRandom),new BigInteger("6"),new BigInteger("0"));
  when(workingRandom.nextInt(anyInt())).thenReturn(3,0);
  assertElementsOfIterator(new BigIntegerValueRange(new BigInteger("-1"),new BigInteger("9"),new BigInteger("2")).createRandomIterator(workingRandom),new BigInteger("5"),new BigInteger("-1"));
  when(workingRandom.nextInt(anyInt())).thenReturn(3,0);
  assertElementsOfIterator(new BigIntegerValueRange(new BigInteger("100"),new BigInteger("120"),new BigInteger("5")).createRandomIterator(workingRandom),new BigInteger("115"),new BigInteger("100"));
}
