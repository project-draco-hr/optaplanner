{
  if (!randomSelection) {
    throw new UnsupportedOperationException("Non randomSelection (such as original selection) is not yet supported on " + KOptMoveSelector.class.getSimpleName() + ".");
  }
 else {
    final Iterator<Object> entityIterator=entitySelector.iterator();
    return new UpcomingSelectionIterator<Move>(){
      @Override protected Move createUpcomingSelection(){
        if (!entityIterator.hasNext()) {
          return noUpcomingSelection();
        }
        Object entity=entityIterator.next();
        Object[] values=new Object[valueSelectors.length];
        for (int i=0; i < valueSelectors.length; i++) {
          Iterator<Object> valueIterator=valueSelectors[i].iterator(entity);
          if (!valueIterator.hasNext()) {
            return noUpcomingSelection();
          }
          values[i]=valueIterator.next();
        }
        return new KOptMove(variableDescriptor,inverseVariableSupply,anchorVariableSupply,entity,values);
      }
    }
;
  }
}
