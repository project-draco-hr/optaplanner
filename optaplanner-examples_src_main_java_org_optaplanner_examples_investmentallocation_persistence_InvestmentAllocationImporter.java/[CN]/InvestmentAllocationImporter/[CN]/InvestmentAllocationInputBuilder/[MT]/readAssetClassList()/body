{
  readConstantLine("ABC Institutional Investor Capital Markets Expectations;*");
  readConstantLine("Asset class;+Correlation;*");
  String headerLine=bufferedReader.readLine();
  String[] headerTokens=splitBySemicolonSeparatedValue(headerLine);
  String headerRegex="ID;Name;Expected return;Standard deviation(;\\d+)+";
  if (!headerLine.trim().matches(headerRegex)) {
    throw new IllegalArgumentException("Read line (" + headerLine + ") is expected to be a constant regex ("+ headerRegex+ ").");
  }
  final int ASSET_CLASS_PROPERTIES_COUNT=4;
  int assetClassListSize=headerTokens.length - ASSET_CLASS_PROPERTIES_COUNT;
  List<AssetClass> assetClassList=new ArrayList<AssetClass>(assetClassListSize);
  Map<Long,AssetClass> idToAssetClassMap=new HashMap<Long,AssetClass>(assetClassListSize);
  for (int i=0; i < assetClassListSize; i++) {
    AssetClass assetClass=new AssetClass();
    assetClass.setId(Long.parseLong(headerTokens[ASSET_CLASS_PROPERTIES_COUNT + i]));
    assetClassList.add(assetClass);
    idToAssetClassMap.put(assetClass.getId(),assetClass);
  }
  for (String line=bufferedReader.readLine(); line != null; line=bufferedReader.readLine()) {
    String[] tokens=splitBySemicolonSeparatedValue(line,ASSET_CLASS_PROPERTIES_COUNT + assetClassListSize);
    long id=Long.parseLong(tokens[0]);
    AssetClass assetClass=idToAssetClassMap.get(id);
    if (assetClass == null) {
      throw new IllegalStateException("The assetClass line (" + line + ") has an assetClass id ("+ id+ ") that is not in the headerLine ("+ headerLine+ ")");
    }
    assetClass.setName(tokens[1]);
    assetClass.setExpectedReturnMillis(parsePercentageMillis(tokens[2]));
    assetClass.setStandardDeviationRiskMillis(parsePercentageMillis(tokens[3]));
    Map<AssetClass,Long> correlationMillisMap=new LinkedHashMap<AssetClass,Long>(assetClassListSize);
    for (int i=0; i < assetClassListSize; i++) {
      AssetClass other=assetClassList.get(i);
      long correlationMillis=parsePercentageMillis(tokens[ASSET_CLASS_PROPERTIES_COUNT + i]);
      correlationMillisMap.put(other,correlationMillis);
    }
    assetClass.setCorrelationMillisMap(correlationMillisMap);
  }
  solution.setAssetClassList(assetClassList);
}
