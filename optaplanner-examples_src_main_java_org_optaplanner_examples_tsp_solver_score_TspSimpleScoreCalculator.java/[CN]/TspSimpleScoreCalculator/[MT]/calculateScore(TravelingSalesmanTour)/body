{
  List<Visit> visitList=tour.getVisitList();
  Set<Visit> tailVisitSet=new HashSet<Visit>(visitList);
  long score=0L;
  for (  Visit visit : visitList) {
    Standstill previousStandstill=visit.getPreviousStandstill();
    if (previousStandstill != null) {
      score-=visit.getDistanceToPreviousStandstill();
      if (previousStandstill instanceof Visit) {
        tailVisitSet.remove(previousStandstill);
      }
    }
  }
  if (tour.getDomicileList().size() != 1) {
    throw new UnsupportedOperationException("The domicileList (" + tour.getDomicileList() + ") should be a singleton.");
  }
  Domicile domicile=tour.getDomicileList().get(0);
  for (  Visit tailVisit : tailVisitSet) {
    if (tailVisit.getPreviousStandstill() != null) {
      score-=domicile.getCity().getDistance(tailVisit.getCity());
    }
  }
  return SimpleLongScore.valueOf(score);
}
