{
  TestdataSolution solution=new TestdataSolution("s1");
  TestdataValue v1=new TestdataValue("v1");
  TestdataValue v2=new TestdataValue("v2");
  TestdataValue v3=new TestdataValue("v3");
  solution.setValueList(Arrays.asList(v1,v2,v3));
  TestdataEntity e1=new TestdataEntity("e1",v1);
  TestdataEntity e2=new TestdataEntity("e2",v2);
  solution.setEntityList(Arrays.asList(e1,e2));
  GenuineVariableDescriptor<TestdataSolution> variableDescriptor=TestdataEntity.buildVariableDescriptorForValue();
  Move first=new SwapMove<>(Collections.singletonList(variableDescriptor),e1,e2);
  Move second=new ChangeMove(e1,variableDescriptor,v3);
  Move move=CompositeMove.buildMove(first,second);
  assertSame(v1,e1.getValue());
  assertSame(v2,e2.getValue());
  ScoreDirector scoreDirector=mockScoreDirector(variableDescriptor.getEntityDescriptor().getSolutionDescriptor());
  Move undoMove=move.createUndoMove(scoreDirector);
  move.doMove(scoreDirector);
  assertSame(v3,e1.getValue());
  assertSame(v1,e2.getValue());
  undoMove.doMove(scoreDirector);
  assertSame(v1,e1.getValue());
  assertSame(v2,e2.getValue());
}
