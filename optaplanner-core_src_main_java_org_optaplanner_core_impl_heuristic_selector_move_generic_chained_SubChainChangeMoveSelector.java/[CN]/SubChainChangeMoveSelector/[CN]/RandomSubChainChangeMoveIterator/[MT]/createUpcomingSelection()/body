{
  if (!subChainIterator.hasNext()) {
    subChainIterator=subChainSelector.iterator();
    if (!subChainIterator.hasNext()) {
      return noUpcomingSelection();
    }
  }
  SubChain subChain=subChainIterator.next();
  if (!valueIterator.hasNext()) {
    valueIterator=valueSelector.iterator();
    if (!valueIterator.hasNext()) {
      return noUpcomingSelection();
    }
  }
  Object toValue=valueIterator.next();
  boolean reversing=selectReversingMoveToo ? workingRandom.nextBoolean() : false;
  return reversing ? new SubChainReversingChangeMove(subChain,valueSelector.getVariableDescriptor(),inverseVariableSupply,toValue) : new SubChainChangeMove(subChain,valueSelector.getVariableDescriptor(),inverseVariableSupply,toValue);
}
