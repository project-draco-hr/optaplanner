{
  undoBalancePenaltyCosts();
  for (  MrMachineCapacityScorePart machineCapacityScorePart : machineCapacityScorePartList) {
    machineCapacityScorePart.removeProcessAssignment(processAssignment);
  }
  MrService service=processAssignment.getService();
  Integer serviceProcessCountInteger=serviceBag.get(service);
  int serviceProcessCount=serviceProcessCountInteger == null ? 0 : serviceProcessCountInteger;
  if (serviceProcessCount > 1) {
    hardScore+=(serviceProcessCount - 1);
  }
  serviceProcessCount--;
  if (serviceProcessCount > 1) {
    hardScore-=(serviceProcessCount - 1);
  }
  serviceProcessCountInteger=serviceProcessCount == 0 ? null : serviceProcessCount;
  serviceBag.put(service,serviceProcessCountInteger);
  doBalancePenaltyCosts();
  if (processAssignment.isMoved()) {
    softScore+=processAssignment.getProcessMoveCost() * globalPenaltyInfo.getProcessMoveCostWeight();
    softScore+=processAssignment.getMachineMoveCost() * globalPenaltyInfo.getMachineMoveCostWeight();
  }
}
