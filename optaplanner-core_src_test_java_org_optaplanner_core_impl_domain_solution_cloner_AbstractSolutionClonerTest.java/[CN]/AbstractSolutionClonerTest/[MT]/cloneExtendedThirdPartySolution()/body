{
  SolutionDescriptor solutionDescriptor=TestdataExtendedThirdPartySolution.buildSolutionDescriptor();
  SolutionCloner<TestdataExtendedThirdPartySolution> cloner=createSolutionCloner(solutionDescriptor);
  TestdataValue val1=new TestdataValue("1");
  TestdataValue val2=new TestdataValue("2");
  TestdataValue val3=new TestdataValue("3");
  TestdataExtendedThirdPartyEntity a=new TestdataExtendedThirdPartyEntity("a",val1,null);
  TestdataExtendedThirdPartyEntity b=new TestdataExtendedThirdPartyEntity("b",val1,"extraObjectOnEntity");
  TestdataExtendedThirdPartyEntity c=new TestdataExtendedThirdPartyEntity("c",val3);
  TestdataExtendedThirdPartyEntity d=new TestdataExtendedThirdPartyEntity("d",val3,c);
  c.setExtraObject(d);
  TestdataExtendedThirdPartySolution original=new TestdataExtendedThirdPartySolution("solution","extraObjectOnSolution");
  List<TestdataValue> valueList=Arrays.asList(val1,val2,val3);
  original.setValueList(valueList);
  List<TestdataThirdPartyEntityPojo> originalEntityList=Arrays.<TestdataThirdPartyEntityPojo>asList(a,b,c,d);
  original.setEntityList(originalEntityList);
  TestdataExtendedThirdPartySolution clone=(TestdataExtendedThirdPartySolution)cloner.cloneSolution(original);
  assertNotSame(original,clone);
  assertCode("solution",clone);
  assertEquals("extraObjectOnSolution",clone.getExtraObject());
  assertSame(valueList,clone.getValueList());
  List<TestdataThirdPartyEntityPojo> cloneEntityList=clone.getEntityList();
  assertNotSame(originalEntityList,cloneEntityList);
  assertEquals(4,cloneEntityList.size());
  TestdataExtendedThirdPartyEntity cloneA=(TestdataExtendedThirdPartyEntity)cloneEntityList.get(0);
  TestdataExtendedThirdPartyEntity cloneB=(TestdataExtendedThirdPartyEntity)cloneEntityList.get(1);
  TestdataExtendedThirdPartyEntity cloneC=(TestdataExtendedThirdPartyEntity)cloneEntityList.get(2);
  TestdataExtendedThirdPartyEntity cloneD=(TestdataExtendedThirdPartyEntity)cloneEntityList.get(3);
  assertEntityClone(a,cloneA,"a","1");
  assertEquals(null,cloneA.getExtraObject());
  assertEntityClone(b,cloneB,"b","1");
  assertEquals("extraObjectOnEntity",cloneB.getExtraObject());
  assertEntityClone(c,cloneC,"c","3");
  assertEquals(cloneD,cloneC.getExtraObject());
  assertEntityClone(d,cloneD,"d","3");
  assertEquals(cloneC,cloneD.getExtraObject());
  assertNotSame(b,cloneB);
  b.setValue(val2);
  assertCode("2",b.getValue());
  assertCode("1",cloneB.getValue());
}
