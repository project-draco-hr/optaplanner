{
  ScoreDirector scoreDirector=stepScope.getScoreDirector();
  Move move=moveNode.getMove();
  Move undoMove=move.createUndoMove(scoreDirector);
  moveNode.setUndoMove(undoMove);
  move.doMove(scoreDirector);
  processMove(stepScope,moveNode);
  undoMove.doMove(scoreDirector);
  if (assertExpectedUndoMoveScore) {
    ExhaustiveSearchPhaseScope phaseScope=stepScope.getPhaseScope();
    phaseScope.assertExpectedUndoMoveScore(move,undoMove);
  }
  logger.trace("        Move treeId ({}), score ({}), expandable ({}), move ({}).",moveNode.getTreeId(),moveNode.getScore(),moveNode.isExpandable(),moveNode.getMove());
}
