{
  Solver solver=buildSolver();
  CloudBalance cloudBalance=buildPlanningProblem();
  SolverThread solverThread=new SolverThread(solver,cloudBalance);
  solverThread.start();
  waitForNextStage();
  Thread.sleep(500);
  for (int i=0; i < 8; i++) {
    CloudProcess process=notYetAddedProcessQueue.poll();
    solver.addProblemFactChange(new AddProcessChange(process));
  }
  waitForNextStage();
  Thread.sleep(1000);
  while (!notYetAddedProcessQueue.isEmpty()) {
    CloudProcess process=notYetAddedProcessQueue.poll();
    solver.addProblemFactChange(new AddProcessChange(process));
  }
  waitForNextStage();
  solver.terminateEarly();
  try {
    solverThread.join();
  }
 catch (  InterruptedException e) {
    throw new IllegalStateException("SolverThread did not die.",e);
  }
}
