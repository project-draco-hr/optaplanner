{
  TimeZone LOCAL_TIMEZONE=TimeZone.getTimeZone("GMT");
  Calendar calendar=Calendar.getInstance();
  calendar.setTimeZone(LOCAL_TIMEZONE);
  calendar.clear();
  DateFormat dateFormat=new SimpleDateFormat("yyyy-MM-dd");
  dateFormat.setCalendar(calendar);
  Date startDate;
  try {
    startDate=dateFormat.parse(startDateElement.getText());
  }
 catch (  ParseException e) {
    throw new IllegalArgumentException("Invalid startDate (" + startDateElement.getText() + ").",e);
  }
  calendar.setTime(startDate);
  int startDayOfYear=calendar.get(Calendar.DAY_OF_YEAR);
  int startYear=calendar.get(Calendar.YEAR);
  Date endDate;
  try {
    endDate=dateFormat.parse(endDateElement.getText());
  }
 catch (  ParseException e) {
    throw new IllegalArgumentException("Invalid endDate (" + endDateElement.getText() + ").",e);
  }
  calendar.setTime(endDate);
  int endDayOfYear=calendar.get(Calendar.DAY_OF_YEAR);
  int endYear=calendar.get(Calendar.YEAR);
  int maxDayIndex=endDayOfYear - startDayOfYear;
  if (startYear > endYear) {
    throw new IllegalStateException("The startYear (" + startYear + " must be before endYear ("+ endYear+ ").");
  }
  if (startYear < endYear) {
    int tmpYear=startYear;
    calendar.setTime(startDate);
    while (tmpYear < endYear) {
      maxDayIndex+=calendar.getActualMaximum(Calendar.DAY_OF_YEAR);
      calendar.add(Calendar.YEAR,1);
      tmpYear++;
    }
  }
  int shiftDateSize=maxDayIndex + 1;
  List<ShiftDate> shiftDateList=new ArrayList<>(shiftDateSize);
  shiftDateMap=new HashMap<>(shiftDateSize);
  long id=0L;
  int dayIndex=0;
  calendar.setTime(startDate);
  for (int i=0; i < shiftDateSize; i++) {
    ShiftDate shiftDate=new ShiftDate();
    shiftDate.setId(id);
    shiftDate.setDayIndex(dayIndex);
    String dateString=dateFormat.format(calendar.getTime());
    shiftDate.setDateString(dateString);
    shiftDate.setDayOfWeek(DayOfWeek.valueOfCalendar(calendar.get(Calendar.DAY_OF_WEEK)));
    shiftDate.setShiftList(new ArrayList<>());
    shiftDateList.add(shiftDate);
    shiftDateMap.put(dateString,shiftDate);
    id++;
    dayIndex++;
    calendar.add(Calendar.DAY_OF_YEAR,1);
  }
  nurseRoster.setShiftDateList(shiftDateList);
}
