{
  List<Topic> topicList=examination.getTopicList();
  List<PeriodHardConstraint> periodHardConstraintList=new ArrayList<PeriodHardConstraint>();
  String line=bufferedReader.readLine();
  int id=0;
  while (!line.equals("[RoomHardConstraints]")) {
    String[] lineTokens=line.split(SPLIT_REGEX);
    PeriodHardConstraint periodHardConstraint=new PeriodHardConstraint();
    periodHardConstraint.setId((long)id);
    if (lineTokens.length != 3) {
      throw new IllegalArgumentException("Read line (" + line + ") is expected to contain 3 tokens.");
    }
    periodHardConstraint.setLeftSideTopic(topicList.get(Integer.parseInt(lineTokens[0])));
    periodHardConstraint.setPeriodHardConstraintType(PeriodHardConstraintType.valueOf(lineTokens[1]));
    periodHardConstraint.setRightSideTopic(topicList.get(Integer.parseInt(lineTokens[2])));
    if (periodHardConstraint.getPeriodHardConstraintType() == PeriodHardConstraintType.EXAM_COINCIDENCE && !Collections.disjoint(periodHardConstraint.getLeftSideTopic().getStudentList(),periodHardConstraint.getRightSideTopic().getStudentList())) {
      logger.warn("Filtering out periodHardConstraint (" + periodHardConstraint + ") because the left and right topic share students.");
    }
 else {
      periodHardConstraintList.add(periodHardConstraint);
    }
    line=bufferedReader.readLine();
    id++;
  }
  examination.setPeriodHardConstraintList(periodHardConstraintList);
}
