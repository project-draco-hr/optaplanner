{
  List<Topic> sortedTopicList=new ArrayList<Topic>(examination.getTopicList());
  Collections.sort(sortedTopicList,new Comparator<Topic>(){
    public int compare(    Topic a,    Topic b){
      return new CompareToBuilder().append(a.getStudentListSize(),b.getStudentListSize()).append(b.getId(),a.getId()).toComparison();
    }
  }
);
  int frontLoadLargeTopicSize=examination.getInstitutionalWeighting().getFrontLoadLargeTopicSize();
  if (frontLoadLargeTopicSize == 0) {
    return;
  }
  int minimumTopicId=sortedTopicList.size() - frontLoadLargeTopicSize;
  if (minimumTopicId < 0) {
    logger.warn("The frontLoadLargeTopicSize (" + frontLoadLargeTopicSize + ") is bigger than topicListSize ("+ sortedTopicList.size()+ "). Tagging all topic as frontLoadLarge...");
    minimumTopicId=0;
  }
  for (  Topic topic : sortedTopicList.subList(minimumTopicId,sortedTopicList.size())) {
    topic.setFrontLoadLarge(true);
  }
}
