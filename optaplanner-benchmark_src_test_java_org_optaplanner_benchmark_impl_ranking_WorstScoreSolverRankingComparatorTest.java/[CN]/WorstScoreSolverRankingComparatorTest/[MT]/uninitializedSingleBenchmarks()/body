{
  SingleBenchmarkResult a0=addSingleBenchmark(aSingleBenchmarkResultList,-1000,-30,-1000);
  addSingleBenchmark(aSingleBenchmarkResultList,-400,-30,-1000);
  addSingleBenchmark(aSingleBenchmarkResultList,-30,-30,-1000);
  a.setSingleBenchmarkResultList(aSingleBenchmarkResultList);
  a.accumulateResults(benchmarkReport);
  SingleBenchmarkResult b0=addSingleBenchmark(bSingleBenchmarkResultList,-1000,-30,-1000);
  SingleBenchmarkResult b1=addSingleBenchmark(bSingleBenchmarkResultList,-400,-30,-1000);
  addSingleBenchmark(bSingleBenchmarkResultList,-30,-30,-1000);
  b.setSingleBenchmarkResultList(bSingleBenchmarkResultList);
  b.accumulateResults(benchmarkReport);
  assertCompareToEquals(comparator,a,b);
  a0.setAverageScore(SimpleScore.valueOf(-100,-1000));
  b0.setAverageScore(SimpleScore.valueOf(-100,-1000));
  b1.setAverageScore(SimpleScore.valueOf(-100,400));
  a.accumulateResults(benchmarkReport);
  b.accumulateResults(benchmarkReport);
  assertCompareToOrder(comparator,b,a);
  a0.setAverageScore(SimpleScore.valueOf(-101,-1000));
  a.accumulateResults(benchmarkReport);
  assertCompareToOrder(comparator,a,b);
  b0.setAverageScore(SimpleScore.valueOfInitialized(-1000));
  b1.setAverageScore(SimpleScore.valueOf(-100,400));
  b.accumulateResults(benchmarkReport);
  assertCompareToOrder(comparator,a,b);
}
