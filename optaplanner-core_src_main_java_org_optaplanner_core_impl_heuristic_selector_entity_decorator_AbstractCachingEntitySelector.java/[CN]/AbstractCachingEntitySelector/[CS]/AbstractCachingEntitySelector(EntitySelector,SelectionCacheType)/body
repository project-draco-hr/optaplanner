{
  this.childEntitySelector=childEntitySelector;
  this.cacheType=cacheType;
  if (childEntitySelector.isNeverEnding()) {
    throw new IllegalStateException("The selector (" + this + ") has a childEntitySelector ("+ childEntitySelector+ ") with neverEnding ("+ childEntitySelector.isNeverEnding()+ ").");
  }
  phaseLifecycleSupport.addEventListener(childEntitySelector);
  if (cacheType.isNotCached()) {
    throw new IllegalArgumentException("The selector (" + this + ") does not support the cacheType ("+ cacheType+ ").");
  }
  phaseLifecycleSupport.addEventListener(new SelectionCacheLifecycleBridge(cacheType,this));
}
