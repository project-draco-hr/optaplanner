{
  int betterCount=0;
  int equalCount=0;
  int lowerCount=0;
  List<SingleBenchmarkResult> singleBenchmarkResultList=solverBenchmarkResult.getSingleBenchmarkResultList();
  for (  SingleBenchmarkResult single : singleBenchmarkResultList) {
    List<SingleBenchmarkResult> otherSingleList=single.getProblemBenchmarkResult().getSingleBenchmarkResultList();
    for (    SingleBenchmarkResult otherSingle : otherSingleList) {
      if (single == otherSingle) {
        continue;
      }
      int scoreComparison=singleBenchmarkRankingComparator.compare(single,otherSingle);
      if (scoreComparison > 0) {
        betterCount++;
      }
 else       if (scoreComparison == 0) {
        equalCount++;
      }
 else {
        lowerCount++;
      }
    }
  }
  return new TotalRankSolverRankingWeight(solverBenchmarkResult,betterCount,equalCount,lowerCount);
}
