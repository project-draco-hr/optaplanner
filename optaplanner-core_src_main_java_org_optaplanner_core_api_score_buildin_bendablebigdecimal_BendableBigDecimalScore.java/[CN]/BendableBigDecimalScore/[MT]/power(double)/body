{
  BigDecimal[] newHardScores=new BigDecimal[hardScores.length];
  BigDecimal[] newSoftScores=new BigDecimal[softScores.length];
  BigDecimal actualExponent=BigDecimal.valueOf(exponent);
  for (int i=0; i < newHardScores.length; i++) {
    BigDecimal hardScore=hardScores[i];
    newHardScores[i]=hardScore.pow(actualExponent.intValue()).setScale(hardScore.scale(),RoundingMode.FLOOR);
  }
  for (int i=0; i < newSoftScores.length; i++) {
    BigDecimal softScore=softScores[i];
    newSoftScores[i]=softScore.pow(actualExponent.intValue()).setScale(softScore.scale(),RoundingMode.FLOOR);
  }
  return new BendableBigDecimalScore((int)Math.floor(Math.pow(initScore,exponent)),newHardScores,newSoftScores);
}
