{
  HardSoftBigDecimalScoreDefinition scoreDefinition=new HardSoftBigDecimalScoreDefinition();
  assertEquals(0.0,scoreDefinition.calculateTimeGradient(HardSoftBigDecimalScore.valueOf(new BigDecimal("0.00"),new BigDecimal("0.00")),HardSoftBigDecimalScore.valueOf(new BigDecimal("10.00"),new BigDecimal("10.00")),HardSoftBigDecimalScore.valueOf(new BigDecimal("0.00"),new BigDecimal("0.00"))),0.0);
  assertEquals(0.6,scoreDefinition.calculateTimeGradient(HardSoftBigDecimalScore.valueOf(new BigDecimal("0.00"),new BigDecimal("0.00")),HardSoftBigDecimalScore.valueOf(new BigDecimal("10.00"),new BigDecimal("10.00")),HardSoftBigDecimalScore.valueOf(new BigDecimal("6.00"),new BigDecimal("6.00"))),0.0);
  assertEquals(1.0,scoreDefinition.calculateTimeGradient(HardSoftBigDecimalScore.valueOf(new BigDecimal("0.00"),new BigDecimal("0.00")),HardSoftBigDecimalScore.valueOf(new BigDecimal("10.00"),new BigDecimal("10.00")),HardSoftBigDecimalScore.valueOf(new BigDecimal("10.00"),new BigDecimal("10.00"))),0.0);
  assertEquals(1.0,scoreDefinition.calculateTimeGradient(HardSoftBigDecimalScore.valueOf(new BigDecimal("0.00"),new BigDecimal("0.00")),HardSoftBigDecimalScore.valueOf(new BigDecimal("10.00"),new BigDecimal("10.00")),HardSoftBigDecimalScore.valueOf(new BigDecimal("11.00"),new BigDecimal("11.00"))),0.0);
  assertEquals(0.25,scoreDefinition.calculateTimeGradient(HardSoftBigDecimalScore.valueOf(new BigDecimal("-10.00"),new BigDecimal("-10.00")),HardSoftBigDecimalScore.valueOf(new BigDecimal("30.00"),new BigDecimal("30.00")),HardSoftBigDecimalScore.valueOf(new BigDecimal("0.00"),new BigDecimal("0.00"))),0.0);
  assertEquals(0.33333,scoreDefinition.calculateTimeGradient(HardSoftBigDecimalScore.valueOf(new BigDecimal("10.00"),new BigDecimal("10.00")),HardSoftBigDecimalScore.valueOf(new BigDecimal("40.00"),new BigDecimal("40.00")),HardSoftBigDecimalScore.valueOf(new BigDecimal("20.00"),new BigDecimal("20.00"))),0.00001);
}
