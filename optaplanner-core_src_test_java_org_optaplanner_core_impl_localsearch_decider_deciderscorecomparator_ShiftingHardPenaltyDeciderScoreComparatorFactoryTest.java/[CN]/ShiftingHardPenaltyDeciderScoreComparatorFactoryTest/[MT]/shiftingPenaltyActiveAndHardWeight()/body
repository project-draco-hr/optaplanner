{
  ShiftingHardPenaltyDeciderScoreComparatorFactory deciderScoreComparatorFactory=new ShiftingHardPenaltyDeciderScoreComparatorFactory();
  deciderScoreComparatorFactory.setHardScoreActivationThreshold(-10);
  deciderScoreComparatorFactory.setSuccessiveNoHardChangeMinimum(1);
  deciderScoreComparatorFactory.setSuccessiveNoHardChangeMaximum(3);
  deciderScoreComparatorFactory.setSuccessiveNoHardChangeRepetitionMultiplicand(5.0);
  deciderScoreComparatorFactory.setHardWeightSurvivalRatio(0.9);
  LocalSearchPhaseScope phaseScope=createPhaseScope();
  deciderScoreComparatorFactory.phaseStarted(phaseScope);
  LocalSearchStepScope stepScope=phaseScope.getLastCompletedStepScope();
  stepScope=nextStepScope(stepScope);
  deciderScoreComparatorFactory.stepStarted(stepScope);
  assertTrue(deciderScoreComparatorFactory.createDeciderScoreComparator() instanceof NaturalScoreComparator);
  stepScope.setScore(HardSoftScore.valueOf(-11,-200));
  deciderScoreComparatorFactory.stepEnded(stepScope);
  stepScope=nextStepScope(stepScope);
  deciderScoreComparatorFactory.stepStarted(stepScope);
  assertTrue(deciderScoreComparatorFactory.createDeciderScoreComparator() instanceof NaturalScoreComparator);
  stepScope.setScore(HardSoftScore.valueOf(-10,-200));
  phaseScope.setBestSolutionStepIndex(stepScope.getStepIndex());
  deciderScoreComparatorFactory.stepEnded(stepScope);
  stepScope=nextStepScope(stepScope);
  deciderScoreComparatorFactory.stepStarted(stepScope);
  assertTrue(deciderScoreComparatorFactory.createDeciderScoreComparator() instanceof NaturalScoreComparator);
  stepScope.setScore(HardSoftScore.valueOf(-10,-200));
  deciderScoreComparatorFactory.stepEnded(stepScope);
  stepScope=nextStepScope(stepScope);
  deciderScoreComparatorFactory.stepStarted(stepScope);
  assertEquals(1000,((FlatteningHardSoftScoreComparator)deciderScoreComparatorFactory.createDeciderScoreComparator()).getHardWeight());
  stepScope.setScore(HardSoftScore.valueOf(-10,-200));
  deciderScoreComparatorFactory.stepEnded(stepScope);
  stepScope=nextStepScope(stepScope);
  deciderScoreComparatorFactory.stepStarted(stepScope);
  assertEquals(900,((FlatteningHardSoftScoreComparator)deciderScoreComparatorFactory.createDeciderScoreComparator()).getHardWeight());
  stepScope.setScore(HardSoftScore.valueOf(-10,-200));
  deciderScoreComparatorFactory.stepEnded(stepScope);
  stepScope=nextStepScope(stepScope);
  deciderScoreComparatorFactory.stepStarted(stepScope);
  assertEquals(810,((FlatteningHardSoftScoreComparator)deciderScoreComparatorFactory.createDeciderScoreComparator()).getHardWeight());
  stepScope.setScore(HardSoftScore.valueOf(-10,-200));
  deciderScoreComparatorFactory.stepEnded(stepScope);
  stepScope=nextStepScope(stepScope);
  deciderScoreComparatorFactory.stepStarted(stepScope);
  assertTrue(deciderScoreComparatorFactory.createDeciderScoreComparator() instanceof NaturalScoreComparator);
  stepScope.setScore(HardSoftScore.valueOf(-10,-200));
  deciderScoreComparatorFactory.stepEnded(stepScope);
  stepScope=nextStepScope(stepScope);
  deciderScoreComparatorFactory.stepStarted(stepScope);
  assertEquals(1000,((FlatteningHardSoftScoreComparator)deciderScoreComparatorFactory.createDeciderScoreComparator()).getHardWeight());
  stepScope.setScore(HardSoftScore.valueOf(-10,-200));
  deciderScoreComparatorFactory.stepEnded(stepScope);
}
