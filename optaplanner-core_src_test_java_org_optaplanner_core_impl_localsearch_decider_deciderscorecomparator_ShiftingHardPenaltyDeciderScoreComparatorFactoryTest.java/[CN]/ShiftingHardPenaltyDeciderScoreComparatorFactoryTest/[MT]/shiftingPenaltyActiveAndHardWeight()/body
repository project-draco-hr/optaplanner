{
  ShiftingHardPenaltyDeciderScoreComparatorFactory deciderScoreComparatorFactory=new ShiftingHardPenaltyDeciderScoreComparatorFactory();
  deciderScoreComparatorFactory.setHardScoreActivationThreshold(-10);
  deciderScoreComparatorFactory.setSuccessiveNoHardChangeMinimum(1);
  deciderScoreComparatorFactory.setSuccessiveNoHardChangeMaximum(3);
  deciderScoreComparatorFactory.setSuccessiveNoHardChangeRepetitionMultiplicand(5.0);
  deciderScoreComparatorFactory.setHardWeightSurvivalRatio(0.9);
  LocalSearchSolverPhaseScope localSearchSolverPhaseScope=createLocalSearchSolverPhaseScope();
  deciderScoreComparatorFactory.phaseStarted(localSearchSolverPhaseScope);
  LocalSearchStepScope localSearchStepScope=localSearchSolverPhaseScope.getLastCompletedStepScope();
  localSearchStepScope=nextStepScope(localSearchStepScope);
  deciderScoreComparatorFactory.stepStarted(localSearchStepScope);
  assertTrue(deciderScoreComparatorFactory.createDeciderScoreComparator() instanceof NaturalScoreComparator);
  localSearchStepScope.setScore(HardSoftScore.valueOf(-11,-200));
  deciderScoreComparatorFactory.stepEnded(localSearchStepScope);
  localSearchStepScope=nextStepScope(localSearchStepScope);
  deciderScoreComparatorFactory.stepStarted(localSearchStepScope);
  assertTrue(deciderScoreComparatorFactory.createDeciderScoreComparator() instanceof NaturalScoreComparator);
  localSearchStepScope.setScore(HardSoftScore.valueOf(-10,-200));
  localSearchSolverPhaseScope.setBestSolutionStepIndex(localSearchStepScope.getStepIndex());
  deciderScoreComparatorFactory.stepEnded(localSearchStepScope);
  localSearchStepScope=nextStepScope(localSearchStepScope);
  deciderScoreComparatorFactory.stepStarted(localSearchStepScope);
  assertTrue(deciderScoreComparatorFactory.createDeciderScoreComparator() instanceof NaturalScoreComparator);
  localSearchStepScope.setScore(HardSoftScore.valueOf(-10,-200));
  deciderScoreComparatorFactory.stepEnded(localSearchStepScope);
  localSearchStepScope=nextStepScope(localSearchStepScope);
  deciderScoreComparatorFactory.stepStarted(localSearchStepScope);
  assertEquals(1000,((FlatteningHardSoftScoreComparator)deciderScoreComparatorFactory.createDeciderScoreComparator()).getHardWeight());
  localSearchStepScope.setScore(HardSoftScore.valueOf(-10,-200));
  deciderScoreComparatorFactory.stepEnded(localSearchStepScope);
  localSearchStepScope=nextStepScope(localSearchStepScope);
  deciderScoreComparatorFactory.stepStarted(localSearchStepScope);
  assertEquals(900,((FlatteningHardSoftScoreComparator)deciderScoreComparatorFactory.createDeciderScoreComparator()).getHardWeight());
  localSearchStepScope.setScore(HardSoftScore.valueOf(-10,-200));
  deciderScoreComparatorFactory.stepEnded(localSearchStepScope);
  localSearchStepScope=nextStepScope(localSearchStepScope);
  deciderScoreComparatorFactory.stepStarted(localSearchStepScope);
  assertEquals(810,((FlatteningHardSoftScoreComparator)deciderScoreComparatorFactory.createDeciderScoreComparator()).getHardWeight());
  localSearchStepScope.setScore(HardSoftScore.valueOf(-10,-200));
  deciderScoreComparatorFactory.stepEnded(localSearchStepScope);
  localSearchStepScope=nextStepScope(localSearchStepScope);
  deciderScoreComparatorFactory.stepStarted(localSearchStepScope);
  assertTrue(deciderScoreComparatorFactory.createDeciderScoreComparator() instanceof NaturalScoreComparator);
  localSearchStepScope.setScore(HardSoftScore.valueOf(-10,-200));
  deciderScoreComparatorFactory.stepEnded(localSearchStepScope);
  localSearchStepScope=nextStepScope(localSearchStepScope);
  deciderScoreComparatorFactory.stepStarted(localSearchStepScope);
  assertEquals(1000,((FlatteningHardSoftScoreComparator)deciderScoreComparatorFactory.createDeciderScoreComparator()).getHardWeight());
  localSearchStepScope.setScore(HardSoftScore.valueOf(-10,-200));
  deciderScoreComparatorFactory.stepEnded(localSearchStepScope);
}
