{
  List<Move> moveList=new ArrayList<Move>();
  Solution workingSolution=solutionDirector.getWorkingSolution();
  WorkingMemory workingMemory=solutionDirector.getWorkingMemory();
  for (  PlanningEntityDescriptor entityDescriptor : solutionDescriptor.getPlanningEntityDescriptors()) {
    for (    PlanningVariableDescriptor variableDescriptor : entityDescriptor.getPlanningVariableDescriptors()) {
      Map<Object,List<Object>> variableToEntitiesMap=solutionDirector.getVariableToEntitiesMap(variableDescriptor);
      List<Object> entityList=entityDescriptor.extractEntities(workingSolution);
      for (      Object entity : entityList) {
        if (!variableDescriptor.isChained()) {
          for (          Object toPlanningValue : variableDescriptor.extractPlanningValues(workingSolution,entity)) {
            moveList.add(new GenericChangeMove(entity,variableDescriptor,toPlanningValue));
          }
        }
 else {
          Object oldTrailingEntity=findTrailingEntity(variableToEntitiesMap,variableDescriptor,entity);
          for (          Object toPlanningValue : variableDescriptor.extractPlanningValues(workingSolution,entity)) {
            Object newTrailingEntity=findTrailingEntity(variableToEntitiesMap,variableDescriptor,toPlanningValue);
            moveList.add(new GenericChainedChangeMove(entity,variableDescriptor,toPlanningValue,oldTrailingEntity,newTrailingEntity));
          }
        }
      }
    }
  }
  return moveList;
}
