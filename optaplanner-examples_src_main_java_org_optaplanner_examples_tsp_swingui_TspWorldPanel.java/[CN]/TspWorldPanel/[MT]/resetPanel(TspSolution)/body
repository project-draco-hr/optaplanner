{
  translator=new LatitudeLongitudeTranslator();
  for (  Location location : tspSolution.getLocationList()) {
    translator.addCoordinates(location.getLatitude(),location.getLongitude());
  }
  Dimension size=getSize();
  double width=size.getWidth();
  double height=size.getHeight();
  translator.prepareFor(width,height);
  Graphics2D g=createCanvas(width,height);
  if (tspSolution.getName().startsWith("europe")) {
    g.drawImage(europaBackground.getImage(),0,0,translator.getImageWidth(),translator.getImageHeight(),this);
  }
  g.setFont(g.getFont().deriveFont((float)LOCATION_NAME_TEXT_SIZE));
  g.setColor(TangoColorFactory.PLUM_2);
  List<Visit> visitList=tspSolution.getVisitList();
  for (  Visit visit : visitList) {
    Location location=visit.getLocation();
    int x=translator.translateLongitudeToX(location.getLongitude());
    int y=translator.translateLatitudeToY(location.getLatitude());
    g.fillRect(x - 1,y - 1,3,3);
    if (location.getName() != null && visitList.size() <= 500) {
      g.drawString(StringUtils.abbreviate(location.getName(),20),x + 3,y - 3);
    }
  }
  g.setColor(TangoColorFactory.ALUMINIUM_4);
  Domicile domicile=tspSolution.getDomicile();
  Location domicileLocation=domicile.getLocation();
  int domicileX=translator.translateLongitudeToX(domicileLocation.getLongitude());
  int domicileY=translator.translateLatitudeToY(domicileLocation.getLatitude());
  g.fillRect(domicileX - 2,domicileY - 2,5,5);
  if (domicileLocation.getName() != null && visitList.size() <= 500) {
    g.drawString(domicileLocation.getName(),domicileX + 3,domicileY - 3);
  }
  Set<Visit> needsBackToDomicileLineSet=new HashSet<Visit>(visitList);
  for (  Visit trailingVisit : visitList) {
    if (trailingVisit.getPreviousStandstill() instanceof Visit) {
      needsBackToDomicileLineSet.remove(trailingVisit.getPreviousStandstill());
    }
  }
  g.setColor(TangoColorFactory.CHOCOLATE_1);
  for (  Visit visit : visitList) {
    if (visit.getPreviousStandstill() != null) {
      Location previousLocation=visit.getPreviousStandstill().getLocation();
      Location location=visit.getLocation();
      translator.drawRoute(g,previousLocation.getLongitude(),previousLocation.getLatitude(),location.getLongitude(),location.getLatitude(),location instanceof AirLocation,false);
      if (needsBackToDomicileLineSet.contains(visit)) {
        translator.drawRoute(g,location.getLongitude(),location.getLatitude(),domicileLocation.getLongitude(),domicileLocation.getLatitude(),location instanceof AirLocation,true);
      }
    }
  }
  if (dragSourceStandstill != null) {
    g.setColor(TangoColorFactory.CHOCOLATE_2);
    Location sourceLocation=dragSourceStandstill.getLocation();
    Location targetLocation=dragTargetStandstill.getLocation();
    translator.drawRoute(g,sourceLocation.getLongitude(),sourceLocation.getLatitude(),targetLocation.getLongitude(),targetLocation.getLatitude(),sourceLocation instanceof AirLocation,dragTargetStandstill instanceof Domicile);
  }
  g.setColor(TangoColorFactory.ALUMINIUM_4);
  g.fillRect(5,(int)height - 15 - TEXT_SIZE,5,5);
  g.drawString("Domicile",15,(int)height - 10 - TEXT_SIZE);
  g.setColor(TangoColorFactory.PLUM_2);
  g.fillRect(6,(int)height - 9,3,3);
  g.drawString("Visit",15,(int)height - 5);
  g.setColor(TangoColorFactory.ALUMINIUM_5);
  String locationsSizeString=tspSolution.getLocationList().size() + " locations";
  g.drawString(locationsSizeString,((int)width - g.getFontMetrics().stringWidth(locationsSizeString)) / 2,(int)height - 5);
  if (tspSolution.getDistanceType() == DistanceType.AIR_DISTANCE) {
    String leftClickString="Left click and drag between 2 locations to connect them.";
    g.drawString(leftClickString,(int)width - 5 - g.getFontMetrics().stringWidth(leftClickString),(int)height - 10 - TEXT_SIZE);
    String rightClickString="Right click anywhere on the map to add a visit.";
    g.drawString(rightClickString,(int)width - 5 - g.getFontMetrics().stringWidth(rightClickString),(int)height - 5);
  }
  g.setColor(TangoColorFactory.ORANGE_3);
  SimpleLongScore score=tspSolution.getScore();
  if (score != null) {
    String distanceString=tspSolution.getDistanceString(NUMBER_FORMAT);
    g.setFont(g.getFont().deriveFont(Font.BOLD,(float)TEXT_SIZE * 2));
    g.drawString(distanceString,(int)width - g.getFontMetrics().stringWidth(distanceString) - 10,(int)height - 15 - 2 * TEXT_SIZE);
  }
  repaint();
}
