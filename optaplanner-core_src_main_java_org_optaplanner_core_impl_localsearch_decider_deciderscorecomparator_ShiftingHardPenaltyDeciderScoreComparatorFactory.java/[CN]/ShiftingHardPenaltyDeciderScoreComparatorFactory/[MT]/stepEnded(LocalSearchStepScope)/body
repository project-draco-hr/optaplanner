{
  if (stepScope.getBestScoreImproved()) {
    successiveNoHardScoreChange=0;
    shiftingPenaltyActive=false;
  }
 else {
    HardSoftScore lastStepScore=(HardSoftScore)stepScope.getPhaseScope().getLastCompletedStepScope().getScore();
    HardSoftScore stepScore=(HardSoftScore)stepScope.getScore();
    if (stepScore.getHardScore() >= hardScoreActivationThreshold && lastStepScore.getHardScore() == stepScore.getHardScore()) {
      successiveNoHardScoreChange++;
    }
 else {
      successiveNoHardScoreChange--;
      if (successiveNoHardScoreChange < 0) {
        successiveNoHardScoreChange=0;
      }
    }
    int min=successiveNoHardChangeMinimum;
    int max=successiveNoHardChangeMaximum;
    while (true) {
      if (successiveNoHardScoreChange < min) {
        shiftingPenaltyActive=false;
        break;
      }
 else       if (successiveNoHardScoreChange <= max) {
        shiftingPenaltyActive=true;
        if (successiveNoHardScoreChange == min) {
          hardWeight=startingHardWeight;
        }
 else {
          hardWeight=(int)Math.round(((double)hardWeight) * hardWeightSurvivalRatio);
        }
        break;
      }
      min=(int)Math.round(((double)min) * successiveNoHardChangeRepetitionMultiplicand);
      max=(int)Math.round(((double)max) * successiveNoHardChangeRepetitionMultiplicand);
    }
  }
}
