{
  Iterator<SubChain> iterator=subChainSelector.iterator();
  assertNotNull(iterator);
  int selectionSize=subChains.length;
  Map<SubChain,Integer> subChainCountMap=new HashMap<>(selectionSize);
  for (int i=0; i < selectionSize * 10; i++) {
    collectNextSubChain(iterator,subChainCountMap);
  }
  for (  SubChain subChain : subChains) {
    Integer count=subChainCountMap.remove(subChain);
    assertNotNull("The subChain (" + subChain + ") was not collected.",count);
  }
  assertTrue(subChainCountMap.isEmpty());
  assertTrue(iterator.hasNext());
  assertEquals(true,subChainSelector.isCountable());
  assertEquals(true,subChainSelector.isNeverEnding());
  assertEquals((long)selectionSize,subChainSelector.getSize());
}
