{
  Examination examination=(Examination)solution;
  List<Period> periodList=examination.getPeriodList();
  List<Room> roomList=examination.getRoomList();
  List<Move> moveList=new ArrayList<Move>();
  for (  Exam exam : examination.getExamList()) {
    if (exam.isCoincidenceLeader()) {
      for (      Period period : periodList) {
        int distance=calculateShortestDistance(period.getPeriodIndex(),exam.getPeriod().getPeriodIndex(),periodList.size());
        if (distance == periodJump) {
          moveList.add(new PeriodChangeMove(exam,period));
        }
      }
    }
    for (    Room room : roomList) {
      long distance=calculateShortestDistance(room.getId(),exam.getRoom().getId(),roomList.size());
      if (distance == roomJump) {
        moveList.add(new RoomChangeMove(exam,room));
      }
    }
  }
  periodJump++;
  if (periodJump >= (periodList.size() / 2)) {
    periodJump=1;
  }
  roomJump++;
  if (roomJump >= (roomList.size() / 2)) {
    roomJump=1;
  }
  return moveList;
}
