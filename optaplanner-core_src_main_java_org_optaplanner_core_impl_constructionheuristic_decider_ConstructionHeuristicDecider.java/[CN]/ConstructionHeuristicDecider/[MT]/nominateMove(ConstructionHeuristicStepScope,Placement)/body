{
  Score maxScore=null;
  ConstructionHeuristicMoveScope nominatedMoveScope=null;
  int moveIndex=0;
  for (  Move move : placement) {
    ConstructionHeuristicMoveScope moveScope=new ConstructionHeuristicMoveScope(stepScope);
    moveScope.setMoveIndex(moveIndex);
    moveScope.setMove(move);
    if (!move.isMoveDoable(stepScope.getScoreDirector())) {
      logger.trace("        Move index ({}) not doable, ignoring move ({}).",moveScope.getMoveIndex(),move);
    }
 else {
      doMove(moveScope);
      if (maxScore == null || moveScope.getScore().compareTo(maxScore) > 0) {
        maxScore=moveScope.getScore();
        nominatedMoveScope=moveScope;
      }
    }
    moveIndex++;
    if (termination.isPhaseTerminated(stepScope.getPhaseScope())) {
      break;
    }
  }
  stepScope.setSelectedMoveCount((long)moveIndex);
  return nominatedMoveScope;
}
