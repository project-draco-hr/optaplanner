{
  SelectionCacheType resolvedCacheType=SelectionCacheType.resolve(cacheType,minimumCacheType);
  SelectionOrder resolvedSelectionOrder=SelectionOrder.resolve(selectionOrder,inheritedSelectionOrder);
  validateCacheTypeVersusSelectionOrder(resolvedCacheType,resolvedSelectionOrder);
  validateSorting(resolvedSelectionOrder);
  validateProbability(resolvedSelectionOrder);
  validateSelectedLimit(minimumCacheType);
  MoveSelector moveSelector=buildBaseMoveSelector(configPolicy,SelectionCacheType.max(minimumCacheType,resolvedCacheType),determineBaseRandomSelection(resolvedCacheType,resolvedSelectionOrder));
  moveSelector=applyFiltering(resolvedCacheType,resolvedSelectionOrder,moveSelector);
  moveSelector=applySorting(resolvedCacheType,resolvedSelectionOrder,moveSelector);
  moveSelector=applyProbability(resolvedCacheType,resolvedSelectionOrder,moveSelector);
  moveSelector=applyShuffling(resolvedCacheType,resolvedSelectionOrder,moveSelector);
  moveSelector=applyCaching(resolvedCacheType,resolvedSelectionOrder,moveSelector);
  moveSelector=applySelectedLimit(resolvedCacheType,resolvedSelectionOrder,moveSelector);
  return moveSelector;
}
