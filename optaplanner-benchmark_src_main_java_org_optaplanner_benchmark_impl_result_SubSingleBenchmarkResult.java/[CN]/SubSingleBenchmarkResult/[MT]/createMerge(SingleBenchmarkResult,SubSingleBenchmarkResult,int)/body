{
  SubSingleBenchmarkResult newResult=new SubSingleBenchmarkResult(singleBenchmarkResult,subSingleBenchmarkIndex);
  newResult.subPureSingleStatisticList=new ArrayList<PureSubSingleStatistic>(oldResult.subPureSingleStatisticList.size());
  for (  PureSubSingleStatistic oldSingleStatistic : oldResult.subPureSingleStatisticList) {
    newResult.subPureSingleStatisticList.add(oldSingleStatistic.getStatisticType().buildPureSingleStatistic(newResult));
  }
  newResult.initSubSingleStatisticMap();
  for (  SubSingleStatistic subSingleStatistic : newResult.effectiveSingleStatisticMap.values()) {
    SubSingleStatistic oldSubSingleStatistic=oldResult.getSingleStatistic(subSingleStatistic.getStatisticType());
    if (!oldSubSingleStatistic.getCsvFile().exists()) {
      if (oldResult.isFailure()) {
        subSingleStatistic.initPointList();
        logger.debug("Old result ({}) is a failure, skipping merge of it's single statistic ({}).",oldResult,oldSubSingleStatistic);
        continue;
      }
 else {
        throw new IllegalStateException("Could not find old result's ( " + oldResult + " ) single statistic's ( "+ oldSubSingleStatistic+ " ) CSV file.");
      }
    }
    oldSubSingleStatistic.unhibernatePointList();
    subSingleStatistic.setPointList(oldSubSingleStatistic.getPointList());
    oldSubSingleStatistic.hibernatePointList();
  }
  newResult.succeeded=oldResult.succeeded;
  newResult.score=oldResult.score;
  newResult.uninitializedVariableCount=oldResult.uninitializedVariableCount;
  newResult.timeMillisSpent=oldResult.timeMillisSpent;
  newResult.calculateCount=oldResult.calculateCount;
  singleBenchmarkResult.getSubSingleBenchmarkResultList().add(newResult);
  return newResult;
}
