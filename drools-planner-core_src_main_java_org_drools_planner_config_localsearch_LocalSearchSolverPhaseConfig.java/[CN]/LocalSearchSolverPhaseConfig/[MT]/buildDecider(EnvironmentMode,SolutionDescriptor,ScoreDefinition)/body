{
  DefaultDecider decider=new DefaultDecider();
  MoveSelector moveSelector;
  SelectionOrder defaultSelectionOrder=SelectionOrder.RANDOM;
  SelectionCacheType defaultCacheType=SelectionCacheType.JUST_IN_TIME;
  if (moveSelectorConfigList.isEmpty()) {
    moveSelector=new ChangeMoveSelectorConfig().buildMoveSelector(environmentMode,solutionDescriptor,defaultSelectionOrder,defaultCacheType);
  }
 else   if (moveSelectorConfigList.size() == 1) {
    moveSelector=moveSelectorConfigList.get(0).buildMoveSelector(environmentMode,solutionDescriptor,defaultSelectionOrder,defaultCacheType);
  }
 else {
    List<MoveSelector> childMoveSelectorList=new ArrayList<MoveSelector>(moveSelectorConfigList.size());
    for (    MoveSelectorConfig moveSelectorConfig : moveSelectorConfigList) {
      childMoveSelectorList.add(moveSelectorConfig.buildMoveSelector(environmentMode,solutionDescriptor,defaultSelectionOrder,defaultCacheType));
    }
    moveSelector=new UnionMoveSelector(childMoveSelectorList,true);
  }
  decider.setMoveSelector(moveSelector);
  decider.setAcceptor(acceptorConfig.buildAcceptor(environmentMode,scoreDefinition));
  decider.setForager(foragerConfig.buildForager(scoreDefinition));
  if (environmentMode == EnvironmentMode.TRACE) {
    decider.setAssertMoveScoreIsUncorrupted(true);
  }
  if (environmentMode == EnvironmentMode.DEBUG || environmentMode == EnvironmentMode.TRACE) {
    decider.setAssertUndoMoveIsUncorrupted(true);
  }
  return decider;
}
