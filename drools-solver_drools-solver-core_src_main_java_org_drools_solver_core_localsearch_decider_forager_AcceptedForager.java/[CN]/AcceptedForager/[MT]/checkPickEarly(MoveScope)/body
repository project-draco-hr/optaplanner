{
switch (pickEarlyByScore) {
case NONE:
    break;
case FIRST_BEST_SCORE_IMPROVING:
  if (moveScope.getScore().compareTo(moveScope.getStepScope().getLocalSearchSolverScope().getBestScore()) > 0) {
    earlyPickedMoveScope=moveScope;
  }
break;
case FIRST_LAST_STEP_SCORE_IMPROVING:
if (moveScope.getScore().compareTo(moveScope.getStepScope().getLocalSearchSolverScope().getLastCompletedStepScope().getScore()) > 0) {
earlyPickedMoveScope=moveScope;
}
break;
default :
throw new IllegalStateException("pickEarlyByScore (" + pickEarlyByScore + ") not implemented");
}
if (pickEarlyRandomly) {
if (moveScope.getAcceptChance() >= 1.0) {
earlyPickedMoveScope=moveScope;
}
 else {
double randomChance=moveScope.getWorkingRandom().nextDouble();
if (randomChance <= moveScope.getAcceptChance()) {
earlyPickedMoveScope=moveScope;
}
}
}
}
