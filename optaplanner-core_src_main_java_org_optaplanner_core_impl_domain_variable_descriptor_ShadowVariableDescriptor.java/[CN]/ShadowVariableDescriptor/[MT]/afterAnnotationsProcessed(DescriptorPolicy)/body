{
  Class<?> masterClass=getVariablePropertyType();
  EntityDescriptor mappedByEntityDescriptor=getEntityDescriptor().getSolutionDescriptor().getEntityDescriptor(masterClass);
  if (mappedByEntityDescriptor == null) {
    throw new IllegalArgumentException("The planningEntityClass (" + entityDescriptor.getEntityClass() + ") has "+ PlanningShadowVariable.class.getSimpleName()+ " annotated property ("+ variablePropertyAccessor.getName()+ ") with a masterClass ("+ masterClass+ ") which is not a valid planning entity.");
  }
  mappedByVariableDescriptor=mappedByEntityDescriptor.getVariableDescriptor(mappedBy);
  if (mappedByVariableDescriptor == null) {
    throw new IllegalArgumentException("The planningEntityClass (" + entityDescriptor.getEntityClass() + ") has "+ PlanningShadowVariable.class.getSimpleName()+ " annotated property ("+ variablePropertyAccessor.getName()+ ") with mappedBy ("+ mappedBy+ ") which is not a valid planning variable on ("+ mappedByEntityDescriptor.getEntityClass()+ ").");
  }
  if (!mappedByVariableDescriptor.isChained()) {
    throw new IllegalArgumentException("The planningEntityClass (" + entityDescriptor.getEntityClass() + ") has "+ PlanningShadowVariable.class.getSimpleName()+ " annotated property ("+ variablePropertyAccessor.getName()+ ") with mappedBy ("+ mappedBy+ ") which is not chained ("+ mappedByVariableDescriptor.isChained()+ ").");
  }
  mappedByVariableDescriptor.registerShadowVariableDescriptor(this);
}
