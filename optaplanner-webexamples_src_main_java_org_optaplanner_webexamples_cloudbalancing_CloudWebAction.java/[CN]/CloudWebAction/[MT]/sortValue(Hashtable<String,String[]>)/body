{
  Enumeration enumeration;
  Hashtable htTmp1=new Hashtable();
  TreeMap tm=new TreeMap();
  String key;
  String computerKey="Process 0";
  String computerName="N/A";
  String[] valueArray;
  int i=0;
  int j=0;
  int k=0;
  String delims="[ ]";
  String[] computerArray=new String[9];
  String[] computerNameArray=new String[2];
  String computerId="0";
  String highestComputerId="0";
  String originalHighestComputerId="0";
  String oldComputerId="0";
  System.out.println(" ");
  System.out.println("//////////////////////");
  System.out.println("NEW CALL TO THE METHOD");
  htTmp1=(Hashtable)ht.clone();
  enumeration=htTmp1.keys();
  while (enumeration.hasMoreElements()) {
    key=(String)enumeration.nextElement();
    valueArray=(String[])htTmp1.get(key);
    if (valueArray[0].equals("N/A")) {
      i=1;
      j=1;
      tm.putAll(htTmp1);
      break;
    }
 else {
      computerNameArray=valueArray[0].split(delims);
      computerId=computerNameArray[1];
      if (Integer.valueOf(computerId) >= Integer.valueOf(oldComputerId)) {
        highestComputerId=computerId;
        oldComputerId=highestComputerId;
      }
    }
  }
  originalHighestComputerId=highestComputerId;
  while (i == 0) {
    if (htTmp1.isEmpty()) {
      System.out.println("OUT IS EMPTY ");
      i=1;
    }
 else {
      enumeration=htTmp1.keys();
      while (enumeration.hasMoreElements()) {
        key=(String)enumeration.nextElement();
        valueArray=(String[])htTmp1.get(key);
        computerNameArray=valueArray[0].split(delims);
        computerId=computerNameArray[1];
        if (Integer.valueOf(computerId) <= Integer.valueOf(highestComputerId)) {
          computerKey=key;
          computerArray=valueArray;
          computerNameArray=computerArray[0].split(delims);
          highestComputerId=computerNameArray[1];
        }
      }
      computerName=String.format("%06d",k++);
      computerArray[8]=computerKey;
      System.out.println("COMPUTER ID : " + computerName + " COMPUTER NAME : "+ computerArray[0]);
      tm.put(computerName,computerArray);
      htTmp1.remove(computerKey);
      highestComputerId=originalHighestComputerId;
      if (htTmp1.isEmpty()) {
        i=1;
      }
    }
  }
  System.out.println("//////////////////////");
  System.out.println("//////////////////////");
  return tm;
}
