{
  TravelingTournament travelingTournament=(TravelingTournament)solution;
  List<Match> matchList=travelingTournament.getMatchList();
  List<Move> moveList=new ArrayList<Move>(matchList.size() / 2);
  for (  Match firstMatch : matchList) {
    for (    Match secondMatch : matchList) {
      if (firstMatch.getHomeTeam().equals(secondMatch.getAwayTeam()) && firstMatch.getAwayTeam().equals(secondMatch.getHomeTeam()) && (firstMatch.getId().compareTo(secondMatch.getId()) < 0)) {
        MatchSwapMove matchSwapMove=new MatchSwapMove(firstMatch,secondMatch);
        moveList.add(matchSwapMove);
        break;
      }
    }
  }
  return moveList;
}
