{
  PackageBuilder packageBuilder=new PackageBuilder();
  for (  String scoreDrl : scoreDrlList) {
    InputStream scoreDrlIn=getClass().getResourceAsStream(scoreDrl);
    if (scoreDrlIn == null) {
      throw new IllegalArgumentException("scoreDrl (" + scoreDrl + ") does not exist as a classpath resource.");
    }
    try {
      packageBuilder.addPackageFromDrl(new InputStreamReader(scoreDrlIn,"utf-8"));
    }
 catch (    DroolsParserException e) {
      throw new IllegalArgumentException("scoreDrl (" + scoreDrl + ") could not be loaded.",e);
    }
catch (    IOException e) {
      throw new IllegalArgumentException("scoreDrl (" + scoreDrl + ") could not be loaded.",e);
    }
 finally {
      IOUtils.closeQuietly(scoreDrlIn);
    }
  }
  RuleBase ruleBase=RuleBaseFactory.newRuleBase();
  try {
    ruleBase.addPackage(packageBuilder.getPackage());
  }
 catch (  Exception e) {
    throw new IllegalArgumentException("scoreDrlList (" + scoreDrlList + ") could not be loaded.",e);
  }
  return ruleBase;
}
