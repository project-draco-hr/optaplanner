{
  int hardLevelSize=3;
  int softLevelSize=2;
  int levelSize=hardLevelSize + softLevelSize;
  int[] scores=new int[levelSize];
  for (int i=0; i < levelSize; i++) {
    scores[i]=i;
  }
  BendableScoreDefinition bendableScoreDefinition=new BendableScoreDefinition(hardLevelSize,softLevelSize);
  BendableScore bendableScore=bendableScoreDefinition.createScoreInitialized(scores);
  assertEquals(hardLevelSize,bendableScore.getHardLevelsSize());
  assertEquals(softLevelSize,bendableScore.getSoftLevelsSize());
  for (int i=0; i < levelSize; i++) {
    if (i < hardLevelSize) {
      assertEquals(scores[i],bendableScore.getHardScore(i));
    }
 else {
      assertEquals(scores[i],bendableScore.getSoftScore(i - hardLevelSize));
    }
  }
}
