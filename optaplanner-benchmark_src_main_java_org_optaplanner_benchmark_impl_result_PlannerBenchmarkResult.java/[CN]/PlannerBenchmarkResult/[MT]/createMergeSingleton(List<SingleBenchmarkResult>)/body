{
  PlannerBenchmarkResult newResult=null;
  Map<PlannerBenchmarkResult,PlannerBenchmarkResult> mergeMap=new IdentityHashMap<PlannerBenchmarkResult,PlannerBenchmarkResult>();
  for (  SingleBenchmarkResult singleBenchmarkResult : singleBenchmarkResultList) {
    PlannerBenchmarkResult oldResult=singleBenchmarkResult.getSolverBenchmarkResult().getPlannerBenchmarkResult();
    if (!mergeMap.containsKey(oldResult)) {
      if (newResult == null) {
        newResult=new PlannerBenchmarkResult();
        newResult.setAggregation(true);
        newResult.availableProcessors=oldResult.availableProcessors;
        newResult.maxMemory=oldResult.maxMemory;
        newResult.optaPlannerVersion=oldResult.optaPlannerVersion;
        newResult.javaVersion=oldResult.javaVersion;
        newResult.javaVM=oldResult.javaVM;
        newResult.operatingSystem=oldResult.operatingSystem;
        newResult.parallelBenchmarkCount=oldResult.parallelBenchmarkCount;
        newResult.warmUpTimeMillisSpend=oldResult.warmUpTimeMillisSpend;
        newResult.solverBenchmarkResultList=new ArrayList<SolverBenchmarkResult>();
        newResult.unifiedProblemBenchmarkResultList=new ArrayList<ProblemBenchmarkResult>();
        newResult.startingTimestamp=null;
        newResult.benchmarkTimeMillisSpent=null;
      }
 else {
        newResult.availableProcessors=ConfigUtils.mergeProperty(newResult.availableProcessors,oldResult.availableProcessors);
        newResult.maxMemory=ConfigUtils.mergeProperty(newResult.maxMemory,oldResult.maxMemory);
        newResult.optaPlannerVersion=ConfigUtils.mergeProperty(newResult.optaPlannerVersion,oldResult.optaPlannerVersion);
        newResult.javaVersion=ConfigUtils.mergeProperty(newResult.javaVersion,oldResult.javaVersion);
        newResult.javaVM=ConfigUtils.mergeProperty(newResult.javaVM,oldResult.javaVM);
        newResult.operatingSystem=ConfigUtils.mergeProperty(newResult.operatingSystem,oldResult.operatingSystem);
        newResult.parallelBenchmarkCount=ConfigUtils.mergeProperty(newResult.parallelBenchmarkCount,oldResult.parallelBenchmarkCount);
        newResult.warmUpTimeMillisSpend=ConfigUtils.mergeProperty(newResult.warmUpTimeMillisSpend,oldResult.warmUpTimeMillisSpend);
      }
      mergeMap.put(oldResult,newResult);
    }
  }
  return newResult;
}
