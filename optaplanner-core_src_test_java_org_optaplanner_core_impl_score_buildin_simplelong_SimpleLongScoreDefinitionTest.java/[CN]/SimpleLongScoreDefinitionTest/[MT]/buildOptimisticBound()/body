{
  int scoreSize=new SimpleLongScoreDefinition().getLevelsSize();
  InitializingScoreTrendLevel[] levels=new InitializingScoreTrendLevel[scoreSize];
  for (int i=0; i < scoreSize; i++) {
    levels[i]=InitializingScoreTrendLevel.ONLY_UP;
  }
  SimpleLongScore score=SimpleLongScore.parseScore("-999");
  InitializingScoreTrend scoreTrend=new InitializingScoreTrend(levels);
  SimpleLongScoreDefinition hardSoftLongScoreDefinition=new SimpleLongScoreDefinition();
  SimpleLongScore score2=hardSoftLongScoreDefinition.buildOptimisticBound(scoreTrend,score);
  assertEquals(Long.MAX_VALUE,score2.getScore());
  for (int i=0; i < scoreSize; i++) {
    levels[i]=InitializingScoreTrendLevel.ONLY_DOWN;
  }
  score2=hardSoftLongScoreDefinition.buildOptimisticBound(scoreTrend,score);
  assertEquals(-999,score2.getScore());
}
