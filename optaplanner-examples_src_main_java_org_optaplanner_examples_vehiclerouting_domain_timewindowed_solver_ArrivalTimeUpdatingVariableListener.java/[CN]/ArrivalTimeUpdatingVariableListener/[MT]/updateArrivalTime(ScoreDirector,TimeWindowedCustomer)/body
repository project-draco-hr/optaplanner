{
  Standstill previousStandstill=sourceCustomer.getPreviousStandstill();
  Long departureTime=(previousStandstill instanceof TimeWindowedCustomer) ? ((TimeWindowedCustomer)previousStandstill).getDepartureTime() : null;
  TimeWindowedCustomer shadowCustomer=sourceCustomer;
  Long arrivalTime=calculateArrivalTime(shadowCustomer,departureTime);
  while (shadowCustomer != null && !Objects.equals(shadowCustomer.getArrivalTime(),arrivalTime)) {
    scoreDirector.beforeVariableChanged(shadowCustomer,"arrivalTime");
    shadowCustomer.setArrivalTime(arrivalTime);
    scoreDirector.afterVariableChanged(shadowCustomer,"arrivalTime");
    departureTime=shadowCustomer.getDepartureTime();
    shadowCustomer=shadowCustomer.getNextCustomer();
    arrivalTime=calculateArrivalTime(shadowCustomer,departureTime);
  }
}
