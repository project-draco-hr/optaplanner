{
  SmallScalingOrderedSet<String> set=new SmallScalingOrderedSet<String>();
  assertTrue(set.add("s1"));
  assertFalse(set.add("s1"));
  assertTrue(set.add("s2"));
  assertFalse(set.add("s1"));
  assertFalse(set.add("s2"));
  assertTrue(set.remove("s2"));
  assertFalse(set.remove("s2"));
  assertTrue(set.add("s2"));
  assertEquals(2,set.size());
  assertTrue(set.contains("s1"));
  assertTrue(set.contains("s2"));
  for (int i=0; i < SmallScalingOrderedSet.LIST_SIZE_THRESHOLD - 3; i++) {
    set.add("filler " + i);
  }
  assertFalse(set.add("s2"));
  assertTrue(set.add("s3"));
  assertFalse(set.add("s2"));
  assertEquals(SmallScalingOrderedSet.LIST_SIZE_THRESHOLD,set.size());
  assertTrue(set.add("s4"));
  assertFalse(set.add("s2"));
  assertFalse(set.add("s3"));
  assertFalse(set.add("s4"));
  assertEquals(SmallScalingOrderedSet.LIST_SIZE_THRESHOLD + 1,set.size());
  assertTrue(set.remove("s4"));
  assertFalse(set.add("s2"));
  assertFalse(set.add("s3"));
  assertEquals(SmallScalingOrderedSet.LIST_SIZE_THRESHOLD,set.size());
  assertTrue(set.add("s5"));
  assertFalse(set.add("s2"));
  assertFalse(set.add("s3"));
  assertEquals(SmallScalingOrderedSet.LIST_SIZE_THRESHOLD + 1,set.size());
  assertTrue(set.add("s6"));
  assertFalse(set.add("s2"));
  assertFalse(set.add("s3"));
  assertEquals(SmallScalingOrderedSet.LIST_SIZE_THRESHOLD + 2,set.size());
  assertTrue(set.contains("s1"));
  assertTrue(set.contains("s2"));
  assertTrue(set.contains("s3"));
  assertFalse(set.contains("s4"));
  assertTrue(set.contains("s5"));
  assertTrue(set.contains("s6"));
}
