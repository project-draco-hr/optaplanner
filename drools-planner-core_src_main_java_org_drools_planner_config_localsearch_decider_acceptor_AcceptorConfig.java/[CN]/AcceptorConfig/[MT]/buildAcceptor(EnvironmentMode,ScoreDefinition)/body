{
  List<Acceptor> acceptorList=new ArrayList<Acceptor>();
  if (acceptor != null) {
    acceptorList.add(acceptor);
  }
  if (acceptorClass != null) {
    try {
      acceptorList.add(acceptorClass.newInstance());
    }
 catch (    InstantiationException e) {
      throw new IllegalArgumentException("acceptorClass (" + acceptorClass.getName() + ") does not have a public no-arg constructor",e);
    }
catch (    IllegalAccessException e) {
      throw new IllegalArgumentException("acceptorClass (" + acceptorClass.getName() + ") does not have a public no-arg constructor",e);
    }
  }
  if ((acceptorTypeList != null && acceptorTypeList.contains(AcceptorType.MOVE_TABU)) || moveTabuSize != null || partialMoveTabuSize != null) {
    MoveTabuAcceptor moveTabuAcceptor=new MoveTabuAcceptor();
    moveTabuAcceptor.setUseUndoMoveAsTabuMove(false);
    if (moveTabuSize != null) {
      moveTabuAcceptor.setTabuSize(moveTabuSize);
    }
    if (partialMoveTabuSize != null) {
      moveTabuAcceptor.setPartialTabuSize(partialMoveTabuSize);
    }
    if (environmentMode == EnvironmentMode.TRACE) {
      moveTabuAcceptor.setAssertTabuHashCodeCorrectness(true);
    }
    acceptorList.add(moveTabuAcceptor);
  }
  if ((acceptorTypeList != null && acceptorTypeList.contains(AcceptorType.UNDO_MOVE_TABU)) || undoMoveTabuSize != null || partialUndoMoveTabuSize != null) {
    MoveTabuAcceptor undoMoveTabuAcceptor=new MoveTabuAcceptor();
    undoMoveTabuAcceptor.setUseUndoMoveAsTabuMove(true);
    if (undoMoveTabuSize != null) {
      undoMoveTabuAcceptor.setTabuSize(undoMoveTabuSize);
    }
    if (partialUndoMoveTabuSize != null) {
      undoMoveTabuAcceptor.setPartialTabuSize(partialUndoMoveTabuSize);
    }
    if (environmentMode == EnvironmentMode.TRACE) {
      undoMoveTabuAcceptor.setAssertTabuHashCodeCorrectness(true);
    }
    acceptorList.add(undoMoveTabuAcceptor);
  }
  if ((acceptorTypeList != null && acceptorTypeList.contains(AcceptorType.PROPERTY_TABU)) || propertyTabuSize != null || partialPropertyTabuSize != null) {
    PropertyTabuAcceptor propertyTabuAcceptor=new PropertyTabuAcceptor();
    if (propertyTabuSize != null) {
      propertyTabuAcceptor.setTabuSize(propertyTabuSize);
    }
    if (partialPropertyTabuSize != null) {
      propertyTabuAcceptor.setPartialTabuSize(partialPropertyTabuSize);
    }
    if (environmentMode == EnvironmentMode.TRACE) {
      propertyTabuAcceptor.setAssertTabuHashCodeCorrectness(true);
    }
    acceptorList.add(propertyTabuAcceptor);
  }
  if ((acceptorTypeList != null && acceptorTypeList.contains(AcceptorType.SOLUTION_TABU)) || solutionTabuSize != null || partialSolutionTabuSize != null) {
    SolutionTabuAcceptor solutionTabuAcceptor=new SolutionTabuAcceptor();
    if (solutionTabuSize != null) {
      solutionTabuAcceptor.setTabuSize(solutionTabuSize);
    }
    if (partialSolutionTabuSize != null) {
      solutionTabuAcceptor.setPartialTabuSize(partialSolutionTabuSize);
    }
    if (environmentMode == EnvironmentMode.TRACE) {
      solutionTabuAcceptor.setAssertTabuHashCodeCorrectness(true);
    }
    acceptorList.add(solutionTabuAcceptor);
  }
  if ((acceptorTypeList != null && acceptorTypeList.contains(AcceptorType.SIMULATED_ANNEALING)) || simulatedAnnealingStartingTemperature != null) {
    SimulatedAnnealingAcceptor simulatedAnnealingAcceptor=new SimulatedAnnealingAcceptor();
    simulatedAnnealingAcceptor.setStartingTemperature(scoreDefinition.parseScore(simulatedAnnealingStartingTemperature));
    acceptorList.add(simulatedAnnealingAcceptor);
  }
  if ((acceptorTypeList != null && acceptorTypeList.contains(AcceptorType.GREAT_DELUGE)) || greatDelugeWaterLevelUpperBoundRate != null || greatDelugeWaterRisingRate != null) {
    double waterLevelUpperBoundRate=(Double)ObjectUtils.defaultIfNull(greatDelugeWaterLevelUpperBoundRate,1.20);
    double waterRisingRate=(Double)ObjectUtils.defaultIfNull(greatDelugeWaterRisingRate,0.0000001);
    acceptorList.add(new GreatDelugeAcceptor(waterLevelUpperBoundRate,waterRisingRate));
  }
  if ((acceptorTypeList != null && acceptorTypeList.contains(AcceptorType.LATE_ACCEPTANCE))) {
    throw new UnsupportedOperationException("LATE_ACCEPTANCE not yet supported.");
  }
  if (acceptorList.size() == 1) {
    return acceptorList.get(0);
  }
 else   if (acceptorList.size() > 1) {
    CompositeAcceptor compositeAcceptor=new CompositeAcceptor();
    compositeAcceptor.setAcceptorList(acceptorList);
    return compositeAcceptor;
  }
 else {
    SolutionTabuAcceptor solutionTabuAcceptor=new SolutionTabuAcceptor();
    solutionTabuAcceptor.setTabuSize(1500);
    if (environmentMode == EnvironmentMode.TRACE) {
      solutionTabuAcceptor.setAssertTabuHashCodeCorrectness(true);
    }
    return solutionTabuAcceptor;
  }
}
