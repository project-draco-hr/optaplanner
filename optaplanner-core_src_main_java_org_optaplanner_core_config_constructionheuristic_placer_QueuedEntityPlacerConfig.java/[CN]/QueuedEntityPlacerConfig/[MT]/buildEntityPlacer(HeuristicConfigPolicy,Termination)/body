{
  EntitySelectorConfig entitySelectorConfig_=buildEntitySelectorConfig(configPolicy);
  EntitySelector entitySelector=entitySelectorConfig_.buildEntitySelector(configPolicy,SelectionCacheType.PHASE,SelectionOrder.ORIGINAL);
  List<MoveSelectorConfig> moveSelectorConfigList_;
  if (ConfigUtils.isEmptyCollection(moveSelectorConfigList)) {
    EntityDescriptor entityDescriptor=entitySelector.getEntityDescriptor();
    Collection<GenuineVariableDescriptor> variableDescriptors=entityDescriptor.getGenuineVariableDescriptors();
    List<MoveSelectorConfig> subMoveSelectorConfigList=new ArrayList<MoveSelectorConfig>(variableDescriptors.size());
    for (    GenuineVariableDescriptor variableDescriptor : variableDescriptors) {
      subMoveSelectorConfigList.add(buildChangeMoveSelectorConfig(configPolicy,entitySelectorConfig_.getId(),variableDescriptor));
    }
    if (true) {
      MoveSelectorConfig subMoveSelectorConfig;
      if (subMoveSelectorConfigList.size() > 1) {
        subMoveSelectorConfig=new CartesianProductMoveSelectorConfig(subMoveSelectorConfigList);
      }
 else {
        subMoveSelectorConfig=subMoveSelectorConfigList.get(0);
      }
      moveSelectorConfigList_=Collections.<MoveSelectorConfig>singletonList(subMoveSelectorConfig);
    }
 else {
      moveSelectorConfigList_=subMoveSelectorConfigList;
    }
  }
 else {
    moveSelectorConfigList_=moveSelectorConfigList;
  }
  List<MoveSelector> moveSelectorList=new ArrayList<MoveSelector>(moveSelectorConfigList_.size());
  for (  MoveSelectorConfig moveSelectorConfig : moveSelectorConfigList_) {
    moveSelectorList.add(moveSelectorConfig.buildMoveSelector(configPolicy,SelectionCacheType.JUST_IN_TIME,SelectionOrder.ORIGINAL));
  }
  return new QueuedEntityPlacer(entitySelector,moveSelectorList);
}
