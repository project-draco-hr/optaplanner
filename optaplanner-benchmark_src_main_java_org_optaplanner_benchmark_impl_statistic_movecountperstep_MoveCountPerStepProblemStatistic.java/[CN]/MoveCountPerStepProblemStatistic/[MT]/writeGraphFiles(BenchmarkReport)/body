{
  Locale locale=benchmarkReport.getLocale();
  NumberAxis xAxis=new NumberAxis("Time spend");
  xAxis.setNumberFormatOverride(new MillisecondsSpendNumberFormat(locale));
  NumberAxis yAxis=new NumberAxis("Accepted/selected moves per step");
  yAxis.setNumberFormatOverride(NumberFormat.getInstance(locale));
  XYPlot plot=new XYPlot(null,xAxis,yAxis,null);
  DrawingSupplier drawingSupplier=new DefaultDrawingSupplier();
  plot.setOrientation(PlotOrientation.VERTICAL);
  int seriesIndex=0;
  for (  SingleBenchmark singleBenchmark : problemBenchmark.getSingleBenchmarkList()) {
    XYSeries acceptedSeries=new XYSeries(singleBenchmark.getSolverBenchmark().getNameWithFavoriteSuffix() + " accepted");
    XYSeries selectedSeries=new XYSeries(singleBenchmark.getSolverBenchmark().getNameWithFavoriteSuffix() + " selected");
    XYItemRenderer renderer=new XYLineAndShapeRenderer(true,false);
    if (singleBenchmark.isSuccess()) {
      MoveCountPerStepSingleStatistic singleStatistic=(MoveCountPerStepSingleStatistic)singleBenchmark.getSingleStatistic(problemStatisticType);
      for (      MoveCountPerStepSingleStatisticPoint point : singleStatistic.getPointList()) {
        long timeMillisSpend=point.getTimeMillisSpend();
        long acceptedMoveCount=point.getMoveCountPerStepMeasurement().getAcceptedMoveCount();
        long selectedMoveCount=point.getMoveCountPerStepMeasurement().getSelectedMoveCount();
        acceptedSeries.add(timeMillisSpend,acceptedMoveCount);
        selectedSeries.add(timeMillisSpend,selectedMoveCount);
      }
    }
    XYSeriesCollection seriesCollection=new XYSeriesCollection();
    seriesCollection.addSeries(acceptedSeries);
    seriesCollection.addSeries(selectedSeries);
    plot.setDataset(seriesIndex,seriesCollection);
    if (singleBenchmark.getSolverBenchmark().isFavorite()) {
      renderer.setSeriesStroke(0,new BasicStroke(2.0f));
      renderer.setSeriesStroke(1,new BasicStroke(2.0f,BasicStroke.CAP_ROUND,BasicStroke.JOIN_ROUND,1.0f,new float[]{2.0f,6.0f},0.0f));
    }
 else {
      renderer.setSeriesStroke(1,new BasicStroke(1.0f,BasicStroke.CAP_ROUND,BasicStroke.JOIN_ROUND,1.0f,new float[]{2.0f,6.0f},0.0f));
    }
    Paint linePaint=drawingSupplier.getNextPaint();
    renderer.setSeriesPaint(0,linePaint);
    renderer.setSeriesPaint(1,linePaint);
    plot.setRenderer(seriesIndex,renderer);
    seriesIndex++;
  }
  JFreeChart chart=new JFreeChart(problemBenchmark.getName() + " move count per step statistic",JFreeChart.DEFAULT_TITLE_FONT,plot,true);
  graphFile=writeChartToImageFile(chart,problemBenchmark.getName() + "MoveCountPerStepStatistic");
}
