{
  CustomShadowVariable shadowVariableAnnotation=variablePropertyAccessor.getReadMethod().getAnnotation(CustomShadowVariable.class);
  SolutionDescriptor solutionDescriptor=entityDescriptor.getSolutionDescriptor();
  CustomShadowVariable.Source[] sources=shadowVariableAnnotation.sources();
  sourceVariableDescriptorList=new ArrayList<VariableDescriptor>(sources.length);
  for (  CustomShadowVariable.Source source : sources) {
    EntityDescriptor sourceEntityDescriptor;
    Class<?> sourceEntityClass=source.entityClass();
    if (sourceEntityClass.equals(CustomShadowVariable.Source.NullEntityClass.class)) {
      sourceEntityDescriptor=entityDescriptor;
    }
 else {
      sourceEntityDescriptor=solutionDescriptor.findEntityDescriptor(sourceEntityClass);
      if (sourceEntityDescriptor == null) {
        throw new IllegalArgumentException("The entityClass (" + entityDescriptor.getEntityClass() + ") has a "+ CustomShadowVariable.class.getSimpleName()+ " annotated property ("+ variablePropertyAccessor.getName()+ ") with a sourceEntityClass ("+ sourceEntityClass+ ") which is not a valid planning entity.");
      }
    }
    String sourceVariableName=source.variableName();
    VariableDescriptor sourceVariableDescriptor=sourceEntityDescriptor.getVariableDescriptor(sourceVariableName);
    if (sourceVariableDescriptor == null) {
      throw new IllegalArgumentException("The entityClass (" + entityDescriptor.getEntityClass() + ") has a "+ CustomShadowVariable.class.getSimpleName()+ " annotated property ("+ variablePropertyAccessor.getName()+ ") with sourceVariableName ("+ sourceVariableName+ ") which is not a valid planning variable on entityClass ("+ sourceEntityDescriptor.getEntityClass()+ ").\n"+ entityDescriptor.buildInvalidVariableNameExceptionMessage(sourceVariableName));
    }
    sourceVariableDescriptor.registerShadowVariableDescriptor(this);
    sourceVariableDescriptorList.add(sourceVariableDescriptor);
  }
}
