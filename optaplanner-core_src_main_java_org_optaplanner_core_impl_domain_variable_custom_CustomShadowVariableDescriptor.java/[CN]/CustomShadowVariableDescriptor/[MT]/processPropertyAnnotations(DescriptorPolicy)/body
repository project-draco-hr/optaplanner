{
  CustomShadowVariable shadowVariableAnnotation=variableMemberAccessor.getAnnotation(CustomShadowVariable.class);
  PlanningVariableReference variableListenerRef=shadowVariableAnnotation.variableListenerRef();
  if (variableListenerRef.variableName().equals("")) {
    variableListenerRef=null;
  }
  variableListenerClass=shadowVariableAnnotation.variableListenerClass();
  if (variableListenerClass == CustomShadowVariable.NullVariableListener.class) {
    variableListenerClass=null;
  }
  PlanningVariableReference[] sources=shadowVariableAnnotation.sources();
  if (variableListenerRef != null) {
    if (variableListenerClass != null || sources.length > 0) {
      throw new IllegalArgumentException("The entityClass (" + entityDescriptor.getEntityClass() + ") has a "+ CustomShadowVariable.class.getSimpleName()+ " annotated property ("+ variableMemberAccessor.getName()+ ") with a non-null variableListenerRef ("+ variableListenerRef+ "), so it can not have a variableListenerClass ("+ variableListenerClass+ ") nor any sources ("+ Arrays.toString(sources)+ ").");
    }
  }
 else {
    if (variableListenerClass == null) {
      throw new IllegalArgumentException("The entityClass (" + entityDescriptor.getEntityClass() + ") has a "+ CustomShadowVariable.class.getSimpleName()+ " annotated property ("+ variableMemberAccessor.getName()+ ") which lacks a variableListenerClass ("+ variableListenerClass+ ").");
    }
    if (sources.length < 1) {
      throw new IllegalArgumentException("The entityClass (" + entityDescriptor.getEntityClass() + ") has a "+ CustomShadowVariable.class.getSimpleName()+ " annotated property ("+ variableMemberAccessor.getName()+ ") with sources ("+ Arrays.toString(sources)+ ") which is empty.");
    }
  }
}
