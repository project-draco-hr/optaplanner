{
  TangoColorFactory tangoColorFactory=new TangoColorFactory();
  for (  MeetingAssignment meetingAssignment : meetingSchedule.getMeetingAssignmentList()) {
    Color color=tangoColorFactory.pickColor(meetingAssignment.getMeeting());
    TimeGrain startingTimeGrain=meetingAssignment.getStartingTimeGrain();
    TimeGrain lastTimeGrain;
    if (startingTimeGrain == null) {
      lastTimeGrain=null;
    }
 else {
      int lastTimeGrainIndex=meetingAssignment.getLastTimeGrainIndex();
      List<TimeGrain> timeGrainList=meetingSchedule.getTimeGrainList();
      if (lastTimeGrainIndex < meetingSchedule.getTimeGrainList().size()) {
        lastTimeGrain=timeGrainList.get(lastTimeGrainIndex);
      }
 else {
        lastTimeGrain=OVERTIME_TIME_GRAIN;
      }
    }
    roomsPanel.addCell(startingTimeGrain,meetingAssignment.getRoom(),lastTimeGrain,meetingAssignment.getRoom(),createButton(meetingAssignment,color));
    for (    RequiredAttendance requiredAttendance : meetingAssignment.getMeeting().getRequiredAttendanceList()) {
      Pair<Person,Boolean> pair=Pair.of(requiredAttendance.getPerson(),Boolean.TRUE);
      personsPanel.addCell(startingTimeGrain,pair,lastTimeGrain,pair,createButton(meetingAssignment,color));
    }
    for (    PreferredAttendance preferredAttendance : meetingAssignment.getMeeting().getPreferredAttendanceList()) {
      Pair<Person,Boolean> pair=Pair.of(preferredAttendance.getPerson(),Boolean.FALSE);
      personsPanel.addCell(startingTimeGrain,pair,lastTimeGrain,pair,createButton(meetingAssignment,color));
    }
  }
}
