{
  if (!AbstractBendableScoreDefinition.class.isAssignableFrom(scoreDefinitionClass)) {
    throw new IllegalArgumentException("This constructor is not compatible with scoreClass (" + scoreClass + "), use the other constructor with no int parameters instead.");
  }
  if (BendableScoreDefinition.class.equals(scoreDefinitionClass)) {
    scoreDefinition=new BendableScoreDefinition(hardLevelsSize,softLevelsSize);
  }
 else   if (BendableLongScoreDefinition.class.equals(scoreDefinitionClass)) {
    scoreDefinition=new BendableLongScoreDefinition(hardLevelsSize,softLevelsSize);
  }
 else   if (BendableBigDecimalScoreDefinition.class.equals(scoreDefinitionClass)) {
    scoreDefinition=new BendableBigDecimalScoreDefinition(hardLevelsSize,softLevelsSize);
  }
 else {
    throw new IllegalArgumentException("The scoreDefinitionClass (" + scoreDefinitionClass + ") is not yet supported in "+ this.getClass().getSimpleName()+ ".");
  }
  if (scoreClass != scoreDefinition.getScoreClass()) {
    throw new IllegalStateException("The scoreClass (" + scoreClass + ") of the Score field to serialize to XML"+ " does not match the scoreDefinition's scoreClass ("+ scoreDefinition.getScoreClass()+ ").");
  }
}
