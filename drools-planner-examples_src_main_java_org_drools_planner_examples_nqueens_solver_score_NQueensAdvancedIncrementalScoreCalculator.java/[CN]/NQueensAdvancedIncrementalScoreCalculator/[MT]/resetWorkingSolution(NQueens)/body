{
  int n=nQueens.getN();
  rowIndexMap=new HashMap<Integer,List<Queen>>(n);
  ascendingDiagonalIndexMap=new HashMap<Integer,List<Queen>>(n * 2);
  descendingDiagonalIndexMap=new HashMap<Integer,List<Queen>>(n * 2);
  for (int i=0; i < n; i++) {
    rowIndexMap.put(i,new ArrayList<Queen>(n));
    ascendingDiagonalIndexMap.put(i,new ArrayList<Queen>(n));
    descendingDiagonalIndexMap.put(i,new ArrayList<Queen>(n));
    if (i != 0) {
      ascendingDiagonalIndexMap.put(n - 1 + i,new ArrayList<Queen>(n));
      descendingDiagonalIndexMap.put(-i,new ArrayList<Queen>(n));
    }
  }
  score=0;
  for (  Queen queen : nQueens.getQueenList()) {
    insert(queen);
  }
}
