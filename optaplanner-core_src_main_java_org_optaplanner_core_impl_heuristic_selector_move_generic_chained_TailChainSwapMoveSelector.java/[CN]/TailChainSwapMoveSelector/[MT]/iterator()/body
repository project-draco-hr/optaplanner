{
  final GenuineVariableDescriptor variableDescriptor=valueSelector.getVariableDescriptor();
  if (!randomSelection) {
    return new AbstractOriginalChangeIterator<Move>(entitySelector,valueSelector){
      @Override protected Move newChangeSelection(      Object entity,      Object toValue){
        return new TailChainSwapMove(variableDescriptor,inverseVariableSupply,anchorVariableSupply,entity,toValue);
      }
    }
;
  }
 else {
    return new AbstractRandomChangeIterator<Move>(entitySelector,valueSelector){
      @Override protected Move newChangeSelection(      Object entity,      Object toValue){
        return new TailChainSwapMove(variableDescriptor,inverseVariableSupply,anchorVariableSupply,entity,toValue);
      }
    }
;
  }
}
