{
  DefaultCategoryDataset dataset=new DefaultCategoryDataset();
  for (  SolverBenchmark solverBenchmark : plannerBenchmark.getSolverBenchmarkList()) {
    String solverLabel=solverBenchmark.getNameWithFavoriteSuffix();
    for (    SingleBenchmark singleBenchmark : solverBenchmark.getSingleBenchmarkList()) {
      if (singleBenchmark.isSuccess()) {
        long timeMillisSpend=singleBenchmark.getTimeMillisSpend();
        String planningProblemLabel=singleBenchmark.getProblemBenchmark().getName();
        dataset.addValue(timeMillisSpend,solverLabel,planningProblemLabel);
      }
    }
  }
  CategoryPlot plot=createBarChartPlot(dataset,"Time spend",new MillisecondsSpendNumberFormat());
  JFreeChart chart=new JFreeChart("Time spend summary (lower time is better)",JFreeChart.DEFAULT_TITLE_FONT,plot,true);
  BufferedImage chartImage=chart.createBufferedImage(1024,768);
  timeSpendSummaryFile=new File(plannerBenchmark.getBenchmarkReportDirectory(),"timeSpendSummary.png");
  OutputStream out=null;
  try {
    out=new FileOutputStream(timeSpendSummaryFile);
    ImageIO.write(chartImage,"png",out);
  }
 catch (  IOException e) {
    throw new IllegalArgumentException("Problem writing timeSpendSummaryFile: " + timeSpendSummaryFile,e);
  }
 finally {
    IOUtils.closeQuietly(out);
  }
}
