{
  ShiftingHardPenaltyDeciderScoreComparatorFactory deciderScoreComparatorFactory=new ShiftingHardPenaltyDeciderScoreComparatorFactory();
  deciderScoreComparatorFactory.setHardScoreActivationThreshold(-10);
  deciderScoreComparatorFactory.setSuccessiveNoHardChangeMinimum(1);
  deciderScoreComparatorFactory.setSuccessiveNoHardChangeMaximum(3);
  deciderScoreComparatorFactory.setSuccessiveNoHardChangeRepetitionMultiplicand(5.0);
  deciderScoreComparatorFactory.setHardWeightSurvivalRatio(0.9);
  LocalSearchSolverScope localSearchSolverScope=createLocalSearchSolverScope();
  deciderScoreComparatorFactory.solvingStarted(localSearchSolverScope);
  StepScope stepScope=localSearchSolverScope.getLastCompletedStepScope();
  stepScope=nextStepScope(stepScope);
  deciderScoreComparatorFactory.beforeDeciding(stepScope);
  assertTrue(deciderScoreComparatorFactory.createDeciderScoreComparator() instanceof NaturalScoreComparator);
  deciderScoreComparatorFactory.stepDecided(stepScope);
  stepScope.setScore(DefaultHardAndSoftScore.valueOf(-11,-200));
  deciderScoreComparatorFactory.stepTaken(stepScope);
  stepScope=nextStepScope(stepScope);
  deciderScoreComparatorFactory.beforeDeciding(stepScope);
  assertTrue(deciderScoreComparatorFactory.createDeciderScoreComparator() instanceof NaturalScoreComparator);
  deciderScoreComparatorFactory.stepDecided(stepScope);
  stepScope.setScore(DefaultHardAndSoftScore.valueOf(-10,-200));
  localSearchSolverScope.setBestSolutionStepIndex(stepScope.getStepIndex());
  deciderScoreComparatorFactory.stepTaken(stepScope);
  stepScope=nextStepScope(stepScope);
  deciderScoreComparatorFactory.beforeDeciding(stepScope);
  assertTrue(deciderScoreComparatorFactory.createDeciderScoreComparator() instanceof NaturalScoreComparator);
  deciderScoreComparatorFactory.stepDecided(stepScope);
  stepScope.setScore(DefaultHardAndSoftScore.valueOf(-10,-200));
  deciderScoreComparatorFactory.stepTaken(stepScope);
  stepScope=nextStepScope(stepScope);
  deciderScoreComparatorFactory.beforeDeciding(stepScope);
  assertEquals(1000,((HardPenaltyDeciderScoreComparator)deciderScoreComparatorFactory.createDeciderScoreComparator()).getHardWeight());
  deciderScoreComparatorFactory.stepDecided(stepScope);
  stepScope.setScore(DefaultHardAndSoftScore.valueOf(-10,-200));
  deciderScoreComparatorFactory.stepTaken(stepScope);
  stepScope=nextStepScope(stepScope);
  deciderScoreComparatorFactory.beforeDeciding(stepScope);
  assertEquals(900,((HardPenaltyDeciderScoreComparator)deciderScoreComparatorFactory.createDeciderScoreComparator()).getHardWeight());
  deciderScoreComparatorFactory.stepDecided(stepScope);
  stepScope.setScore(DefaultHardAndSoftScore.valueOf(-10,-200));
  deciderScoreComparatorFactory.stepTaken(stepScope);
  stepScope=nextStepScope(stepScope);
  deciderScoreComparatorFactory.beforeDeciding(stepScope);
  assertEquals(810,((HardPenaltyDeciderScoreComparator)deciderScoreComparatorFactory.createDeciderScoreComparator()).getHardWeight());
  deciderScoreComparatorFactory.stepDecided(stepScope);
  stepScope.setScore(DefaultHardAndSoftScore.valueOf(-10,-200));
  deciderScoreComparatorFactory.stepTaken(stepScope);
  stepScope=nextStepScope(stepScope);
  deciderScoreComparatorFactory.beforeDeciding(stepScope);
  assertTrue(deciderScoreComparatorFactory.createDeciderScoreComparator() instanceof NaturalScoreComparator);
  deciderScoreComparatorFactory.stepDecided(stepScope);
  stepScope.setScore(DefaultHardAndSoftScore.valueOf(-10,-200));
  deciderScoreComparatorFactory.stepTaken(stepScope);
  stepScope=nextStepScope(stepScope);
  deciderScoreComparatorFactory.beforeDeciding(stepScope);
  assertEquals(1000,((HardPenaltyDeciderScoreComparator)deciderScoreComparatorFactory.createDeciderScoreComparator()).getHardWeight());
  deciderScoreComparatorFactory.stepDecided(stepScope);
  stepScope.setScore(DefaultHardAndSoftScore.valueOf(-10,-200));
  deciderScoreComparatorFactory.stepTaken(stepScope);
}
