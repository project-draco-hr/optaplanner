{
  String firstLine=readStringValue();
  if (firstLine.matches("\\s*NAME\\s*:.*")) {
    schedule=new VehicleRoutingSolution();
    schedule.setId(0L);
    schedule.setName(removePrefixSuffixFromLine(firstLine,"\\s*NAME\\s*:",""));
    readBasicFormat();
  }
 else   if (splitBySpacesOrTabs(firstLine).length == 3) {
    schedule=new VehicleRoutingSolution();
    schedule.setId(0L);
    String[] tokens=splitBySpacesOrTabs(firstLine,3);
    locationListSize=Integer.parseInt(tokens[0]);
    vehicleListSize=Integer.parseInt(tokens[1]);
    capacity=Integer.parseInt(tokens[2]);
    readCourseraFormat();
  }
 else {
    schedule=new TimeWindowedVehicleRoutingSolution();
    schedule.setId(0L);
    schedule.setName(firstLine);
    readTimeWindowedFormat();
  }
  BigInteger possibleSolutionSize=factorial(locationListSize + vehicleListSize - 1).divide(factorial(vehicleListSize - 1));
  logger.info("VehicleRoutingSolution {} has {} depots, {} vehicles and {} customers with a search space of {}.",getInputId(),schedule.getDepotList().size(),schedule.getVehicleList().size(),schedule.getCustomerList().size(),getFlooredPossibleSolutionSize(possibleSolutionSize));
  return schedule;
}
