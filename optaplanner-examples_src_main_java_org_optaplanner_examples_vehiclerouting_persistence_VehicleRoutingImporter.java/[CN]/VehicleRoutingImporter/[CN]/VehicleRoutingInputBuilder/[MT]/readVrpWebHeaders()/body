{
  skipOptionalConstantLines("COMMENT *:.*");
  String vrpType=readStringValue("TYPE *:");
switch (vrpType) {
case "CVRP":
    timewindowed=false;
  break;
case "CVRPTW":
timewindowed=true;
Long solutionId=solution.getId();
String solutionName=solution.getName();
solution=new TimeWindowedVehicleRoutingSolution();
solution.setId(solutionId);
solution.setName(solutionName);
break;
default :
throw new IllegalArgumentException("The vrpType (" + vrpType + ") is not supported.");
}
customerListSize=readIntegerValue("DIMENSION *:");
String edgeWeightType=readStringValue("EDGE_WEIGHT_TYPE *:");
if (edgeWeightType.equalsIgnoreCase("EUC_2D")) {
solution.setDistanceType(DistanceType.AIR_DISTANCE);
}
 else if (edgeWeightType.equalsIgnoreCase("EXPLICIT")) {
solution.setDistanceType(DistanceType.ROAD_DISTANCE);
String edgeWeightFormat=readStringValue("EDGE_WEIGHT_FORMAT *:");
if (!edgeWeightFormat.equalsIgnoreCase("FULL_MATRIX")) {
throw new IllegalArgumentException("The edgeWeightFormat (" + edgeWeightFormat + ") is not supported.");
}
}
 else if (edgeWeightType.equalsIgnoreCase("SEGMENTED_EXPLICIT")) {
solution.setDistanceType(DistanceType.SEGMENTED_ROAD_DISTANCE);
String edgeWeightFormat=readStringValue("EDGE_WEIGHT_FORMAT *:");
if (!edgeWeightFormat.equalsIgnoreCase("HUB_AND_NEARBY_MATRIX")) {
throw new IllegalArgumentException("The edgeWeightFormat (" + edgeWeightFormat + ") is not supported.");
}
}
 else {
throw new IllegalArgumentException("The edgeWeightType (" + edgeWeightType + ") is not supported.");
}
solution.setDistanceUnitOfMeasurement(readOptionalStringValue("EDGE_WEIGHT_UNIT_OF_MEASUREMENT *:","distance"));
capacity=readIntegerValue("CAPACITY *:");
}
