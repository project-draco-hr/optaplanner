{
  List<Field> fieldList=Arrays.asList(entityClass.getDeclaredFields());
  Collections.sort(fieldList,new AlphabeticMemberComparator());
  for (  Field field : fieldList) {
    if (field.isAnnotationPresent(ValueRangeProvider.class)) {
      MemberAccessor memberAccessor=new FieldMemberAccessor(field);
      descriptorPolicy.addFromEntityValueRangeProvider(memberAccessor);
    }
  }
  List<Method> methodList=Arrays.asList(entityClass.getDeclaredMethods());
  Collections.sort(methodList,new AlphabeticMemberComparator());
  for (  Method method : methodList) {
    if (method.isAnnotationPresent(ValueRangeProvider.class)) {
      ReflectionHelper.assertReadMethod(method,ValueRangeProvider.class);
      MemberAccessor memberAccessor=new MethodMemberAccessor(method);
      descriptorPolicy.addFromEntityValueRangeProvider(memberAccessor);
    }
  }
}
