{
  PropertyDescriptor[] propertyDescriptors=entityBeanInfo.getPropertyDescriptors();
  genuineVariableDescriptorMap=new LinkedHashMap<String,GenuineVariableDescriptor>(propertyDescriptors.length);
  shadowVariableDescriptorMap=new LinkedHashMap<String,ShadowVariableDescriptor>(propertyDescriptors.length);
  boolean noPlanningVariableAnnotation=true;
  for (  PropertyDescriptor propertyDescriptor : propertyDescriptors) {
    Method propertyGetter=propertyDescriptor.getReadMethod();
    if (propertyGetter != null) {
      if (propertyGetter.isAnnotationPresent(PlanningVariable.class)) {
        noPlanningVariableAnnotation=false;
        if (propertyDescriptor.getWriteMethod() == null) {
          throw new IllegalStateException("The planningEntityClass (" + entityClass + ") has a "+ PlanningVariable.class.getSimpleName()+ " annotated property ("+ propertyDescriptor.getName()+ ") that should have a setter.");
        }
        GenuineVariableDescriptor variableDescriptor=new GenuineVariableDescriptor(this,propertyDescriptor);
        genuineVariableDescriptorMap.put(propertyDescriptor.getName(),variableDescriptor);
        variableDescriptor.processAnnotations(descriptorPolicy);
      }
      if (propertyGetter.isAnnotationPresent(PlanningShadowVariable.class)) {
        if (propertyGetter.isAnnotationPresent(PlanningVariable.class)) {
          throw new IllegalStateException("The planningEntityClass (" + entityClass + ") has a property ("+ propertyDescriptor.getName()+ ") that has both a "+ PlanningVariable.class.getSimpleName()+ " annotation and a "+ PlanningShadowVariable.class.getSimpleName()+ " annotation.");
        }
        noPlanningVariableAnnotation=false;
        if (propertyDescriptor.getWriteMethod() == null) {
          throw new IllegalStateException("The planningEntityClass (" + entityClass + ") has a "+ PlanningShadowVariable.class.getSimpleName()+ " annotated property ("+ propertyDescriptor.getName()+ ") that should have a setter.");
        }
        ShadowVariableDescriptor variableDescriptor=new ShadowVariableDescriptor(this,propertyDescriptor);
        shadowVariableDescriptorMap.put(propertyDescriptor.getName(),variableDescriptor);
        variableDescriptor.processAnnotations(descriptorPolicy);
      }
    }
  }
  if (noPlanningVariableAnnotation) {
    throw new IllegalStateException("The planningEntityClass (" + entityClass + ") should have at least 1 getter with a "+ PlanningVariable.class.getSimpleName()+ " annotation.");
  }
}
