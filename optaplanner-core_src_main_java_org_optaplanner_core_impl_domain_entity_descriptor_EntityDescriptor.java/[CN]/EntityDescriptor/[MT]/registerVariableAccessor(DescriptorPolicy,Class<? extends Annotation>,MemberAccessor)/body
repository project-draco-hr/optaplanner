{
  if (variableAnnotationClass.equals(PlanningVariable.class)) {
    GenuineVariableDescriptor variableDescriptor=new GenuineVariableDescriptor(this,memberAccessor);
    declaredGenuineVariableDescriptorMap.put(memberAccessor.getName(),variableDescriptor);
    variableDescriptor.processAnnotations(descriptorPolicy);
  }
 else   if (variableAnnotationClass.equals(InverseRelationShadowVariable.class)) {
    ShadowVariableDescriptor variableDescriptor=new InverseRelationShadowVariableDescriptor(this,memberAccessor);
    declaredShadowVariableDescriptorMap.put(memberAccessor.getName(),variableDescriptor);
    variableDescriptor.processAnnotations(descriptorPolicy);
  }
 else   if (variableAnnotationClass.equals(AnchorShadowVariable.class)) {
    ShadowVariableDescriptor variableDescriptor=new AnchorShadowVariableDescriptor(this,memberAccessor);
    declaredShadowVariableDescriptorMap.put(memberAccessor.getName(),variableDescriptor);
    variableDescriptor.processAnnotations(descriptorPolicy);
  }
 else   if (variableAnnotationClass.equals(CustomShadowVariable.class)) {
    ShadowVariableDescriptor variableDescriptor=new CustomShadowVariableDescriptor(this,memberAccessor);
    declaredShadowVariableDescriptorMap.put(memberAccessor.getName(),variableDescriptor);
    variableDescriptor.processAnnotations(descriptorPolicy);
  }
 else {
    throw new IllegalStateException("The variableAnnotationClass (" + variableAnnotationClass + ") is not implemented.");
  }
}
