{
  final Location newLocation;
switch (getTspSolution().getDistanceType()) {
case AIR_DISTANCE:
    newLocation=new AirLocation();
  break;
case ROAD_DISTANCE:
logger.warn("Adding locations for a road distance dataset is not supported.");
return;
default :
throw new IllegalStateException("The distanceType (" + getTspSolution().getDistanceType() + ") is not implemented.");
}
newLocation.setId(nextLocationId);
nextLocationId++;
newLocation.setLongitude(longitude);
newLocation.setLatitude(latitude);
logger.info("Scheduling insertion of newLocation ({}).",newLocation);
doProblemFactChange(new ProblemFactChange(){
public void doChange(ScoreDirector scoreDirector){
TspSolution tspSolution=(TspSolution)scoreDirector.getWorkingSolution();
scoreDirector.beforeProblemFactAdded(newLocation);
tspSolution.getLocationList().add(newLocation);
scoreDirector.afterProblemFactAdded(newLocation);
Visit newVisit=new Visit();
newVisit.setId(newLocation.getId());
newVisit.setLocation(newLocation);
scoreDirector.beforeEntityAdded(newVisit);
tspSolution.getVisitList().add(newVisit);
scoreDirector.afterEntityAdded(newVisit);
scoreDirector.triggerVariableListeners();
}
}
);
}
