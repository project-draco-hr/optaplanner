{
  if (warmUpTimeMillisSpend != null) {
    logger.info("================================================================================");
    logger.info("Warming up");
    logger.info("================================================================================");
    long startingTimeMillis=System.currentTimeMillis();
    long timeLeft=warmUpTimeMillisSpend;
    Iterator<SolverBenchmark> solverBenchmarkIt=solverBenchmarkList.iterator();
    int overallResultIndex=0;
    while (timeLeft > 0L) {
      if (!solverBenchmarkIt.hasNext()) {
        solverBenchmarkIt=solverBenchmarkList.iterator();
        overallResultIndex++;
      }
      SolverBenchmark solverBenchmark=solverBenchmarkIt.next();
      List<PlannerBenchmarkResult> plannerBenchmarkResultList=solverBenchmark.getPlannerBenchmarkResultList();
      int resultIndex=overallResultIndex % plannerBenchmarkResultList.size();
      PlannerBenchmarkResult result=plannerBenchmarkResultList.get(resultIndex);
      TerminationConfig originalTerminationConfig=solverBenchmark.getSolverConfig().getTerminationConfig();
      TerminationConfig tmpTerminationConfig=originalTerminationConfig.clone();
      tmpTerminationConfig.shortenMaximumTimeMillisSpendTotal(timeLeft);
      solverBenchmark.getSolverConfig().setTerminationConfig(tmpTerminationConfig);
      Solver solver=solverBenchmark.getSolverConfig().buildSolver();
      File unsolvedSolutionFile=result.getUnsolvedSolutionFile();
      Solution unsolvedSolution=readUnsolvedSolution(xStream,unsolvedSolutionFile);
      solver.setPlanningProblem(unsolvedSolution);
      solver.solve();
      solverBenchmark.getSolverConfig().setTerminationConfig(originalTerminationConfig);
      long timeSpend=System.currentTimeMillis() - startingTimeMillis;
      timeLeft=warmUpTimeMillisSpend - timeSpend;
    }
    logger.info("================================================================================");
    logger.info("Finished warmUp");
    logger.info("================================================================================");
  }
}
