{
  benchmarkingStarted();
  warmUp();
  Map<PlannerBenchmarkResult,Future<PlannerBenchmarkResult>> futureMap=new HashMap<PlannerBenchmarkResult,Future<PlannerBenchmarkResult>>();
  for (  ProblemBenchmark problemBenchmark : unifiedProblemBenchmarkList) {
    for (    PlannerBenchmarkResult result : problemBenchmark.getPlannerBenchmarkResultList()) {
      Future<PlannerBenchmarkResult> future=executorService.submit(result);
      futureMap.put(result,future);
    }
  }
  for (  Map.Entry<PlannerBenchmarkResult,Future<PlannerBenchmarkResult>> futureEntry : futureMap.entrySet()) {
    PlannerBenchmarkResult result=futureEntry.getKey();
    Future<PlannerBenchmarkResult> future=futureEntry.getValue();
    Throwable failureThrowable=null;
    try {
      result=future.get();
      if (result.getScore() == null) {
        throw new IllegalStateException("Score is null. TODO fix JBRULES-3462.");
      }
    }
 catch (    InterruptedException e) {
      logger.error("The plannerBenchmarkResult (" + result.getName() + ") was interrupted.",e);
      failureThrowable=e;
    }
catch (    ExecutionException e) {
      Throwable cause=e.getCause();
      logger.error("The plannerBenchmarkResult (" + result.getName() + ") failed.",cause);
      failureThrowable=cause;
    }
catch (    IllegalStateException e) {
      logger.error("The plannerBenchmarkResult (" + result.getName() + ") failed.",e);
      failureThrowable=e;
    }
    if (failureThrowable == null) {
      result.setSuccess(true);
    }
 else {
      result.setSuccess(false);
      result.setFailureThrowable(failureThrowable);
      failureCount++;
      if (firstFailureThrowable == null) {
        firstFailureThrowable=failureThrowable;
      }
    }
  }
  benchmarkingEnded();
}
