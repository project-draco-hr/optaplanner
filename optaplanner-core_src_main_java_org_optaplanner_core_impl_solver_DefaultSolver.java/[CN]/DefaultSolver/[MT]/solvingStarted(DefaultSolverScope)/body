{
  solverScope.setScoreDirector(scoreDirectorFactory.buildScoreDirector());
  solverScope.setWorkingRandom(randomFactory.createRandom());
  solverScope.setWorkingSolutionFromBestSolution();
  bestSolutionRecaller.solvingStarted(solverScope);
  for (  SolverPhase solverPhase : solverPhaseList) {
    solverPhase.solvingStarted(solverScope);
  }
  int startingSolverCount=solverScope.getStartingSolverCount() + 1;
  solverScope.setStartingSolverCount(startingSolverCount);
  logger.info("Solving {}: time spent ({}), score ({}), new best score ({}), random ({}).",(startingSolverCount == 1 ? "started" : "restarted"),solverScope.calculateTimeMillisSpent(),solverScope.getStartingInitializedScore(),solverScope.getBestScore(),(randomFactory != null ? randomFactory : "not fixed"));
}
