{
  TaskSeriesCollection seriesCollection=new TaskSeriesCollection();
  Map<Project,TaskSeries> taskSeriesMap=new LinkedHashMap<Project,TaskSeries>(projectsSchedule.getProjectList().size());
  for (  Project project : projectsSchedule.getProjectList()) {
    TaskSeries taskSeries=new TaskSeries(project.getLabel());
    seriesCollection.add(taskSeries);
    taskSeriesMap.put(project,taskSeries);
  }
  for (  Allocation allocation : projectsSchedule.getAllocationList()) {
    Integer startDate=allocation.getStartDate();
    Integer endDate=allocation.getEndDate();
    if (startDate != null && endDate != null) {
      Task task=new Task(allocation.getLabel(),toJdkDate(startDate),toJdkDate(endDate));
      taskSeriesMap.get(allocation.getProject()).add(task);
    }
  }
  JFreeChart chart=ChartFactory.createGanttChart("Project scheduling","Job","Allocation",seriesCollection,true,false,false);
  return chart;
}
