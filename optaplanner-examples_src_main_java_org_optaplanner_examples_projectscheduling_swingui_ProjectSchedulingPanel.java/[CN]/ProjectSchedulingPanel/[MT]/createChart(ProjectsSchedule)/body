{
  YIntervalSeriesCollection seriesCollection=new YIntervalSeriesCollection();
  Map<Project,YIntervalSeries> projectSeriesMap=new LinkedHashMap<Project,YIntervalSeries>(projectsSchedule.getProjectList().size());
  YIntervalRenderer renderer=new YIntervalRenderer();
  int maximumEndDate=0;
  int seriesIndex=0;
  for (  Project project : projectsSchedule.getProjectList()) {
    YIntervalSeries projectSeries=new YIntervalSeries(project.getLabel());
    seriesCollection.addSeries(projectSeries);
    projectSeriesMap.put(project,projectSeries);
    renderer.setSeriesShape(seriesIndex,new Rectangle());
    renderer.setSeriesStroke(seriesIndex,new BasicStroke(3.0f));
    seriesIndex++;
  }
  for (  Allocation allocation : projectsSchedule.getAllocationList()) {
    Integer startDate=allocation.getStartDate();
    Integer endDate=allocation.getEndDate();
    if (startDate != null && endDate != null) {
      YIntervalSeries projectSeries=projectSeriesMap.get(allocation.getProject());
      projectSeries.add(allocation.getId(),(startDate + endDate) / 2.0,startDate,endDate);
      maximumEndDate=Math.max(maximumEndDate,endDate);
    }
  }
  NumberAxis domainAxis=new NumberAxis("Job");
  domainAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
  domainAxis.setRange(-0.5,projectsSchedule.getAllocationList().size() - 0.5);
  domainAxis.setInverted(true);
  NumberAxis rangeAxis=new NumberAxis("Day (start to end date)");
  rangeAxis.setRange(-0.5,maximumEndDate + 0.5);
  XYPlot plot=new XYPlot(seriesCollection,domainAxis,rangeAxis,renderer);
  plot.setOrientation(PlotOrientation.HORIZONTAL);
  return new JFreeChart("Project scheduling",JFreeChart.DEFAULT_TITLE_FONT,plot,true);
}
