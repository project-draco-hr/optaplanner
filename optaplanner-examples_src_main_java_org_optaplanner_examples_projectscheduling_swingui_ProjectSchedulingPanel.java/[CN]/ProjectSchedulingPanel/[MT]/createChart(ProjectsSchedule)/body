{
  YIntervalSeriesCollection seriesCollection=new YIntervalSeriesCollection();
  Map<Project,YIntervalSeries> projectSeriesMap=new LinkedHashMap<Project,YIntervalSeries>(projectsSchedule.getProjectList().size());
  int maximumEndDate=0;
  for (  Project project : projectsSchedule.getProjectList()) {
    YIntervalSeries projectSeries=new YIntervalSeries(project.getLabel());
    projectSeriesMap.put(project,projectSeries);
  }
  for (  Allocation allocation : projectsSchedule.getAllocationList()) {
    Integer startDate=allocation.getStartDate();
    Integer endDate=allocation.getEndDate();
    if (startDate != null && endDate != null) {
      YIntervalSeries projectSeries=projectSeriesMap.get(allocation.getProject());
      projectSeries.add(allocation.getId(),(startDate + endDate) / 2.0,startDate,endDate);
      maximumEndDate=Math.max(maximumEndDate,endDate);
    }
  }
  for (  YIntervalSeries projectSeries : projectSeriesMap.values()) {
    seriesCollection.addSeries(projectSeries);
  }
  JFreeChart chart=ChartFactory.createScatterPlot("Project scheduling","Job","Day (start and end date)",seriesCollection,PlotOrientation.HORIZONTAL,true,false,false);
  XYPlot plot=(XYPlot)chart.getPlot();
  ValueAxis domainAxis=plot.getDomainAxis();
  domainAxis.setRange(-0.5,projectsSchedule.getAllocationList().size() - 0.5);
  domainAxis.setInverted(true);
  ValueAxis rangeAxis=plot.getRangeAxis();
  rangeAxis.setRange(-0.5,maximumEndDate + 0.5);
  plot.setRenderer(new YIntervalRenderer());
  return chart;
}
