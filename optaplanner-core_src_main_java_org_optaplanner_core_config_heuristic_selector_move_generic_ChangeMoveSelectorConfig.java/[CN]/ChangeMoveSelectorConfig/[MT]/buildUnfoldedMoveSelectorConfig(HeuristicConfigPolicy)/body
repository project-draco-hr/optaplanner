{
  Collection<EntityDescriptor> entityDescriptors;
  SolutionDescriptor solutionDescriptor=configPolicy.getSolutionDescriptor();
  if (entitySelectorConfig != null && (entitySelectorConfig.getEntityClass() != null || entitySelectorConfig.getMimicSelectorRef() != null)) {
    if (valueSelectorConfig != null && valueSelectorConfig.getVariableName() != null) {
      return null;
    }
    EntityDescriptor entityDescriptor;
    if (entitySelectorConfig.getEntityClass() != null) {
      entityDescriptor=solutionDescriptor.getEntityDescriptorStrict(entitySelectorConfig.getEntityClass());
      if (entityDescriptor == null) {
        throw new IllegalArgumentException("The selectorConfig (" + entitySelectorConfig + ") has an entityClass ("+ entitySelectorConfig.getEntityClass()+ ") that is not a known planning entity.\n"+ "Check your solver configuration. If that class ("+ entitySelectorConfig.getEntityClass().getSimpleName()+ ") is not in the entityClassSet ("+ solutionDescriptor.getEntityClassSet()+ "), check your Solution implementation's annotated methods too.");
      }
    }
 else {
      entityDescriptor=configPolicy.getEntityMimicRecorder(entitySelectorConfig.getMimicSelectorRef()).getEntityDescriptor();
    }
    entityDescriptors=Collections.singletonList(entityDescriptor);
  }
 else {
    entityDescriptors=solutionDescriptor.getEntityDescriptors();
  }
  List<GenuineVariableDescriptor> variableDescriptorList=new ArrayList<GenuineVariableDescriptor>();
  for (  EntityDescriptor entityDescriptor : entityDescriptors) {
    if (valueSelectorConfig != null && valueSelectorConfig.getVariableName() != null) {
      GenuineVariableDescriptor variableDescriptor=entityDescriptor.getGenuineVariableDescriptor(valueSelectorConfig.getVariableName());
      if (variableDescriptor == null) {
        throw new IllegalArgumentException("The selectorConfig (" + valueSelectorConfig + ") has a variableName ("+ valueSelectorConfig.getVariableName()+ ") which is not a valid planning variable on entityClass ("+ entityDescriptor.getEntityClass()+ ").\n"+ entityDescriptor.buildInvalidVariableNameExceptionMessage(valueSelectorConfig.getVariableName()));
      }
      variableDescriptorList.add(variableDescriptor);
    }
 else {
      variableDescriptorList.addAll(entityDescriptor.getGenuineVariableDescriptors());
    }
  }
  List<MoveSelectorConfig> moveSelectorConfigList=new ArrayList<MoveSelectorConfig>(variableDescriptorList.size());
  for (  GenuineVariableDescriptor variableDescriptor : variableDescriptorList) {
    ChangeMoveSelectorConfig changeMoveSelectorConfig=new ChangeMoveSelectorConfig();
    changeMoveSelectorConfig.inherit(this);
    EntitySelectorConfig entitySelectorConfig=new EntitySelectorConfig();
    if (this.entitySelectorConfig != null) {
      entitySelectorConfig.inherit(this.entitySelectorConfig);
    }
    if (entitySelectorConfig.getMimicSelectorRef() == null) {
      entitySelectorConfig.setEntityClass(variableDescriptor.getEntityDescriptor().getEntityClass());
    }
    changeMoveSelectorConfig.setEntitySelectorConfig(entitySelectorConfig);
    ValueSelectorConfig valueSelectorConfig=new ValueSelectorConfig();
    if (this.valueSelectorConfig != null) {
      valueSelectorConfig.inherit(this.valueSelectorConfig);
    }
    valueSelectorConfig.setVariableName(variableDescriptor.getVariableName());
    changeMoveSelectorConfig.setValueSelectorConfig(valueSelectorConfig);
    moveSelectorConfigList.add(changeMoveSelectorConfig);
  }
  return moveSelectorConfigList.size() == 1 ? moveSelectorConfigList.get(0) : new CartesianProductMoveSelectorConfig(moveSelectorConfigList);
}
