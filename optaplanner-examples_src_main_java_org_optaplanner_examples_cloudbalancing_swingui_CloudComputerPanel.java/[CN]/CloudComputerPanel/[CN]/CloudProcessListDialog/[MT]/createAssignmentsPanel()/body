{
  JPanel assignmentsPanel=new JPanel(new GridLayout(0,5));
  int colorIndex=0;
  for (  final CloudProcess process : processList) {
    JPanel labelAndDeletePanel=new JPanel(new BorderLayout(5,0));
    labelAndDeletePanel.add(new JLabel(cloudBalancingPanel.getCloudProcessIcon()),BorderLayout.WEST);
    JLabel processLabel=new JLabel(process.getLabel());
    processLabel.setForeground(TangoColorFactory.SEQUENCE_1[colorIndex]);
    labelAndDeletePanel.add(processLabel,BorderLayout.CENTER);
    JPanel deletePanel=new JPanel(new BorderLayout());
    JButton deleteButton=SwingUtils.makeSmallButton(new JButton(cloudBalancingPanel.getDeleteCloudProcessIcon()));
    deleteButton.setToolTipText("Delete");
    deleteButton.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent e){
        cloudBalancingPanel.deleteProcess(process);
        CloudProcessListDialog.this.dispose();
      }
    }
);
    deletePanel.add(deleteButton,BorderLayout.NORTH);
    labelAndDeletePanel.add(deletePanel,BorderLayout.EAST);
    assignmentsPanel.add(labelAndDeletePanel);
    JTextField cpuPowerField=new JTextField(process.getRequiredCpuPower() + " GHz");
    cpuPowerField.setEditable(false);
    assignmentsPanel.add(cpuPowerField);
    JTextField memoryField=new JTextField(process.getRequiredMemory() + " GB");
    memoryField.setEditable(false);
    assignmentsPanel.add(memoryField);
    JTextField networkBandwidthField=new JTextField(process.getRequiredNetworkBandwidth() + " GB");
    networkBandwidthField.setEditable(false);
    assignmentsPanel.add(networkBandwidthField);
    assignmentsPanel.add(cloudBalancingPanel.createButton(process));
    colorIndex=(colorIndex + 1) % TangoColorFactory.SEQUENCE_1.length;
  }
  JPanel fillerAssignmentsPanel=new JPanel(new BorderLayout());
  fillerAssignmentsPanel.add(assignmentsPanel,BorderLayout.NORTH);
  return fillerAssignmentsPanel;
}
