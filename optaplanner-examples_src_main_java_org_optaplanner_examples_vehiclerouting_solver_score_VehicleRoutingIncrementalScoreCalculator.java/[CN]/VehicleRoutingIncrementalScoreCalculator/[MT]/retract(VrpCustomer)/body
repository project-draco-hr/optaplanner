{
  VrpStandstill previousStandstill=customer.getPreviousStandstill();
  if (previousStandstill != null) {
    VrpVehicle vehicle=customer.getVehicle();
    if (vehicle != null) {
      int capacity=vehicle.getCapacity();
      int oldDemand=vehicleDemandMap.get(vehicle);
      int newDemand=oldDemand - customer.getDemand();
      hardScore+=Math.min(capacity - newDemand,0) - Math.min(capacity - oldDemand,0);
      vehicleDemandMap.put(vehicle,newDemand);
      softScore+=customer.getDistanceToPreviousStandstill();
      if (customer.getNextCustomer() == null) {
        softScore+=vehicle.getLocation().getDistance(customer.getLocation());
      }
    }
    if (timeWindowed) {
      VrpTimeWindowedCustomer timeWindowedCustomer=(VrpTimeWindowedCustomer)customer;
      int readyTime=timeWindowedCustomer.getReadyTime();
      int dueTime=timeWindowedCustomer.getDueTime();
      Integer arrivalTime=timeWindowedCustomer.getArrivalTime();
      if (dueTime < arrivalTime) {
        hardScore+=(arrivalTime - dueTime);
      }
      if (arrivalTime < readyTime) {
        softScore+=(readyTime - arrivalTime);
      }
    }
  }
}
