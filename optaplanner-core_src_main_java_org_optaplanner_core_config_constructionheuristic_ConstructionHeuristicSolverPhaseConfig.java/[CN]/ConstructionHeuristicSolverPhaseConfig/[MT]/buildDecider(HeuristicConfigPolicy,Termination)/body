{
  ConstructionHeuristicPickEarlyType pickEarlyType_=(this.pickEarlyType == null) ? ConstructionHeuristicPickEarlyType.NEVER : this.pickEarlyType;
  ConstructionHeuristicForager forager=new DefaultConstructionHeuristicForager(pickEarlyType_);
  ConstructionHeuristicDecider decider=new ConstructionHeuristicDecider(termination,forager);
  EnvironmentMode environmentMode=configPolicy.getEnvironmentMode();
  if (environmentMode.isNonIntrusiveFullAsserted()) {
    decider.setAssertMoveScoreFromScratch(true);
  }
  if (environmentMode.isIntrusiveFastAsserted()) {
    decider.setAssertExpectedUndoMoveScore(true);
  }
  return decider;
}
