{
  if (subSingleBenchmarkResultList == null || subSingleBenchmarkResultList.isEmpty()) {
    throw new IllegalStateException("Cannot get representative subSingleBenchmarkResult from empty subSingleBenchmarkResultList.");
  }
  List<SubSingleBenchmarkResult> subSingleBenchmarkResultListCopy=new ArrayList<SubSingleBenchmarkResult>(subSingleBenchmarkResultList);
  Collections.sort(subSingleBenchmarkResultListCopy,new Comparator<SubSingleBenchmarkResult>(){
    @Override public int compare(    SubSingleBenchmarkResult o1,    SubSingleBenchmarkResult o2){
      return new CompareToBuilder().append(o1.hasAnyFailure(),o2.hasAnyFailure()).append(o1.getRanking(),o2.getRanking()).toComparison();
    }
  }
);
  best=subSingleBenchmarkResultListCopy.get(0);
  worst=subSingleBenchmarkResultListCopy.get(subSingleBenchmarkResultListCopy.size() - 1);
  median=subSingleBenchmarkResultListCopy.get(ConfigUtils.ceilDivide(subSingleBenchmarkResultListCopy.size() - 1,2));
  usedMemoryAfterInputSolution=median.getUsedMemoryAfterInputSolution();
  timeMillisSpent=median.getTimeMillisSpent();
  calculateCount=median.getCalculateCount();
  winningScoreDifference=median.getWinningScoreDifference();
  worstScoreDifferencePercentage=median.getWorstScoreDifferencePercentage();
}
