{
  InnerScoreDirector guiInnerScoreDirector=(InnerScoreDirector)this.guiScoreDirector;
  SolutionDescriptor solutionDescriptor=guiInnerScoreDirector.getSolutionDescriptor();
  EntityDescriptor entityDescriptor=solutionDescriptor.findEntityDescriptor(leftEntity.getClass());
  List<GenuineVariableDescriptor> variableDescriptorList=entityDescriptor.getGenuineVariableDescriptorList();
  if (entityDescriptor.hasAnyChainedGenuineVariables()) {
    List<SingletonInverseVariableSupply> inverseVariableSupplyList=new ArrayList<SingletonInverseVariableSupply>(variableDescriptorList.size());
    SupplyManager supplyManager=guiInnerScoreDirector.getSupplyManager();
    for (    GenuineVariableDescriptor variableDescriptor : variableDescriptorList) {
      SingletonInverseVariableSupply inverseVariableSupply;
      if (variableDescriptor.isChained()) {
        inverseVariableSupply=supplyManager.demand(new SingletonInverseVariableDemand(variableDescriptor));
      }
 else {
        inverseVariableSupply=null;
      }
      inverseVariableSupplyList.add(inverseVariableSupply);
    }
    return new ChainedSwapMove(variableDescriptorList,inverseVariableSupplyList,leftEntity,rightEntity);
  }
 else {
    return new SwapMove(variableDescriptorList,leftEntity,rightEntity);
  }
}
