{
  if (!daemon) {
    return !problemFactChangeQueue.isEmpty() && !terminatedEarly;
  }
 else {
    while (problemFactChangeQueue.isEmpty() && !terminatedEarly) {
      try {
        wait();
      }
 catch (      InterruptedException e) {
        Thread.currentThread().interrupt();
        throw new IllegalStateException("Solver thread was interrupted during Object.wait().",e);
      }
    }
    return !terminatedEarly;
  }
}
