{
  List<CloudComputer> computerList=cloudBalance.getComputerList();
  int cpuPowerTotal=0;
  int memoryTotal=0;
  int networkBandwidthTotal=0;
  for (  CloudComputer computer : computerList) {
    cpuPowerTotal+=computer.getCpuPower();
    memoryTotal+=computer.getMemory();
    networkBandwidthTotal+=computer.getNetworkBandwidth();
  }
  int requiredCpuPowerTotal=0;
  int requiredMemoryTotal=0;
  int requiredNetworkBandwidthTotal=0;
  for (  CloudProcess process : cloudBalance.getProcessList()) {
    requiredCpuPowerTotal+=process.getRequiredCpuPower();
    requiredMemoryTotal+=process.getRequiredMemory();
    requiredNetworkBandwidthTotal+=process.getRequiredNetworkBandwidth();
  }
  int cpuPowerLacking=requiredCpuPowerTotal - cpuPowerTotal;
  while (cpuPowerLacking > 0) {
    CloudComputer computer=computerList.get(random.nextInt(computerList.size()));
    int upgrade=determineUpgrade(cpuPowerLacking);
    computer.setCpuPower(computer.getCpuPower() + upgrade);
    cpuPowerLacking-=upgrade;
  }
  int memoryLacking=requiredMemoryTotal - memoryTotal;
  while (memoryLacking > 0) {
    CloudComputer computer=computerList.get(random.nextInt(computerList.size()));
    int upgrade=determineUpgrade(memoryLacking);
    computer.setMemory(computer.getMemory() + upgrade);
    memoryLacking-=upgrade;
  }
  int networkBandwidthLacking=requiredNetworkBandwidthTotal - networkBandwidthTotal;
  while (networkBandwidthLacking > 0) {
    CloudComputer computer=computerList.get(random.nextInt(computerList.size()));
    int upgrade=determineUpgrade(networkBandwidthLacking);
    computer.setNetworkBandwidth(computer.getNetworkBandwidth() + upgrade);
    networkBandwidthLacking-=upgrade;
  }
}
