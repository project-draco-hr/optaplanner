{
  SubChain anchorTrailingChain=selectAnchorTrailingChain();
  long selectionSize=calculateSubChainSelectionSize(anchorTrailingChain);
  long selectionIndex=RandomUtils.nextLong(workingRandom,selectionSize);
  long fromIndex=selectionIndex;
  long subChainSize=minimumSubChainSize;
  long countInThatSize=anchorTrailingChain.getSize() - subChainSize + 1;
  while (fromIndex >= countInThatSize) {
    fromIndex-=countInThatSize;
    subChainSize++;
    countInThatSize--;
    if (countInThatSize <= 0) {
      throw new IllegalStateException("Impossible if calculateSubChainSelectionSize() works correctly.");
    }
  }
  return anchorTrailingChain.subChain((int)fromIndex,(int)(fromIndex + subChainSize));
}
