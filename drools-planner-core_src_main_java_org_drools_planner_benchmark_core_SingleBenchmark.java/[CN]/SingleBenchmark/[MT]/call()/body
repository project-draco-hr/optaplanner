{
  Solver solver=solverBenchmark.getSolverConfig().buildSolver();
  for (  ProblemStatistic problemStatistic : problemBenchmark.getProblemStatisticList()) {
    SingleStatistic singleStatistic=problemStatistic.createSingleStatistic(solver);
    singleStatisticMap.put(problemStatistic.getProblemStatisticType(),singleStatistic);
  }
  solver.setPlanningProblem(problemBenchmark.readPlanningProblem());
  solver.solve();
  Solution outputSolution=solver.getBestSolution();
  timeMillisSpend=solver.getTimeMillisSpend();
  DefaultSolverScope solverScope=((DefaultSolver)solver).getSolverScope();
  calculateCount=solverScope.getCalculateCount();
  score=outputSolution.getScore();
  SolutionDescriptor solutionDescriptor=((DefaultSolver)solver).getSolutionDescriptor();
  planningEntityCount=solutionDescriptor.getPlanningEntityCount(outputSolution);
  problemScale=solutionDescriptor.getProblemScale(outputSolution);
  for (  SingleStatistic singleStatistic : singleStatisticMap.values()) {
    singleStatistic.close();
  }
  problemBenchmark.writeSolution(this,outputSolution);
  return this;
}
