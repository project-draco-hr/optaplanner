{
  List<ShadowVariableDescriptor> orderedShadowList=new LinkedList<ShadowVariableDescriptor>();
  for (  EntityDescriptor entityDescriptor : entityDescriptorMap.values()) {
    for (    ShadowVariableDescriptor shadow : entityDescriptor.getDeclaredShadowVariableDescriptors()) {
      Integer insertionIndex=null;
      for (ListIterator<ShadowVariableDescriptor> it=orderedShadowList.listIterator(); it.hasNext(); ) {
        int index=it.nextIndex();
        ShadowVariableDescriptor orderedShadow=it.next();
        if (insertionIndex == null) {
          if (orderedShadow.getSourceVariableDescriptorList().contains(shadow)) {
            insertionIndex=index;
          }
        }
        if (insertionIndex != null) {
          if (shadow.getSourceVariableDescriptorList().contains(orderedShadow)) {
            ShadowVariableDescriptor otherOrderedShadow=orderedShadowList.get(insertionIndex);
            throw new IllegalStateException("There is a cyclic shadow variable path" + " because the shadowVariable (" + shadow.getSimpleEntityAndVariableName() + ") must be earlier than ("+ otherOrderedShadow.getSimpleEntityAndVariableName()+ ") but later than ("+ orderedShadow.getSimpleEntityAndVariableName()+ ").");
          }
        }
      }
      if (insertionIndex != null) {
        orderedShadowList.add(insertionIndex,shadow);
      }
 else {
        orderedShadowList.add(shadow);
      }
    }
  }
  for (ListIterator<ShadowVariableDescriptor> it=orderedShadowList.listIterator(); it.hasNext(); ) {
    int index=it.nextIndex();
    ShadowVariableDescriptor orderedShadow=it.next();
    orderedShadow.setGlobalShadowOrder(index);
  }
}
