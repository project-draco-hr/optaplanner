{
  Class<?> entityClass=entityDescriptor.getEntityClass();
  for (  Class<?> otherEntityClass : entityDescriptorMap.keySet()) {
    if (otherEntityClass.isAssignableFrom(entityClass)) {
      throw new IllegalArgumentException("An earlier planningEntityClass (" + otherEntityClass + ") should not be a superclass of a later planningEntityClass ("+ entityClass+ "). Switch their declaration so superclasses are defined later.");
    }
  }
  entityDescriptorMap.put(entityDescriptor.getEntityClass(),entityDescriptor);
}
