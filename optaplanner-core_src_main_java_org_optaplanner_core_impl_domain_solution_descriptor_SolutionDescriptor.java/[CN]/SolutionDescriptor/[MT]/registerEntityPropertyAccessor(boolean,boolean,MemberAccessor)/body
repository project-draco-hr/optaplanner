{
  if (entityPropertyAnnotated && entityCollectionPropertyAnnotated) {
    throw new IllegalStateException("The solutionClass (" + solutionClass + ") has a member ("+ memberAccessor.getName()+ ") that has both a "+ PlanningEntityProperty.class.getSimpleName()+ " annotation and a "+ PlanningEntityCollectionProperty.class.getSimpleName()+ " annotation.");
  }
  if (entityPropertyAnnotated) {
    entityPropertyAccessorMap.put(memberAccessor.getName(),memberAccessor);
  }
 else   if (entityCollectionPropertyAnnotated) {
    if (!Collection.class.isAssignableFrom(memberAccessor.getType())) {
      throw new IllegalStateException("The solutionClass (" + solutionClass + ") has a "+ PlanningEntityCollectionProperty.class.getSimpleName()+ " annotated member ("+ memberAccessor.getName()+ ") that does not return a "+ Collection.class.getSimpleName()+ ".");
    }
    entityCollectionPropertyAccessorMap.put(memberAccessor.getName(),memberAccessor);
  }
}
