{
  processSolutionAnnotations(descriptorPolicy);
  List<Member> memberList=ConfigUtils.getDeclaredMembers(solutionClass);
  for (  Member member : memberList) {
    processValueRangeProviderAnnotation(descriptorPolicy,member);
    processProblemFactPropertyAnnotation(descriptorPolicy,member);
    processPlanningEntityPropertyAnnotation(descriptorPolicy,member);
    processScoreAnnotation(descriptorPolicy,member);
  }
  if (entityCollectionMemberAccessorMap.isEmpty() && entityMemberAccessorMap.isEmpty()) {
    throw new IllegalStateException("The solutionClass (" + solutionClass + ") must have at least 1 member with a "+ PlanningEntityCollectionProperty.class.getSimpleName()+ " annotation or a "+ PlanningEntityProperty.class.getSimpleName()+ " annotation.");
  }
  if (Solution.class.isAssignableFrom(solutionClass)) {
    processLegacySolution(descriptorPolicy);
    return;
  }
  if (scoreMemberAccessor == null) {
    throw new IllegalStateException("The solutionClass (" + solutionClass + ") must have 1 member with a "+ PlanningScore.class.getSimpleName()+ " annotation.\n"+ "Maybe add a getScore() method with a "+ PlanningScore.class.getSimpleName()+ " annotation.");
  }
}
