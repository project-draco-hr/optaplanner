{
  if (descriptorPolicy.hasFromSolutionValueRangeProvider(valueRangeProviderRef)) {
    Method readMethod=descriptorPolicy.getFromSolutionValueRangeProvider(valueRangeProviderRef);
    return new FromSolutionPropertyPlanningValueRangeDescriptor(this,addNullInValueRange,readMethod);
  }
 else   if (descriptorPolicy.hasFromEntityValueRangeProvider(valueRangeProviderRef)) {
    Method readMethod=descriptorPolicy.getFromEntityValueRangeProvider(valueRangeProviderRef);
    return new FromEntityPropertyPlanningValueRangeDescriptor(this,addNullInValueRange,readMethod);
  }
 else {
    throw new IllegalArgumentException("The planningEntityClass (" + entityDescriptor.getPlanningEntityClass() + ") has a "+ PlanningVariable.class.getSimpleName()+ ") annotated property ("+ variablePropertyAccessor.getName()+ ") with a valueRangeProviderRef ("+ valueRangeProviderRef+ ") that does not exist on a registered "+ PlanningSolution.class.getSimpleName()+ " or "+ PlanningEntity.class.getSimpleName()+ ".\n"+ "The valueRangeProviderRef ("+ valueRangeProviderRef+ ") does not appear in valueRangeProvideIds ("+ descriptorPolicy.getValueRangeProviderIds()+ ").");
  }
}
