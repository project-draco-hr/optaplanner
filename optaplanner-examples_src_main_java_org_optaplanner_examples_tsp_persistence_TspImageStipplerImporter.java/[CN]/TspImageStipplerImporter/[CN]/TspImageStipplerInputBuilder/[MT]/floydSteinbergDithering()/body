{
  tspSolution.setDistanceType(DistanceType.AIR_DISTANCE);
  tspSolution.setDistanceUnitOfMeasurement("distance");
  int width=image.getWidth();
  int height=image.getHeight();
  double[][] errorDiffusion=new double[width][height];
  List<Location> locationList=new ArrayList<Location>(1000);
  long id=0L;
  for (int y=0; y < height; y++) {
    for (int x=0; x < width; x++) {
      int rgb=image.getRGB(x,y);
      int r=(rgb) & 0xFF;
      int g=(rgb >> 8) & 0xFF;
      int b=(rgb >> 16) & 0xFF;
      double originalGray=(r + g + b) / GRAY_MAXIMUM;
      double diffusedGray=originalGray + errorDiffusion[x][y];
      double error;
      if (diffusedGray <= 0.5) {
        Location location=new AirLocation();
        location.setId(id);
        id++;
        location.setLatitude(-y);
        location.setLongitude(x);
        locationList.add(location);
        error=diffusedGray;
      }
 else {
        error=diffusedGray - 1.0;
      }
      if (x + 1 < width) {
        errorDiffusion[x + 1][y]+=error * 7.0 / 16.0;
      }
      if (y + 1 < height) {
        if (x - 1 >= 0) {
          errorDiffusion[x - 1][y + 1]+=error * 3.0 / 16.0;
        }
        errorDiffusion[x][y + 1]+=error * 5.0 / 16.0;
        if (x + 1 < width) {
          errorDiffusion[x + 1][y + 1]+=error * 1.0 / 16.0;
        }
      }
    }
  }
  tspSolution.setLocationList(locationList);
}
