{
  CloudBalance cloudBalance=(CloudBalance)solution;
  Set<CloudComputer> deadCloudComputerSet=new LinkedHashSet<CloudComputer>(computerToPanelMap.keySet());
  deadCloudComputerSet.remove(null);
  for (  CloudComputer computer : cloudBalance.getComputerList()) {
    deadCloudComputerSet.remove(computer);
    CloudComputerPanel computerPanel=computerToPanelMap.get(computer);
    if (computerPanel == null) {
      computerPanel=new CloudComputerPanel(this,computer);
      computersPanel.add(computerPanel);
      computerToPanelMap.put(computer,computerPanel);
    }
  }
  Set<CloudProcess> deadCloudProcessSet=new LinkedHashSet<CloudProcess>(processToPanelMap.keySet());
  for (  CloudProcess process : cloudBalance.getProcessList()) {
    deadCloudProcessSet.remove(process);
    CloudComputerPanel computerPanel=processToPanelMap.get(process);
    CloudComputer computer=process.getComputer();
    if (computerPanel != null && !ObjectUtils.equals(computerPanel.getComputer(),computer)) {
      processToPanelMap.remove(process);
      computerPanel.removeProcess(process);
      computerPanel=null;
    }
    if (computerPanel == null) {
      computerPanel=computerToPanelMap.get(computer);
      computerPanel.addProcess(process);
      processToPanelMap.put(process,computerPanel);
    }
  }
  for (  CloudProcess deadProcess : deadCloudProcessSet) {
    CloudComputerPanel deadComputerPanel=processToPanelMap.remove(deadProcess);
    deadComputerPanel.removeProcess(deadProcess);
  }
  for (  CloudComputer deadComputer : deadCloudComputerSet) {
    CloudComputerPanel deadComputerPanel=computerToPanelMap.remove(deadComputer);
    computersPanel.remove(deadComputerPanel);
  }
  for (  CloudComputerPanel computerPanel : computerToPanelMap.values()) {
    computerPanel.update();
  }
}
