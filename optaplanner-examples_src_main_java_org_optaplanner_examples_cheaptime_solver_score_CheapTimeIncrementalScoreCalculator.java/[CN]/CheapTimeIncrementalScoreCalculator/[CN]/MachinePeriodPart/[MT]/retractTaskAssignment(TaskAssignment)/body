{
  if (machine == null) {
    return;
  }
  Task task=taskAssignment.getTask();
  if (status == MachinePeriodStatus.OFF || status == MachinePeriodStatus.IDLE) {
    throw new IllegalStateException("Impossible status (" + status + ").");
  }
  taskCount--;
  if (taskCount == 0) {
    mediumScore+=machineCostMicros;
    if (status == MachinePeriodStatus.SPIN_UP_AND_ACTIVE) {
      mediumScore+=machine.getSpinUpDownCostMicros();
    }
    status=MachinePeriodStatus.OFF;
  }
  for (int i=0; i < resourceAvailableList.length; i++) {
    int resourceAvailable=resourceAvailableList[i];
    TaskRequirement taskRequirement=task.getTaskRequirementList().get(i);
    if (resourceAvailable < 0) {
      hardScore-=resourceAvailable;
    }
    resourceAvailable+=taskRequirement.getResourceUsage();
    if (resourceAvailable < 0) {
      hardScore+=resourceAvailable;
    }
    resourceAvailableList[i]=resourceAvailable;
  }
}
