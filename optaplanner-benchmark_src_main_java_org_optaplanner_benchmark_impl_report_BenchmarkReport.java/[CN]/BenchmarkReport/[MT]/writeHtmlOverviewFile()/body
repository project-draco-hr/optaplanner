{
  File benchmarkReportDirectory=plannerBenchmarkResult.getBenchmarkReportDirectory();
  WebsiteResourceUtils.copyResourcesTo(benchmarkReportDirectory);
  htmlOverviewFile=new File(benchmarkReportDirectory,"index.html");
  Configuration freemarkerCfg=new Configuration();
  freemarkerCfg.setDefaultEncoding("UTF-8");
  freemarkerCfg.setLocale(locale);
  freemarkerCfg.setClassForTemplateLoading(BenchmarkReport.class,"");
  String templateFilename="benchmarkReport.html.ftl";
  Map<String,Object> model=new HashMap<>();
  model.put("benchmarkReport",this);
  model.put("reportHelper",new ReportHelper());
  try (Writer writer=new OutputStreamWriter(new FileOutputStream(htmlOverviewFile),"UTF-8")){
    Template template=freemarkerCfg.getTemplate(templateFilename);
    template.process(model,writer);
  }
 catch (  IOException e) {
    throw new IllegalArgumentException("Can not read templateFilename (" + templateFilename + ") or write htmlOverviewFile ("+ htmlOverviewFile+ ").",e);
  }
catch (  TemplateException e) {
    throw new IllegalArgumentException("Can not process Freemarker templateFilename (" + templateFilename + ") to htmlOverviewFile ("+ htmlOverviewFile+ ").",e);
  }
}
