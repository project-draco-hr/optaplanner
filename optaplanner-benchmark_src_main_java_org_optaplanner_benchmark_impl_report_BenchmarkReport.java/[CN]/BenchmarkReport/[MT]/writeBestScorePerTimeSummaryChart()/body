{
  List<XYSeriesCollection> datasetList=new ArrayList<XYSeriesCollection>(CHARTED_SCORE_LEVEL_SIZE);
  for (  SolverBenchmark solverBenchmark : plannerBenchmark.getSolverBenchmarkList()) {
    String solverLabel=solverBenchmark.getNameWithFavoriteSuffix();
    for (    SingleBenchmark singleBenchmark : solverBenchmark.getSingleBenchmarkList()) {
      String planningProblemLabel=singleBenchmark.getProblemBenchmark().getName();
      if (singleBenchmark.isSuccess()) {
        double[] levelDoubles=ScoreUtils.extractLevelDoubles(singleBenchmark.getScore());
        double[] averageDoubles=ScoreUtils.extractLevelDoubles(plannerBenchmark.getAverageScore());
        for (int i=0; i < levelDoubles.length && i < CHARTED_SCORE_LEVEL_SIZE; i++) {
          if (i >= datasetList.size()) {
            datasetList.add(new XYSeriesCollection());
          }
          double relativeScore=(levelDoubles[i] == 0d) ? 0 : levelDoubles[i] / Math.abs(averageDoubles[i]);
          if (datasetList.get(i).getSeriesIndex(solverLabel) == -1) {
            XYSeries series=new XYSeries(solverLabel,false);
            series.add(singleBenchmark.getTimeMillisSpend(),relativeScore);
            datasetList.get(i).addSeries(series);
          }
 else {
            datasetList.get(i).getSeries(solverLabel).add(singleBenchmark.getTimeMillisSpend(),relativeScore);
          }
        }
      }
    }
  }
  bestScorePerTimeChartFileList=new ArrayList<File>(datasetList.size());
  int scoreLevelIndex=0;
  for (  XYSeriesCollection dataset : datasetList) {
    XYPlot plot=createBestScorePerTimePlot(dataset,"Time spent","Best score (relative to average)",NumberFormat.getInstance(locale));
    JFreeChart chart=new JFreeChart("Best score per time level " + scoreLevelIndex + " (lower is better)",plot);
    addBestScorePerTimeLegend(chart);
    bestScorePerTimeChartFileList.add(writeChartToImageFile(chart,"bestScorePerTimeLevel" + scoreLevelIndex));
    scoreLevelIndex++;
  }
}
