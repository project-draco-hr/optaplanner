{
  List<DefaultBoxAndWhiskerCategoryDataset> datasetList=new ArrayList<DefaultBoxAndWhiskerCategoryDataset>(CHARTED_SCORE_LEVEL_SIZE);
  for (  SingleBenchmarkResult singleBenchmarkResult : problemBenchmarkResult.getSingleBenchmarkResultList()) {
    List<List<Double>> valueListList=new ArrayList<List<Double>>(CHARTED_SCORE_LEVEL_SIZE);
    for (    SubSingleBenchmarkResult subSingleBenchmarkResult : singleBenchmarkResult.getSubSingleBenchmarkResultList()) {
      if (subSingleBenchmarkResult.isSuccess() && subSingleBenchmarkResult.isInitialized()) {
        double[] levelValues=ScoreUtils.extractLevelDoubles(subSingleBenchmarkResult.getScore());
        for (int i=0; i < levelValues.length && i < CHARTED_SCORE_LEVEL_SIZE; i++) {
          if (i >= valueListList.size()) {
            valueListList.add(new ArrayList<Double>(singleBenchmarkResult.getSuccessCount()));
          }
          valueListList.get(i).add(levelValues[i]);
        }
      }
    }
    for (int i=0; i < valueListList.size() && i < CHARTED_SCORE_LEVEL_SIZE; i++) {
      if (i >= datasetList.size()) {
        datasetList.add(new DefaultBoxAndWhiskerCategoryDataset());
      }
      SolverBenchmarkResult solverBenchmarkResult=singleBenchmarkResult.getSolverBenchmarkResult();
      datasetList.get(i).add(valueListList.get(i),solverBenchmarkResult.getName(),solverBenchmarkResult + " - " + solverBenchmarkResult.getSubSingleCount()+ " run(s)");
    }
  }
  return datasetList;
}
