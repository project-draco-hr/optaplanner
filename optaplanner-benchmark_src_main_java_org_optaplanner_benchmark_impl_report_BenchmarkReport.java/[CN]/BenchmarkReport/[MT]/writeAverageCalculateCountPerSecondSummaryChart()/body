{
  List<XYSeries> seriesList=new ArrayList<XYSeries>(plannerBenchmarkResult.getSolverBenchmarkList().size());
  for (  SolverBenchmark solverBenchmark : plannerBenchmarkResult.getSolverBenchmarkList()) {
    String solverLabel=solverBenchmark.getNameWithFavoriteSuffix();
    XYSeries series=new XYSeries(solverLabel);
    for (    SingleBenchmark singleBenchmark : solverBenchmark.getSingleBenchmarkList()) {
      if (singleBenchmark.isSuccess()) {
        long problemScale=singleBenchmark.getProblemBenchmark().getProblemScale();
        long averageCalculateCountPerSecond=singleBenchmark.getAverageCalculateCountPerSecond();
        series.add((Long)problemScale,(Long)averageCalculateCountPerSecond);
      }
    }
    seriesList.add(series);
  }
  XYPlot plot=createScalabilityPlot(seriesList,"Problem scale",NumberFormat.getInstance(locale),"Average calculate count per second",NumberFormat.getInstance(locale));
  JFreeChart chart=new JFreeChart("Average calculate count summary (higher is better)",JFreeChart.DEFAULT_TITLE_FONT,plot,true);
  averageCalculateCountSummaryChartFile=writeChartToImageFile(chart,"averageCalculateCountSummary");
}
