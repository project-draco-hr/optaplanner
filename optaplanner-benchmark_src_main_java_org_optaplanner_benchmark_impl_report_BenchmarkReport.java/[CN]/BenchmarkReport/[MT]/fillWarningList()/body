{
  warningList=new ArrayList<>();
  String javaVmName=System.getProperty("java.vm.name");
  if (javaVmName != null && javaVmName.contains("Client VM")) {
    warningList.add("The Java VM (" + javaVmName + ") is the Client VM."+ " This decreases performance."+ " Maybe start the java process with the argument \"-server\" to get better results.");
  }
  Integer parallelBenchmarkCount=plannerBenchmarkResult.getParallelBenchmarkCount();
  Integer availableProcessors=plannerBenchmarkResult.getAvailableProcessors();
  if (parallelBenchmarkCount != null && availableProcessors != null && parallelBenchmarkCount > availableProcessors) {
    warningList.add("The parallelBenchmarkCount (" + parallelBenchmarkCount + ") is higher than the number of availableProcessors ("+ availableProcessors+ ")."+ " This decreases performance."+ " Maybe reduce the parallelBenchmarkCount.");
  }
  EnvironmentMode environmentMode=plannerBenchmarkResult.getEnvironmentMode();
  if (environmentMode != null && environmentMode.isAsserted()) {
    warningList.add("The environmentMode (" + environmentMode + ") is asserting."+ " This decreases performance."+ " Maybe set the environmentMode to "+ EnvironmentMode.REPRODUCIBLE+ ".");
  }
  String loggingLevelOptaPlannerCore=plannerBenchmarkResult.getLoggingLevelOptaPlannerCore();
  if (loggingLevelOptaPlannerCore != null && loggingLevelOptaPlannerCore.equals("trace")) {
    warningList.add("The loggingLevel (" + loggingLevelOptaPlannerCore + ") of org.optaplanner.core is high."+ " This decreases performance."+ " Maybe set the loggingLevel to debug or lower.");
  }
  String loggingLevelDroolsCore=plannerBenchmarkResult.getLoggingLevelDroolsCore();
  if (loggingLevelDroolsCore != null && (loggingLevelDroolsCore.equals("trace") || loggingLevelDroolsCore.equals("debug"))) {
    warningList.add("The loggingLevel (" + loggingLevelDroolsCore + ") of org.drools.core is high."+ " This decreases performance."+ " Maybe set the loggingLevel to info or lower.");
  }
}
