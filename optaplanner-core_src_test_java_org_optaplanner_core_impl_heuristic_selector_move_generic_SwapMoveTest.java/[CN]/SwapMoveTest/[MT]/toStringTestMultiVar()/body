{
  TestdataValue v1=new TestdataValue("v1");
  TestdataValue v2=new TestdataValue("v2");
  TestdataValue v3=new TestdataValue("v3");
  TestdataValue v4=new TestdataValue("v4");
  TestdataOtherValue w1=new TestdataOtherValue("w1");
  TestdataOtherValue w2=new TestdataOtherValue("w2");
  TestdataMultiVarEntity a=new TestdataMultiVarEntity("a",null,null,null);
  TestdataMultiVarEntity b=new TestdataMultiVarEntity("b",v1,v3,w1);
  TestdataMultiVarEntity c=new TestdataMultiVarEntity("c",v2,v4,w2);
  EntityDescriptor entityDescriptor=TestdataMultiVarEntity.buildEntityDescriptor();
  List<GenuineVariableDescriptor> variableDescriptorList=entityDescriptor.getGenuineVariableDescriptorList();
  assertEquals("a {null, null, null} <-> a {null, null, null}",new SwapMove(variableDescriptorList,a,a).toString());
  assertEquals("a {null, null, null} <-> b {v1, v3, w1}",new SwapMove(variableDescriptorList,a,b).toString());
  assertEquals("a {null, null, null} <-> c {v2, v4, w2}",new SwapMove(variableDescriptorList,a,c).toString());
  assertEquals("b {v1, v3, w1} <-> c {v2, v4, w2}",new SwapMove(variableDescriptorList,b,c).toString());
  assertEquals("c {v2, v4, w2} <-> b {v1, v3, w1}",new SwapMove(variableDescriptorList,c,b).toString());
}
