{
  HardSoftScoreHolder scoreHolder=new HardSoftScoreHolder(constraintMatchEnabled);
  scoreHolder.addHardConstraintMatch(mockRuleContext("scoreRule1"),-1000);
  RuleContext ruleContext2=mockRuleContext("scoreRule2");
  scoreHolder.addHardConstraintMatch(ruleContext2,-200);
  callUnMatch(ruleContext2);
  RuleContext ruleContext3=mockRuleContext("scoreRule3");
  scoreHolder.addSoftConstraintMatch(ruleContext3,-30);
  scoreHolder.addSoftConstraintMatch(ruleContext3,-3);
  scoreHolder.addHardConstraintMatch(ruleContext3,-300);
  scoreHolder.addHardConstraintMatch(ruleContext3,-400);
  RuleContext ruleContext4=mockRuleContext("scoreRule4");
  scoreHolder.addHardConstraintMatch(ruleContext4,-1);
  scoreHolder.addSoftConstraintMatch(ruleContext4,-1);
  callUnMatch(ruleContext4);
  assertEquals(HardSoftScore.valueOf(-1400,-3),scoreHolder.extractScore());
  if (constraintMatchEnabled) {
    assertEquals(6,scoreHolder.getConstraintMatchTotals().size());
  }
}
