{
  Termination termination=new TimeMillisSpentTermination(1000L);
  DefaultSolverScope solverScope=mock(DefaultSolverScope.class);
  when(solverScope.calculateTimeMillisSpentUpToNow()).thenReturn(0L);
  assertEquals(false,termination.isSolverTerminated(solverScope));
  assertEquals(0.0,termination.calculateSolverTimeGradient(solverScope),0.0);
  when(solverScope.calculateTimeMillisSpentUpToNow()).thenReturn(100L);
  assertEquals(false,termination.isSolverTerminated(solverScope));
  assertEquals(0.1,termination.calculateSolverTimeGradient(solverScope),0.0);
  when(solverScope.calculateTimeMillisSpentUpToNow()).thenReturn(500L);
  assertEquals(false,termination.isSolverTerminated(solverScope));
  assertEquals(0.5,termination.calculateSolverTimeGradient(solverScope),0.0);
  when(solverScope.calculateTimeMillisSpentUpToNow()).thenReturn(700L);
  assertEquals(false,termination.isSolverTerminated(solverScope));
  assertEquals(0.7,termination.calculateSolverTimeGradient(solverScope),0.0);
  when(solverScope.calculateTimeMillisSpentUpToNow()).thenReturn(1000L);
  assertEquals(true,termination.isSolverTerminated(solverScope));
  assertEquals(1.0,termination.calculateSolverTimeGradient(solverScope),0.0);
  when(solverScope.calculateTimeMillisSpentUpToNow()).thenReturn(1200L);
  assertEquals(true,termination.isSolverTerminated(solverScope));
  assertEquals(1.0,termination.calculateSolverTimeGradient(solverScope),0.0);
}
