{
  Object next;
  long attemptsBeforeBailOut=bailOutEnabled ? determineBailOutSize() : 0L;
  do {
    if (!childEntityIterator.hasNext()) {
      next=null;
      break;
    }
    if (bailOutEnabled) {
      if (attemptsBeforeBailOut <= 0L) {
        logger.warn("Bailing out of neverEnding selector ({}) to avoid infinite loop.",FilteringEntitySelector.this);
        next=null;
        break;
      }
      attemptsBeforeBailOut--;
    }
    next=childEntityIterator.next();
  }
 while (!accept(scoreDirector,next));
  return next;
}
