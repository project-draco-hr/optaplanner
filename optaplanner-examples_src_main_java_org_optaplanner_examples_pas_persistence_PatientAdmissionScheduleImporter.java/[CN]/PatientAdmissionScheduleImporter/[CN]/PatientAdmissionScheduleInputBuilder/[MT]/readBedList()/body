{
  readConstantLine("BEDS:");
  List<Bed> bedList=new ArrayList<>(bedListSize);
  Map<Room,Integer> roomToLastIndexInRoomMap=new HashMap<>(roomListSize);
  for (int i=0; i < bedListSize; i++) {
    String line=bufferedReader.readLine();
    String[] lineTokens=splitBySpace(line,2);
    Bed bed=new Bed();
    bed.setId(Long.parseLong(lineTokens[0]));
    Room room=idToRoomMap.get(Long.parseLong(lineTokens[1]));
    bed.setRoom(room);
    Integer indexInRoom=roomToLastIndexInRoomMap.get(room);
    if (indexInRoom == null) {
      indexInRoom=0;
    }
 else {
      indexInRoom++;
    }
    bed.setIndexInRoom(indexInRoom);
    roomToLastIndexInRoomMap.put(room,indexInRoom);
    bedList.add(bed);
    room.getBedList().add(bed);
  }
  Collections.sort(bedList,new Comparator<Bed>(){
    public int compare(    Bed a,    Bed b){
      return new CompareToBuilder().append(a.getRoom().getDepartment().getId(),b.getRoom().getDepartment().getId()).append(a.getRoom().getId(),b.getRoom().getId()).append(a.getIndexInRoom(),b.getIndexInRoom()).append(a.getId(),b.getId()).toComparison();
    }
  }
);
  patientAdmissionSchedule.setBedList(bedList);
}
