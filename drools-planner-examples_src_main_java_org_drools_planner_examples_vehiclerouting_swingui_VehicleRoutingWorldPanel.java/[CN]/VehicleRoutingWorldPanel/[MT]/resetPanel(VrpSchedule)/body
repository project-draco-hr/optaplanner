{
  translator=new LatitudeLongitudeTranslator();
  for (  VrpLocation location : schedule.getLocationList()) {
    translator.addCoordinates(location.getLatitude(),location.getLongitude());
  }
  Dimension size=getSize();
  double width=size.getWidth();
  double height=size.getHeight();
  translator.prepareFor(width,height);
  Graphics g=createCanvas(width,height);
  g.setColor(TangoColors.ORANGE_2);
  g.setFont(g.getFont().deriveFont((float)TEXT_SIZE));
  for (  VrpCustomer customer : schedule.getCustomerList()) {
    VrpLocation location=customer.getLocation();
    int x=translator.translateLongitudeToX(location.getLongitude());
    int y=translator.translateLatitudeToY(location.getLatitude());
    g.fillRect(x - 1,y - 1,3,3);
    g.drawString(Integer.toString(customer.getDemand()),x + 3,y - 3);
  }
  g.setColor(TangoColors.ALUMINIUM_4);
  for (  VrpDepot depot : schedule.getDepotList()) {
    int x=translator.translateLongitudeToX(depot.getLocation().getLongitude());
    int y=translator.translateLatitudeToY(depot.getLocation().getLatitude());
    g.fillRect(x - 2,y - 2,5,5);
    g.drawImage(depotImageIcon.getImage(),x - depotImageIcon.getIconWidth() / 2,y - 2 - depotImageIcon.getIconHeight(),this);
  }
  int colorIndex=0;
  for (  VrpVehicle vehicle : schedule.getVehicleList()) {
    g.setColor(TangoColors.SEQUENCE_2[colorIndex]);
    VrpCustomer vehicleInfoCustomer=null;
    int longestNonDepotDistance=-1;
    int load=0;
    for (    VrpCustomer customer : schedule.getCustomerList()) {
      if (customer.getPreviousAppearance() != null && customer.getVehicle() == vehicle) {
        load+=customer.getDemand();
        VrpLocation previousLocation=customer.getPreviousAppearance().getLocation();
        int previousX=translator.translateLongitudeToX(previousLocation.getLongitude());
        int previousY=translator.translateLatitudeToY(previousLocation.getLatitude());
        VrpLocation location=customer.getLocation();
        int x=translator.translateLongitudeToX(location.getLongitude());
        int y=translator.translateLatitudeToY(location.getLatitude());
        g.drawLine(previousX,previousY,x,y);
        int distance=customer.getDistanceToPreviousAppearance();
        if (customer.getPreviousAppearance() instanceof VrpCustomer) {
          if (longestNonDepotDistance < distance) {
            longestNonDepotDistance=distance;
            vehicleInfoCustomer=customer;
          }
        }
 else         if (vehicleInfoCustomer == null) {
          vehicleInfoCustomer=customer;
        }
        boolean needsBackToVehicleLineDraw=true;
        for (        VrpCustomer trailingCustomer : schedule.getCustomerList()) {
          if (trailingCustomer.getPreviousAppearance() == customer) {
            needsBackToVehicleLineDraw=false;
            break;
          }
        }
        if (needsBackToVehicleLineDraw) {
          VrpLocation vehicleLocation=vehicle.getLocation();
          int vehicleX=translator.translateLongitudeToX(vehicleLocation.getLongitude());
          int vehicleY=translator.translateLatitudeToY(vehicleLocation.getLatitude());
          g.drawLine(x,y,vehicleX,vehicleY);
        }
      }
    }
    if (vehicleInfoCustomer != null) {
      if (load > vehicle.getCapacity()) {
        g.setColor(TangoColors.SCARLET_2);
      }
      VrpLocation previousLocation=vehicleInfoCustomer.getPreviousAppearance().getLocation();
      VrpLocation location=vehicleInfoCustomer.getLocation();
      double longitude=(previousLocation.getLongitude() + location.getLongitude()) / 2.0;
      int x=translator.translateLongitudeToX(longitude);
      double latitude=(previousLocation.getLatitude() + location.getLatitude()) / 2.0;
      int y=translator.translateLatitudeToY(latitude);
      boolean ascending=(previousLocation.getLongitude() < location.getLongitude()) ^ (previousLocation.getLatitude() < location.getLatitude());
      ImageIcon vehicleImageIcon=vehicleImageIcons[colorIndex];
      int vehicleInfoHeight=vehicleImageIcon.getIconHeight() + 2 + TEXT_SIZE;
      g.drawImage(vehicleImageIcon.getImage(),x,(ascending ? y - vehicleInfoHeight : y),this);
      g.drawString(load + " / " + vehicle.getCapacity(),x,(ascending ? y : y + vehicleInfoHeight));
    }
    colorIndex=(colorIndex + 1) % TangoColors.SEQUENCE_2.length;
  }
  g.setColor(TangoColors.ALUMINIUM_4);
  g.fillRect(5,(int)height - 12 - TEXT_SIZE- (TEXT_SIZE / 2),5,5);
  g.drawString("Depot",15,(int)height - 10 - TEXT_SIZE);
  g.setColor(TangoColors.ORANGE_2);
  g.fillRect(6,(int)height - 6 - (TEXT_SIZE / 2),3,3);
  g.drawString("Customer demand",15,(int)height - 5);
  repaint();
}
