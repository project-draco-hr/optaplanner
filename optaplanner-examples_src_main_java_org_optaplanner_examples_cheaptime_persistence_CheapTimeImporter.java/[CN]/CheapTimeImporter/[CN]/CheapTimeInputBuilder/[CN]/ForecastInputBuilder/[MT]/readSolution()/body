{
  int periodListSize=readIntegerValue();
  long periodDurationPerHour=CheapTimeCostCalculator.divideTwoMicros(CheapTimeCostCalculator.toMicroCost(1440),CheapTimeCostCalculator.toMicroCost(periodListSize * 60L));
  List<PeriodPowerPrice> periodPowerPriceList=new ArrayList<PeriodPowerPrice>(periodListSize);
  for (int i=0; i < periodListSize; i++) {
    String[] lineTokens=splitBySpacesOrTabs(readStringValue(),2);
    PeriodPowerPrice periodPowerPrice=new PeriodPowerPrice();
    int period=Integer.parseInt(lineTokens[0]);
    if (periodPowerPriceList.size() != period) {
      throw new IllegalStateException("The forecast period (" + period + ") does not increment normally and gets a different list index ("+ periodPowerPriceList.size()+ ").");
    }
    periodPowerPrice.setId((long)period);
    periodPowerPrice.setPeriod(period);
    long hourlyPowerPriceMicros=CheapTimeCostCalculator.parseMicroCost(lineTokens[1]);
    periodPowerPrice.setPowerPriceMicros(CheapTimeCostCalculator.multiplyTwoMicros(hourlyPowerPriceMicros,periodDurationPerHour));
    periodPowerPriceList.add(periodPowerPrice);
  }
  solution.setPeriodPowerPriceList(periodPowerPriceList);
  return null;
}
