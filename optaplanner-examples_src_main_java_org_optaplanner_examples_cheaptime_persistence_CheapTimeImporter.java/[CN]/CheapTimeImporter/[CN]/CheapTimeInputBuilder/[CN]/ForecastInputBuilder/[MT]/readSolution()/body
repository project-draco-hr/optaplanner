{
  int periodListSize=readIntegerValue();
  long periodDurationPerHour=CheapTimeCostCalculator.divideTwoMicros(CheapTimeCostCalculator.toMicroCost(1440),CheapTimeCostCalculator.toMicroCost(periodListSize * 60L));
  List<PeriodPowerCost> periodPowerCostList=new ArrayList<PeriodPowerCost>(periodListSize);
  for (int i=0; i < periodListSize; i++) {
    String[] taskLineTokens=splitBySpacesOrTabs(readStringValue(),2);
    PeriodPowerCost periodPowerCost=new PeriodPowerCost();
    int period=Integer.parseInt(taskLineTokens[0]);
    if (periodPowerCostList.size() != period) {
      throw new IllegalStateException("The forecast period (" + period + ") does not increment normally and gets a different list index ("+ periodPowerCostList.size()+ ").");
    }
    periodPowerCost.setId((long)period);
    periodPowerCost.setPeriod(period);
    long hourlyPowerCostMicros=CheapTimeCostCalculator.parseMicroCost(taskLineTokens[1]);
    periodPowerCost.setPowerCostMicros(CheapTimeCostCalculator.multiplyTwoMicros(hourlyPowerCostMicros,periodDurationPerHour));
    periodPowerCostList.add(periodPowerCost);
  }
  solution.setPeriodPowerCostList(periodPowerCostList);
  return null;
}
