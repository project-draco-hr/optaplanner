{
  List<SolverBenchmark> rankedSolverBenchmarkList=new ArrayList<SolverBenchmark>(solverBenchmarkList);
  List<Comparable> rankedSolverBenchmarkComparableList=new ArrayList<Comparable>();
  Comparator reverseComparator=new ReverseComparator();
  for (Iterator<SolverBenchmark> it=rankedSolverBenchmarkList.iterator(); it.hasNext(); ) {
    SolverBenchmark solverBenchmark=it.next();
    if (solverBenchmark.hasAnyFailure()) {
      it.remove();
    }
  }
  if (solverBenchmarkRankingComparator != null) {
    Collections.sort(rankedSolverBenchmarkList,Collections.reverseOrder(solverBenchmarkRankingComparator));
  }
 else   if (solverBenchmarkRankingWeightFactory != null) {
    SortedMap<Comparable,List<SolverBenchmark>> rankedSolverBenchmarkMap=new TreeMap<Comparable,List<SolverBenchmark>>(reverseComparator);
    for (    SolverBenchmark solverBenchmark : rankedSolverBenchmarkList) {
      Comparable rankingWeight=solverBenchmarkRankingWeightFactory.createRankingWeight(rankedSolverBenchmarkList,solverBenchmark);
      List<SolverBenchmark> rankedSolverList=rankedSolverBenchmarkMap.get(rankingWeight);
      if (rankedSolverList == null) {
        rankedSolverList=new ArrayList<SolverBenchmark>();
        rankedSolverBenchmarkMap.put(rankingWeight,rankedSolverList);
      }
      rankedSolverList.add(solverBenchmark);
    }
    rankedSolverBenchmarkList.clear();
    for (    Map.Entry<Comparable,List<SolverBenchmark>> entry : rankedSolverBenchmarkMap.entrySet()) {
      rankedSolverBenchmarkList.addAll(entry.getValue());
      for (int i=0; i < entry.getValue().size(); i++) {
        rankedSolverBenchmarkComparableList.add(entry.getKey());
      }
    }
  }
 else {
    throw new IllegalStateException("Ranking is impossible" + " because solverBenchmarkRankingComparator and solverBenchmarkRankingWeightFactory are null.");
  }
  int ranking=0;
  int sameRankCount=0;
  int benchmarkNumber=0;
  SolverBenchmark previousSolverBenchmark=null;
  for (  SolverBenchmark solverBenchmark : rankedSolverBenchmarkList) {
    if (previousSolverBenchmark != null && !equalSolverRanking(solverBenchmark,previousSolverBenchmark,rankedSolverBenchmarkComparableList,benchmarkNumber,reverseComparator)) {
      ranking+=sameRankCount;
      sameRankCount=1;
    }
 else {
      sameRankCount++;
    }
    solverBenchmark.setRanking(ranking);
    previousSolverBenchmark=solverBenchmark;
    benchmarkNumber++;
  }
  favoriteSolverBenchmark=rankedSolverBenchmarkList.isEmpty() ? null : rankedSolverBenchmarkList.get(0);
}
