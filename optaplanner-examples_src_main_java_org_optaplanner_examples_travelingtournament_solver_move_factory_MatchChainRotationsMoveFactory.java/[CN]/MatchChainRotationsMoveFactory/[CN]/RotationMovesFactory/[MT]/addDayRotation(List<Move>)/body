{
  for (ListIterator<Day> firstDayIt=dayList.listIterator(); firstDayIt.hasNext(); ) {
    Day firstDay=firstDayIt.next();
    Map<Team,Match> firstDayTeamMap=dayTeamMap.get(firstDay);
    for (ListIterator<Day> secondDayIt=dayList.listIterator(firstDayIt.nextIndex()); secondDayIt.hasNext(); ) {
      Day secondDay=secondDayIt.next();
      List<Match> clonedFirstDayMatchList=new ArrayList<>(firstDayTeamMap.values());
      while (!clonedFirstDayMatchList.isEmpty()) {
        List<Match> rotateList=new ArrayList<>(4);
        Match startMatch=clonedFirstDayMatchList.remove(0);
        boolean otherInFirst=false;
        rotateList.add(startMatch);
        Team startHomeTeam=startMatch.getHomeTeam();
        Team nextTeamToFind=startMatch.getAwayTeam();
        while (!startHomeTeam.equals(nextTeamToFind)) {
          Map<Team,Match> subTeamMap=dayTeamMap.get(otherInFirst ? firstDay : secondDay);
          Match repairMatch=subTeamMap.get(nextTeamToFind);
          if (otherInFirst) {
            clonedFirstDayMatchList.remove(repairMatch);
          }
          rotateList.add(repairMatch);
          nextTeamToFind=getOtherTeam(repairMatch,nextTeamToFind);
          otherInFirst=!otherInFirst;
        }
        if (rotateList.size() > 2) {
          List<Match> emptyList=Collections.emptyList();
          Move rotateMove=new MatchChainRotationsMove(rotateList,emptyList);
          moveList.add(rotateMove);
        }
      }
    }
  }
}
