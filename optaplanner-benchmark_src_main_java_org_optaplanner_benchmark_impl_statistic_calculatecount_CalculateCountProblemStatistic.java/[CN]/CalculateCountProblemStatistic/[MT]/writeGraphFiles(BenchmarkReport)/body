{
  Locale locale=benchmarkReport.getLocale();
  NumberAxis xAxis=new NumberAxis("Time spend");
  xAxis.setNumberFormatOverride(new MillisecondsSpendNumberFormat(locale));
  NumberAxis yAxis=new NumberAxis("Calculate count per second");
  yAxis.setNumberFormatOverride(NumberFormat.getInstance(locale));
  yAxis.setAutoRangeIncludesZero(false);
  XYPlot plot=new XYPlot(null,xAxis,yAxis,null);
  plot.setOrientation(PlotOrientation.VERTICAL);
  int seriesIndex=0;
  for (  SingleBenchmark singleBenchmark : problemBenchmark.getSingleBenchmarkList()) {
    XYSeries series=new XYSeries(singleBenchmark.getSolverBenchmark().getNameWithFavoriteSuffix());
    XYItemRenderer renderer=new XYLineAndShapeRenderer();
    if (singleBenchmark.isSuccess()) {
      CalculateCountSingleStatistic singleStatistic=(CalculateCountSingleStatistic)singleBenchmark.getSingleStatistic(problemStatisticType);
      for (      CalculateCountSingleStatisticPoint point : singleStatistic.getPointList()) {
        long timeMillisSpend=point.getTimeMillisSpend();
        long calculateCountPerSecond=point.getCalculateCountPerSecond();
        series.add(timeMillisSpend,calculateCountPerSecond);
      }
    }
    plot.setDataset(seriesIndex,new XYSeriesCollection(series));
    if (singleBenchmark.getSolverBenchmark().isFavorite()) {
      renderer.setSeriesStroke(0,new BasicStroke(2.0f));
    }
    plot.setRenderer(seriesIndex,renderer);
    seriesIndex++;
  }
  JFreeChart chart=new JFreeChart(problemBenchmark.getName() + " calculate count statistic",JFreeChart.DEFAULT_TITLE_FONT,plot,true);
  graphFile=writeChartToImageFile(chart,problemBenchmark.getName() + "CalculateCountStatistic");
}
