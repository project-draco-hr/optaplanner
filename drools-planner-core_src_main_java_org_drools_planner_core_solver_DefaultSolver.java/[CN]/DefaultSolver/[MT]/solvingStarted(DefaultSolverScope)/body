{
  if (solverScope.getSolutionDirector().getWorkingSolution() == null) {
    throw new IllegalStateException("The planningProblem must not be null." + " Use Solver.setPlanningProblem(Solution).");
  }
  solverScope.reset();
  if (randomSeed != null) {
    solverScope.setWorkingRandom(new Random(randomSeed));
  }
 else {
    solverScope.setWorkingRandom(new Random());
  }
  bestSolutionRecaller.solvingStarted(solverScope);
  logger.info("Solver started with time spend ({}), score ({}), new best score ({}), random seed ({}).",new Object[]{solverScope.calculateTimeMillisSpend(),solverScope.getStartingInitializedScore(),solverScope.getBestScore(),(randomSeed != null ? randomSeed : "not fixed")});
}
