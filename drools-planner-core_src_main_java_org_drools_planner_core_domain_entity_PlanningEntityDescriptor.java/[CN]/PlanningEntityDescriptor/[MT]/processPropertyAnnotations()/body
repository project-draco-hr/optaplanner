{
  PropertyDescriptor[] propertyDescriptors=planningEntityBeanInfo.getPropertyDescriptors();
  planningVariableDescriptorMap=new LinkedHashMap<String,PlanningVariableDescriptor>(propertyDescriptors.length);
  boolean noPlanningVariableAnnotation=true;
  for (  PropertyDescriptor propertyDescriptor : propertyDescriptors) {
    PropertyAccessor propertyAccessor=new PropertyAccessor(propertyDescriptor);
    Method propertyGetter=propertyAccessor.getReadMethod();
    if (propertyGetter != null && propertyGetter.isAnnotationPresent(PlanningVariable.class)) {
      noPlanningVariableAnnotation=false;
      if (propertyAccessor.getWriteMethod() == null) {
        throw new IllegalStateException("The planningEntityClass (" + planningEntityClass + ") has a PlanningVariable annotated property ("+ propertyAccessor.getName()+ ") that should have a setter.");
      }
      PlanningVariableDescriptor planningVariableDescriptor=new PlanningVariableDescriptor(this,propertyAccessor);
      planningVariableDescriptorMap.put(propertyAccessor.getName(),planningVariableDescriptor);
      planningVariableDescriptor.processAnnotations();
    }
  }
  if (noPlanningVariableAnnotation) {
    throw new IllegalStateException("The planningEntityClass (" + planningEntityClass + ") should have at least 1 getter with a PlanningVariable annotation.");
  }
}
