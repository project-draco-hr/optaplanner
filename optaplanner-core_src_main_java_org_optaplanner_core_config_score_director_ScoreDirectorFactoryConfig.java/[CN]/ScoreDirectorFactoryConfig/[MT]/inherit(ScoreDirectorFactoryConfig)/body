{
  if (scoreDefinitionClass == null && scoreDefinitionType == null && bendableHardLevelsSize == null && bendableSoftLevelsSize == null) {
    scoreDefinitionClass=inheritedConfig.getScoreDefinitionClass();
    scoreDefinitionType=inheritedConfig.getScoreDefinitionType();
    bendableHardLevelsSize=inheritedConfig.getBendableHardLevelsSize();
    bendableSoftLevelsSize=inheritedConfig.getBendableSoftLevelsSize();
  }
  easyScoreCalculatorClass=ConfigUtils.inheritOverwritableProperty(easyScoreCalculatorClass,inheritedConfig.getEasyScoreCalculatorClass());
  incrementalScoreCalculatorClass=ConfigUtils.inheritOverwritableProperty(incrementalScoreCalculatorClass,inheritedConfig.getIncrementalScoreCalculatorClass());
  ksessionName=ConfigUtils.inheritOverwritableProperty(ksessionName,inheritedConfig.getKsessionName());
  kieBase=ConfigUtils.inheritOverwritableProperty(kieBase,inheritedConfig.getKieBase());
  scoreDrlList=ConfigUtils.inheritMergeableListProperty(scoreDrlList,inheritedConfig.getScoreDrlList());
  scoreDrlFileList=ConfigUtils.inheritMergeableListProperty(scoreDrlFileList,inheritedConfig.getScoreDrlFileList());
  kieBaseConfigurationProperties=ConfigUtils.inheritMergeableMapProperty(kieBaseConfigurationProperties,inheritedConfig.getKieBaseConfigurationProperties());
  initializingScoreTrend=ConfigUtils.inheritOverwritableProperty(initializingScoreTrend,inheritedConfig.getInitializingScoreTrend());
  assertionScoreDirectorFactory=ConfigUtils.inheritOverwritableProperty(assertionScoreDirectorFactory,inheritedConfig.getAssertionScoreDirectorFactory());
}
