{
  List<TaskType> taskTypeList=solution.getTaskTypeList();
  List<Customer> customerList=solution.getCustomerList();
  Priority[] priorities=Priority.values();
  List<Task> taskList=new ArrayList<>(taskListSize);
  Map<TaskType,Integer> maxIndexInTaskTypeMap=new LinkedHashMap<>(taskTypeList.size());
  for (int i=0; i < taskListSize; i++) {
    Task task=new Task();
    task.setId((long)i);
    TaskType taskType=taskTypeList.get(random.nextInt(taskTypeList.size()));
    task.setTaskType(taskType);
    Integer indexInTaskType=maxIndexInTaskTypeMap.get(taskType);
    if (indexInTaskType == null) {
      indexInTaskType=1;
    }
 else {
      indexInTaskType++;
    }
    task.setIndexInTaskType(indexInTaskType);
    maxIndexInTaskTypeMap.put(taskType,indexInTaskType);
    task.setCustomer(customerList.get(random.nextInt(customerList.size())));
    task.setReadyTime(0);
    task.setPriority(priorities[random.nextInt(priorities.length)]);
    taskList.add(task);
  }
  solution.setTaskList(taskList);
}
