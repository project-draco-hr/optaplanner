{
  VehicleRoutingSolution solution=scoreDirector.getWorkingSolution();
  List<Vehicle> vehicleList=solution.getVehicleList();
  List<Customer> customerList=solution.getCustomerList();
  List<Standstill> standstillList=new ArrayList<>(vehicleList.size() + customerList.size());
  standstillList.addAll(vehicleList);
  standstillList.addAll(customerList);
  logger.info("Starting sorting");
  Map<Standstill,Customer[]> nearbyMap=new HashMap<>(standstillList.size());
  for (  final Standstill origin : standstillList) {
    Customer[] nearbyCustomers=customerList.toArray(new Customer[0]);
    Arrays.sort(nearbyCustomers,new Comparator<Standstill>(){
      @Override public int compare(      Standstill a,      Standstill b){
        double aDistance=origin.getLocation().getDistanceTo(a.getLocation());
        double bDistance=origin.getLocation().getDistanceTo(b.getLocation());
        return Double.compare(aDistance,bDistance);
      }
    }
);
    nearbyMap.put(origin,nearbyCustomers);
  }
  logger.info("Done sorting");
  List<Standstill> buoyList=new ArrayList<>(vehicleList);
  int NEARBY_LIMIT=40;
  while (true) {
    Score stepScore=null;
    int stepBuoyIndex=-1;
    Customer stepEntity=null;
    for (int i=0; i < buoyList.size(); i++) {
      Standstill buoy=buoyList.get(i);
      Customer[] nearbyCustomers=nearbyMap.get(buoy);
      int j=0;
      for (      Customer customer : nearbyCustomers) {
        if (customer.getPreviousStandstill() != null) {
          continue;
        }
        scoreDirector.beforeVariableChanged(customer,"previousStandstill");
        customer.setPreviousStandstill(buoy);
        scoreDirector.afterVariableChanged(customer,"previousStandstill");
        scoreDirector.triggerVariableListeners();
        Score score=scoreDirector.calculateScore();
        scoreDirector.beforeVariableChanged(customer,"previousStandstill");
        customer.setPreviousStandstill(null);
        scoreDirector.afterVariableChanged(customer,"previousStandstill");
        scoreDirector.triggerVariableListeners();
        if (stepScore == null || score.compareTo(stepScore) > 0) {
          stepScore=score;
          stepBuoyIndex=i;
          stepEntity=customer;
        }
        if (j >= NEARBY_LIMIT) {
          break;
        }
        j++;
      }
    }
    if (stepEntity == null) {
      break;
    }
    Standstill stepValue=buoyList.set(stepBuoyIndex,stepEntity);
    scoreDirector.beforeVariableChanged(stepEntity,"previousStandstill");
    stepEntity.setPreviousStandstill(stepValue);
    scoreDirector.afterVariableChanged(stepEntity,"previousStandstill");
    scoreDirector.triggerVariableListeners();
    logger.debug("    Score ({}), assigned customer ({}) to stepValue ({}).",stepScore,stepEntity,stepValue);
  }
}
