{
  this.childValueSelector=childValueSelector;
  this.originEntitySelector=originEntitySelector;
  this.nearbyDistanceMeter=nearbyDistanceMeter;
  this.nearbyRandom=nearbyRandom;
  this.randomSelection=randomSelection;
  if (!childValueSelector.getVariableDescriptor().getVariablePropertyType().isAssignableFrom(originEntitySelector.getEntityDescriptor().getEntityClass())) {
    throw new IllegalArgumentException("The valueSelector (" + this + ") has a variable property type ("+ childValueSelector.getVariableDescriptor().getVariablePropertyType()+ ") which is not a superclass of the originEntitySelector's entityClass ("+ originEntitySelector.getEntityDescriptor().getEntityClass()+ ").");
  }
  phaseLifecycleSupport.addEventListener(childValueSelector);
  phaseLifecycleSupport.addEventListener(originEntitySelector);
}
