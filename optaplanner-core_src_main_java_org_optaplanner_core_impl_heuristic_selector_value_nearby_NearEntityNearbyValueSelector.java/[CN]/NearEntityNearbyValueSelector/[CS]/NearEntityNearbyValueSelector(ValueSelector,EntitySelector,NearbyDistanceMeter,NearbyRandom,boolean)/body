{
  this.childValueSelector=childValueSelector;
  this.originEntitySelector=originEntitySelector;
  this.nearbyDistanceMeter=nearbyDistanceMeter;
  this.nearbyRandom=nearbyRandom;
  this.randomSelection=randomSelection;
  if (randomSelection && nearbyRandom == null) {
    throw new IllegalArgumentException("The valueSelector (" + this + ") with randomSelection ("+ randomSelection+ ") has no nearbyRandom ("+ nearbyRandom+ ").");
  }
  discardNearbyIndexZero=childValueSelector.getVariableDescriptor().getVariablePropertyType().isAssignableFrom(originEntitySelector.getEntityDescriptor().getEntityClass());
  phaseLifecycleSupport.addEventListener(childValueSelector);
  phaseLifecycleSupport.addEventListener(originEntitySelector);
}
