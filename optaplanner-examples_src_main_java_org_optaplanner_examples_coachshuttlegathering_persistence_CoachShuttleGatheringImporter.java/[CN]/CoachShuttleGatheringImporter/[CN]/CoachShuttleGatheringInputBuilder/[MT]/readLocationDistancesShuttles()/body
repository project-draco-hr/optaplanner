{
  List<RoadLocation> locationList=solution.getLocationList();
  int locationListSize=locationList.size();
  File file=new File(inputFile.getParentFile(),"DistanceTimesData_SHUTTLES.csv");
  BufferedReader subBufferedReader=null;
  int locationListIndex=0;
  try {
    subBufferedReader=new BufferedReader(new InputStreamReader(new FileInputStream(file),"UTF-8"));
    subBufferedReader.readLine();
    for (String line=subBufferedReader.readLine(); line != null; line=subBufferedReader.readLine()) {
      if (line.isEmpty()) {
        continue;
      }
      RoadLocation sourceLocation=locationList.get(locationListIndex);
      locationListIndex++;
      String[] lineTokens=splitBySemicolonSeparatedValue(line,locationListSize * 2);
      for (int i=0; i < locationListSize; i++) {
        RoadLocation targetLocation=locationList.get(i);
        RoadLocationArc locationArc=sourceLocation.getTravelDistanceMap().get(targetLocation);
        locationArc.setShuttleDistance(Integer.parseInt(lineTokens[i * 2]));
        locationArc.setShuttleDuration(Integer.parseInt(lineTokens[i * 2 + 1]));
      }
    }
  }
 catch (  IOException e) {
    throw new IllegalArgumentException("Could not read the file (" + file.getName() + ").",e);
  }
 finally {
    IOUtils.closeQuietly(subBufferedReader);
  }
}
