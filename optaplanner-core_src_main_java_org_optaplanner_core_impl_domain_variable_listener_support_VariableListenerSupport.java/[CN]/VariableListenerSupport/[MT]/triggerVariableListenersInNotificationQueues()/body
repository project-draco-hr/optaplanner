{
  for (  VariableListenerNotifiable notifiable : notifiableList) {
    Collection<VariableListenerNotification> notificationQueue=notifiable.getNotificationQueue();
    int notifiedCount=0;
    VariableListener variableListener=notifiable.getVariableListener();
    for (    VariableListenerNotification notification : notificationQueue) {
      Object entity=notification.getEntity();
switch (notification.getType()) {
case ENTITY_ADDED:
        variableListener.afterEntityAdded(scoreDirector,entity);
      break;
case VARIABLE_CHANGED:
    variableListener.afterVariableChanged(scoreDirector,entity);
  break;
case ENTITY_REMOVED:
variableListener.afterEntityRemoved(scoreDirector,entity);
break;
default :
throw new IllegalStateException("The variableListenerNotificationType (" + notification.getType() + ") is not implemented.");
}
notifiedCount++;
}
if (notifiedCount != notificationQueue.size()) {
throw new IllegalStateException("The variableListener (" + variableListener.getClass() + ") has been notified with notifiedCount ("+ notifiedCount+ ") but after notification it has different size ("+ notificationQueue.size()+ ").\n"+ "Maybe that variableListener ("+ variableListener.getClass()+ ") changed an upstream shadow variable (which is illegal).");
}
notificationQueue.clear();
}
notificationQueuesAreEmpty=true;
}
