{
  Collection<Object> planningFacts=new ArrayList<Object>();
  planningFacts.addAll(solution.getProblemFacts());
  for (  PropertyDescriptor entityPropertyDescriptor : entityPropertyDescriptorMap.values()) {
    Object entity=DescriptorUtils.executeGetter(entityPropertyDescriptor,solution);
    PlanningEntityDescriptor planningEntityDescriptor=getPlanningEntityDescriptor(entity.getClass());
    if (entity != null && planningEntityDescriptor.isInitialized(entity)) {
      planningFacts.add(entity);
    }
  }
  for (  PropertyDescriptor entityCollectionPropertyDescriptor : entityCollectionPropertyDescriptorMap.values()) {
    Collection<? extends Object> entityCollection=(Collection<? extends Object>)DescriptorUtils.executeGetter(entityCollectionPropertyDescriptor,solution);
    if (entityCollection == null) {
      throw new IllegalArgumentException("The entity collection property (" + entityCollectionPropertyDescriptor.getName() + ") should never return null.");
    }
    for (    Object entity : entityCollection) {
      PlanningEntityDescriptor planningEntityDescriptor=getPlanningEntityDescriptor(entity.getClass());
      if (planningEntityDescriptor.isInitialized(entity)) {
        planningFacts.add(entity);
      }
    }
  }
  return planningFacts;
}
