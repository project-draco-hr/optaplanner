{
  List<Termination> terminationList=new ArrayList<Termination>();
  if (termination != null) {
    terminationList.add(termination);
  }
  if (terminationClass != null) {
    try {
      terminationList.add(terminationClass.newInstance());
    }
 catch (    InstantiationException e) {
      throw new IllegalArgumentException("terminationClass (" + terminationClass.getName() + ") does not have a public no-arg constructor",e);
    }
catch (    IllegalAccessException e) {
      throw new IllegalArgumentException("terminationClass (" + terminationClass.getName() + ") does not have a public no-arg constructor",e);
    }
  }
  if (maximumStepCount != null) {
    StepCountTermination termination=new StepCountTermination();
    termination.setMaximumStepCount(maximumStepCount);
    terminationList.add(termination);
  }
  if (maximumTimeMillisSpend != null) {
    TimeMillisSpendTermination termination=new TimeMillisSpendTermination();
    termination.setMaximumTimeMillisSpend(maximumTimeMillisSpend);
    terminationList.add(termination);
  }
  if (maximumSecondsSpend != null) {
    TimeMillisSpendTermination termination=new TimeMillisSpendTermination();
    termination.setMaximumTimeMillisSpend(maximumSecondsSpend * 1000L);
    terminationList.add(termination);
  }
  if (maximumMinutesSpend != null) {
    TimeMillisSpendTermination termination=new TimeMillisSpendTermination();
    termination.setMaximumTimeMillisSpend(maximumMinutesSpend * 60000L);
    terminationList.add(termination);
  }
  if (maximumHouresSpend != null) {
    TimeMillisSpendTermination termination=new TimeMillisSpendTermination();
    termination.setMaximumTimeMillisSpend(maximumHouresSpend * 3600000L);
    terminationList.add(termination);
  }
  if (scoreAttained != null) {
    ScoreAttainedTermination termination=new ScoreAttainedTermination();
    termination.setScoreAttained(scoreDefinition.parseScore(scoreAttained));
    terminationList.add(termination);
  }
  if (maximumUnimprovedStepCount != null) {
    UnimprovedStepCountTermination termination=new UnimprovedStepCountTermination();
    termination.setMaximumUnimprovedStepCount(maximumUnimprovedStepCount);
    terminationList.add(termination);
  }
  if (terminationList.size() == 1) {
    return terminationList.get(0);
  }
 else   if (terminationList.size() > 1) {
    AbstractCompositeTermination compositeTermination;
    if (terminationCompositionStyle == null || terminationCompositionStyle == TerminationCompositionStyle.OR) {
      compositeTermination=new OrCompositeTermination();
    }
 else     if (terminationCompositionStyle == TerminationCompositionStyle.AND) {
      compositeTermination=new AndCompositeTermination();
    }
 else {
      throw new IllegalStateException("terminationCompositionStyle (" + terminationCompositionStyle + ") not implemented");
    }
    compositeTermination.setTerminationList(terminationList);
    return compositeTermination;
  }
 else {
    TimeMillisSpendTermination termination=new TimeMillisSpendTermination();
    termination.setMaximumTimeMillisSpend(60000);
    return termination;
  }
}
