{
  List<ShiftDate> shiftDateList=nurseRoster.getShiftDateList();
  List<Shift> shiftList=nurseRoster.getShiftList();
  Set<Employee> deadEmployeeSet=new LinkedHashSet<>(employeeToPanelMap.keySet());
  deadEmployeeSet.remove(null);
  for (  Employee employee : nurseRoster.getEmployeeList()) {
    deadEmployeeSet.remove(employee);
    EmployeePanel employeePanel=employeeToPanelMap.get(employee);
    if (employeePanel == null) {
      employeePanel=new EmployeePanel(this,shiftDateList,shiftList,employee);
      employeeListPanel.add(employeePanel);
      employeeToPanelMap.put(employee,employeePanel);
    }
    employeePanel.clearShiftAssignments();
  }
  unassignedPanel.clearShiftAssignments();
  for (  ShiftAssignment shiftAssignment : nurseRoster.getShiftAssignmentList()) {
    Employee employee=shiftAssignment.getEmployee();
    EmployeePanel employeePanel=employeeToPanelMap.get(employee);
    employeePanel.addShiftAssignment(shiftAssignment);
  }
  for (  Employee deadEmployee : deadEmployeeSet) {
    EmployeePanel deadEmployeePanel=employeeToPanelMap.remove(deadEmployee);
    employeeListPanel.remove(deadEmployeePanel);
  }
  for (  EmployeePanel employeePanel : employeeToPanelMap.values()) {
    employeePanel.update();
  }
}
