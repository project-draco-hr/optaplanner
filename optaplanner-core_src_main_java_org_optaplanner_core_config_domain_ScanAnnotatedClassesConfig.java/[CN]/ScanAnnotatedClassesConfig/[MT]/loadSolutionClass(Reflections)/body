{
  Set<Class<?>> solutionClassSet=reflections.getTypesAnnotatedWith(PlanningSolution.class);
  retainOnlyClassesWithDeclaredAnnotation(solutionClassSet,PlanningSolution.class);
  if (ConfigUtils.isEmptyCollection(solutionClassSet)) {
    throw new IllegalStateException("The scanAnnotatedClasses (" + this + ") did not find any classes with a "+ PlanningSolution.class.getSimpleName()+ " annotation.");
  }
 else   if (solutionClassSet.size() > 1) {
    throw new IllegalStateException("The scanAnnotatedClasses (" + this + ") found multiple classes ("+ solutionClassSet+ ") with a "+ PlanningSolution.class.getSimpleName()+ " annotation.");
  }
  Class<? extends Solution> solutionClass=(Class<? extends Solution>)solutionClassSet.iterator().next();
  return solutionClass;
}
