{
  List<SeatDesignation> seatDesignationList=createSeatDesignationList(manners2009);
  List<Seat> undesignatedSeatList=new ArrayList<Seat>(manners2009.getSeatList());
  for (  SeatDesignation seatDesignation : seatDesignationList) {
    Score bestScore=SimpleScore.valueOf(Integer.MIN_VALUE);
    Seat bestSeat=null;
    boolean added=false;
    for (    Seat seat : undesignatedSeatList) {
      if (seatDesignation.getGuest().getGender() == seat.getRequiredGender()) {
        if (!added) {
          scoreDirector.beforeEntityAdded(seatDesignation);
          seatDesignation.setSeat(seat);
          scoreDirector.afterEntityAdded(seatDesignation);
          added=true;
        }
 else {
          scoreDirector.beforeVariableChanged(seatDesignation,"seat");
          seatDesignation.setSeat(seat);
          scoreDirector.afterVariableChanged(seatDesignation,"seat");
        }
        Score score=scoreDirector.calculateScore();
        if (score.compareTo(bestScore) > 0) {
          bestScore=score;
          bestSeat=seat;
        }
      }
    }
    if (bestSeat == null) {
      throw new IllegalStateException("The bestSeat (" + bestSeat + ") cannot be null.");
    }
    scoreDirector.beforeVariableChanged(seatDesignation,"seat");
    seatDesignation.setSeat(bestSeat);
    scoreDirector.afterVariableChanged(seatDesignation,"seat");
    undesignatedSeatList.remove(bestSeat);
  }
  Collections.sort(seatDesignationList,new PersistableIdComparator());
  manners2009.setSeatDesignationList(seatDesignationList);
}
