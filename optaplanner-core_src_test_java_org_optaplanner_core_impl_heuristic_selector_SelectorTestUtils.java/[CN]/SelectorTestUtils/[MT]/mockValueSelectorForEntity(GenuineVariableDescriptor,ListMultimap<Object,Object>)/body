{
  ValueSelector valueSelector=mock(ValueSelector.class);
  when(valueSelector.getVariableDescriptor()).thenReturn(variableDescriptor);
  when(valueSelector.iterator(any())).thenReturn(Iterators.emptyIterator());
  when(valueSelector.getSize(any())).thenReturn(0L);
  for (  Map.Entry<Object,Collection<Object>> entry : entityToValues.asMap().entrySet()) {
    Object entity=entry.getKey();
    final List<Object> valueList=(List<Object>)entry.getValue();
    when(valueSelector.iterator(entity)).thenAnswer(new Answer<Iterator<Object>>(){
      public Iterator<Object> answer(      InvocationOnMock invocation) throws Throwable {
        return valueList.iterator();
      }
    }
);
    when(valueSelector.getSize(entity)).thenReturn((long)valueList.size());
  }
  when(valueSelector.isCountable()).thenReturn(true);
  when(valueSelector.isNeverEnding()).thenReturn(false);
  return valueSelector;
}
