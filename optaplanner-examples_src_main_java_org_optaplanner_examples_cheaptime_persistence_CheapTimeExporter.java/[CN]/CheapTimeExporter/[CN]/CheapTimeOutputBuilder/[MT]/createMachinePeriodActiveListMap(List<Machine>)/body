{
  Map<Machine,List<Boolean>> machinePeriodActiveListMap=new LinkedHashMap<Machine,List<Boolean>>(machineList.size());
  if (solution.getGlobalPeriodRangeFrom() != 0) {
    throw new IllegalStateException("The globalPeriodRangeFrom (" + solution.getGlobalPeriodRangeFrom() + ") should be 0.");
  }
  for (  Machine machine : machineList) {
    ArrayList<Boolean> periodActiveList=new ArrayList<Boolean>(solution.getGlobalPeriodRangeTo());
    for (int i=0; i < solution.getGlobalPeriodRangeTo(); i++) {
      periodActiveList.add(false);
    }
    machinePeriodActiveListMap.put(machine,periodActiveList);
  }
  for (  TaskAssignment taskAssignment : solution.getTaskAssignmentList()) {
    for (int i=taskAssignment.getStartPeriod(); i < taskAssignment.getEndPeriod(); i++) {
      machinePeriodActiveListMap.get(taskAssignment.getMachine()).set(i,true);
    }
  }
  return machinePeriodActiveListMap;
}
