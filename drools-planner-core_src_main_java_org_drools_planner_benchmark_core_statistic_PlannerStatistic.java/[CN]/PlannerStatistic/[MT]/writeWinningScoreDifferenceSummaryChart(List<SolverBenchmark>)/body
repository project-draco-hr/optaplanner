{
  DefaultCategoryDataset dataset=new DefaultCategoryDataset();
  for (  SolverBenchmark solverBenchmark : solverBenchmarkList) {
    ScoreDefinition scoreDefinition=solverBenchmark.getSolverConfig().getScoreDirectorFactoryConfig().buildScoreDefinition();
    for (    SingleBenchmark singleBenchmark : solverBenchmark.getSingleBenchmarkList()) {
      Score score=singleBenchmark.getWinningScoreDifference();
      Double scoreGraphValue=scoreDefinition.translateScoreToGraphValue(score);
      String solverLabel=solverBenchmark.getName();
      if (solverBenchmark.isRankingBest()) {
        solverLabel+=" (winner)";
      }
      String planningProblemLabel=singleBenchmark.getProblemBenchmark().getName();
      dataset.addValue(scoreGraphValue,solverLabel,planningProblemLabel);
    }
  }
  CategoryAxis xAxis=new CategoryAxis("Data");
  xAxis.setCategoryMargin(0.40);
  NumberAxis yAxis=new NumberAxis("Winning score difference");
  BarRenderer renderer=new BarRenderer();
  ItemLabelPosition positiveItemLabelPosition=new ItemLabelPosition(ItemLabelAnchor.OUTSIDE12,TextAnchor.BOTTOM_CENTER);
  renderer.setBasePositiveItemLabelPosition(positiveItemLabelPosition);
  ItemLabelPosition negativeItemLabelPosition=new ItemLabelPosition(ItemLabelAnchor.OUTSIDE6,TextAnchor.TOP_CENTER);
  renderer.setBaseNegativeItemLabelPosition(negativeItemLabelPosition);
  renderer.setBaseItemLabelGenerator(new StandardCategoryItemLabelGenerator());
  renderer.setBaseItemLabelsVisible(true);
  CategoryPlot plot=new CategoryPlot(dataset,xAxis,yAxis,renderer);
  plot.setOrientation(PlotOrientation.VERTICAL);
  JFreeChart chart=new JFreeChart("Winning score difference summary (higher is better)",JFreeChart.DEFAULT_TITLE_FONT,plot,true);
  BufferedImage chartImage=chart.createBufferedImage(1024,768);
  File chartSummaryFile=new File(statisticDirectory,"winningScoreDifferenceSummary.png");
  OutputStream out=null;
  try {
    out=new FileOutputStream(chartSummaryFile);
    ImageIO.write(chartImage,"png",out);
  }
 catch (  IOException e) {
    throw new IllegalArgumentException("Problem writing graphStatisticFile: " + chartSummaryFile,e);
  }
 finally {
    IOUtils.closeQuietly(out);
  }
  return "  <h2>Winning score difference summary chart</h2>\n" + "  <img src=\"" + chartSummaryFile.getName() + "\"/>\n";
}
