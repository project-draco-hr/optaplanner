{
  readConstantLine("\"Network\";;;;;;");
  readConstantLine("\"Origin\";\"Destination\";\"Distance (Miles)\";\"Max Train Length(Feet)\";\"Max Tonnage (Tons)\";\"Max # of Trains\";");
  List<RailArc> railArcListList=new ArrayList<RailArc>();
  String line=bufferedReader.readLine();
  long id=0L;
  while (!line.equals(";;;;;;")) {
    String[] lineTokens=splitBySemicolonSeparatedValue(line,7);
    RailArc railArc=new RailArc();
    railArc.setId(id);
    id++;
    RailNode origin=nameToRailNodeMap.get(lineTokens[0]);
    if (origin == null) {
      throw new IllegalArgumentException("Read line (" + line + ") has a non existing origin ("+ lineTokens[0]+ ").");
    }
    railArc.setOrigin(origin);
    RailNode destination=nameToRailNodeMap.get(lineTokens[1]);
    if (destination == null) {
      throw new IllegalArgumentException("Read line (" + line + ") has a non existing destination ("+ lineTokens[1]+ ").");
    }
    railArc.setDestination(destination);
    railArc.setDistance(Integer.parseInt(lineTokens[2]));
    railArc.setMaximumTrainLength(Integer.parseInt(lineTokens[3]));
    railArc.setMaximumTonnage(Integer.parseInt(lineTokens[4]));
    railArc.setMaximumNumberOfTrains(Integer.parseInt(lineTokens[5]));
    railArcListList.add(railArc);
    line=bufferedReader.readLine();
  }
  trainDesign.setRailArcList(railArcListList);
}
