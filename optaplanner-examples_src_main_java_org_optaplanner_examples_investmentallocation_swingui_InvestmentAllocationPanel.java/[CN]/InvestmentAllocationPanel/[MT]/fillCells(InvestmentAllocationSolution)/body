{
  List<AssetClass> assetClassList=solution.getAssetClassList();
  assetClassPanel.addCornerHeader(HEADER_COLUMN,HEADER_ROW,createHeaderPanel(new JLabel("Asset class"),null));
  assetClassPanel.addCornerHeader(HEADER_COLUMN_EXTRA_PROPERTY_1,HEADER_ROW,createHeaderPanel(new JLabel("Expected return"),null));
  assetClassPanel.addCornerHeader(HEADER_COLUMN_EXTRA_PROPERTY_2,HEADER_ROW,createHeaderPanel(new JLabel("Standard deviation risk"),null));
  assetClassPanel.addColumnHeader(assetClassList.get(0),HEADER_ROW_GROUP1,assetClassList.get(assetClassList.size() - 1),HEADER_ROW_GROUP1,createHeaderPanel(new JLabel("Correlation"),null));
  JLabel quantityHeaderLabel=new JLabel("Quantity");
  quantityHeaderLabel.setForeground(TangoColorFactory.ORANGE_3);
  assetClassPanel.addCornerHeader(HEADER_COLUMN_EXTRA_PROPERTY_3,HEADER_ROW,createHeaderPanel(quantityHeaderLabel,null));
  for (  AssetClass assetClass : assetClassList) {
    assetClassPanel.addColumnHeader(assetClass,HEADER_ROW,createHeaderPanel(new JLabel(assetClass.getName(),SwingConstants.CENTER),"Expected return: " + assetClass.getExpectedReturnLabel() + " - Standard deviation risk: "+ assetClass.getStandardDeviationRiskLabel()));
  }
  for (  AssetClass assetClass : assetClassList) {
    assetClassPanel.addRowHeader(HEADER_COLUMN,assetClass,createHeaderPanel(new JLabel(assetClass.getName(),SwingConstants.LEFT),"Expected return: " + assetClass.getExpectedReturnLabel() + " - Standard deviation risk: "+ assetClass.getStandardDeviationRiskLabel()));
  }
  for (  AssetClass a : assetClassList) {
    for (    AssetClass b : assetClassList) {
      assetClassPanel.addCell(a,b,new JLabel(a.getCorrelationLabel(b),SwingConstants.RIGHT));
    }
  }
  assetClassPanel.addCornerHeader(HEADER_COLUMN,TRAILING_HEADER_ROW,createHeaderPanel(new JLabel("Total"),null));
  long quantityTotalMillis=0L;
  for (  AssetClassAllocation allocation : solution.getAssetClassAllocationList()) {
    if (allocation.getQuantityMillis() != null) {
      quantityTotalMillis+=allocation.getQuantityMillis();
    }
    assetClassPanel.addRowHeader(HEADER_COLUMN_EXTRA_PROPERTY_1,allocation.getAssetClass(),new JLabel(allocation.getAssetClass().getExpectedReturnLabel(),SwingConstants.RIGHT));
    assetClassPanel.addRowHeader(HEADER_COLUMN_EXTRA_PROPERTY_2,allocation.getAssetClass(),new JLabel(allocation.getAssetClass().getStandardDeviationRiskLabel(),SwingConstants.RIGHT));
    JLabel quantityLabel=new JLabel(allocation.getQuantityLabel(),SwingConstants.RIGHT);
    quantityLabel.setForeground(TangoColorFactory.ORANGE_3);
    assetClassPanel.addRowHeader(HEADER_COLUMN_EXTRA_PROPERTY_3,allocation.getAssetClass(),quantityLabel);
  }
  assetClassPanel.addCornerHeader(HEADER_COLUMN_EXTRA_PROPERTY_1,TRAILING_HEADER_ROW,new JLabel(InvestmentAllocationNumericUtil.formatMicrosAsPercentage(solution.calculateExpectedReturnMicros()),SwingConstants.RIGHT));
  assetClassPanel.addCornerHeader(HEADER_COLUMN_EXTRA_PROPERTY_2,TRAILING_HEADER_ROW,new JLabel(InvestmentAllocationNumericUtil.formatMicrosAsPercentage(solution.calculateStandardDeviationMicros()),SwingConstants.RIGHT));
  JLabel quantityTotalLabel=new JLabel(InvestmentAllocationNumericUtil.formatMillisAsPercentage(quantityTotalMillis),SwingConstants.RIGHT);
  quantityTotalLabel.setForeground(TangoColorFactory.ORANGE_3);
  assetClassPanel.addCornerHeader(HEADER_COLUMN_EXTRA_PROPERTY_3,TRAILING_HEADER_ROW,quantityTotalLabel);
}
