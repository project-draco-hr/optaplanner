{
  int scoreSize=new SimpleDoubleScoreDefinition().getLevelsSize();
  InitializingScoreTrendLevel[] levels=new InitializingScoreTrendLevel[scoreSize];
  for (int i=0; i < scoreSize; i++) {
    levels[i]=InitializingScoreTrendLevel.ONLY_UP;
  }
  SimpleDoubleScore score=SimpleDoubleScore.parseScore("-999");
  InitializingScoreTrend scoreTrend=new InitializingScoreTrend(levels);
  SimpleDoubleScoreDefinition hardSoftScoreDefinition=new SimpleDoubleScoreDefinition();
  SimpleDoubleScore score2=hardSoftScoreDefinition.buildOptimisticBound(scoreTrend,score);
  assertEquals(Double.POSITIVE_INFINITY,score2.getScore(),TOLERANCE);
  for (int i=0; i < scoreSize; i++) {
    levels[i]=InitializingScoreTrendLevel.ONLY_DOWN;
  }
  score2=hardSoftScoreDefinition.buildOptimisticBound(scoreTrend,score);
  assertEquals(-999,score2.getScore(),TOLERANCE);
}
