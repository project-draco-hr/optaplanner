{
  translator=new LatitudeLongitudeTranslator();
  for (  Location location : solution.getLocationList()) {
    translator.addCoordinates(location.getLatitude(),location.getLongitude());
  }
  int maximumTimeWindowTime=determineMaximumTimeWindowTime(solution);
  double width=size.getWidth();
  double height=size.getHeight();
  translator.prepareFor(width,height - 10 - TEXT_SIZE);
  Graphics2D g=createCanvas(width,height);
  g.setFont(g.getFont().deriveFont((float)TEXT_SIZE));
  g.setStroke(TangoColorFactory.NORMAL_STROKE);
  for (  Customer customer : solution.getCustomerList()) {
    Location location=customer.getLocation();
    int x=translator.translateLongitudeToX(location.getLongitude());
    int y=translator.translateLatitudeToY(location.getLatitude());
    g.setColor(TangoColorFactory.ALUMINIUM_4);
    g.fillRect(x - 1,y - 1,3,3);
    String demandString=Integer.toString(customer.getDemand());
    g.drawString(demandString,x - (g.getFontMetrics().stringWidth(demandString) / 2),y - TEXT_SIZE / 2);
    if (customer instanceof TimeWindowedCustomer) {
      TimeWindowedCustomer timeWindowedCustomer=(TimeWindowedCustomer)customer;
      g.setColor(TangoColorFactory.ALUMINIUM_3);
      int circleX=x - (TIME_WINDOW_DIAMETER / 2);
      int circleY=y + 5;
      g.drawOval(circleX,circleY,TIME_WINDOW_DIAMETER,TIME_WINDOW_DIAMETER);
      g.fillArc(circleX,circleY,TIME_WINDOW_DIAMETER,TIME_WINDOW_DIAMETER,90 - calculateTimeWindowDegree(maximumTimeWindowTime,timeWindowedCustomer.getReadyTime()),calculateTimeWindowDegree(maximumTimeWindowTime,timeWindowedCustomer.getReadyTime()) - calculateTimeWindowDegree(maximumTimeWindowTime,timeWindowedCustomer.getDueTime()));
      if (timeWindowedCustomer.getArrivalTime() != null) {
        if (timeWindowedCustomer.isArrivalAfterDueTime()) {
          g.setColor(TangoColorFactory.SCARLET_2);
        }
 else         if (timeWindowedCustomer.isArrivalBeforeReadyTime()) {
          g.setColor(TangoColorFactory.ORANGE_2);
        }
 else {
          g.setColor(TangoColorFactory.ALUMINIUM_6);
        }
        g.setStroke(TangoColorFactory.THICK_STROKE);
        int circleCenterY=y + 5 + TIME_WINDOW_DIAMETER / 2;
        int angle=calculateTimeWindowDegree(maximumTimeWindowTime,timeWindowedCustomer.getArrivalTime());
        g.drawLine(x,circleCenterY,x + (int)(Math.sin(Math.toRadians(angle)) * (TIME_WINDOW_DIAMETER / 2 + 3)),circleCenterY - (int)(Math.cos(Math.toRadians(angle)) * (TIME_WINDOW_DIAMETER / 2 + 3)));
        g.setStroke(TangoColorFactory.NORMAL_STROKE);
      }
    }
  }
  g.setColor(TangoColorFactory.ALUMINIUM_3);
  for (  Depot depot : solution.getDepotList()) {
    int x=translator.translateLongitudeToX(depot.getLocation().getLongitude());
    int y=translator.translateLatitudeToY(depot.getLocation().getLatitude());
    g.fillRect(x - 2,y - 2,5,5);
    g.drawImage(depotImageIcon.getImage(),x - depotImageIcon.getIconWidth() / 2,y - 2 - depotImageIcon.getIconHeight(),imageObserver);
  }
  int colorIndex=0;
  for (  Vehicle vehicle : solution.getVehicleList()) {
    g.setColor(TangoColorFactory.SEQUENCE_2[colorIndex]);
    Customer vehicleInfoCustomer=null;
    int longestNonDepotDistance=-1;
    int load=0;
    for (    Customer customer : solution.getCustomerList()) {
      if (customer.getPreviousStandstill() != null && customer.getVehicle() == vehicle) {
        load+=customer.getDemand();
        Location previousLocation=customer.getPreviousStandstill().getLocation();
        int previousX=translator.translateLongitudeToX(previousLocation.getLongitude());
        int previousY=translator.translateLatitudeToY(previousLocation.getLatitude());
        Location location=customer.getLocation();
        int x=translator.translateLongitudeToX(location.getLongitude());
        int y=translator.translateLatitudeToY(location.getLatitude());
        drawRoute(g,previousX,previousY,x,y,location instanceof AirDistanceLocation);
        int distance=customer.getDistanceToPreviousStandstill();
        if (customer.getPreviousStandstill() instanceof Customer) {
          if (longestNonDepotDistance < distance) {
            longestNonDepotDistance=distance;
            vehicleInfoCustomer=customer;
          }
        }
 else         if (vehicleInfoCustomer == null) {
          vehicleInfoCustomer=customer;
        }
        if (customer.getNextCustomer() == null) {
          Location vehicleLocation=vehicle.getLocation();
          int vehicleX=translator.translateLongitudeToX(vehicleLocation.getLongitude());
          int vehicleY=translator.translateLatitudeToY(vehicleLocation.getLatitude());
          g.setStroke(TangoColorFactory.FAT_DASHED_STROKE);
          drawRoute(g,x,y,vehicleX,vehicleY,location instanceof AirDistanceLocation);
          g.setStroke(TangoColorFactory.NORMAL_STROKE);
        }
      }
    }
    if (vehicleInfoCustomer != null) {
      if (load > vehicle.getCapacity()) {
        g.setColor(TangoColorFactory.SCARLET_2);
      }
      Location previousLocation=vehicleInfoCustomer.getPreviousStandstill().getLocation();
      Location location=vehicleInfoCustomer.getLocation();
      double longitude=(previousLocation.getLongitude() + location.getLongitude()) / 2.0;
      int x=translator.translateLongitudeToX(longitude);
      double latitude=(previousLocation.getLatitude() + location.getLatitude()) / 2.0;
      int y=translator.translateLatitudeToY(latitude);
      boolean ascending=(previousLocation.getLongitude() < location.getLongitude()) ^ (previousLocation.getLatitude() < location.getLatitude());
      ImageIcon vehicleImageIcon=vehicleImageIcons[colorIndex];
      int vehicleInfoHeight=vehicleImageIcon.getIconHeight() + 2 + TEXT_SIZE;
      g.drawImage(vehicleImageIcon.getImage(),x + 1,(ascending ? y - vehicleInfoHeight - 1 : y + 1),imageObserver);
      g.drawString(load + " / " + vehicle.getCapacity(),x + 1,(ascending ? y - 1 : y + vehicleInfoHeight + 1));
    }
    colorIndex=(colorIndex + 1) % TangoColorFactory.SEQUENCE_2.length;
  }
  g.setColor(TangoColorFactory.ALUMINIUM_3);
  g.fillRect(5,(int)height - 12 - TEXT_SIZE- (TEXT_SIZE / 2),5,5);
  g.drawString("Depot",15,(int)height - 10 - TEXT_SIZE);
  String vehiclesSizeString=solution.getVehicleList().size() + " vehicles";
  g.drawString(vehiclesSizeString,((int)width - g.getFontMetrics().stringWidth(vehiclesSizeString)) / 2,(int)height - 10 - TEXT_SIZE);
  g.setColor(TangoColorFactory.ALUMINIUM_4);
  g.fillRect(6,(int)height - 6 - (TEXT_SIZE / 2),3,3);
  g.drawString((solution instanceof TimeWindowedVehicleRoutingSolution) ? "Customer: demand, time window and arrival time" : "Customer: demand",15,(int)height - 5);
  String customersSizeString=solution.getCustomerList().size() + " customers";
  g.drawString(customersSizeString,((int)width - g.getFontMetrics().stringWidth(customersSizeString)) / 2,(int)height - 5);
  if (solution.getDistanceType() == DistanceType.AIR_DISTANCE) {
    String clickString="Click anywhere in the map to add a customer.";
    g.drawString(clickString,(int)width - 5 - g.getFontMetrics().stringWidth(clickString),(int)height - 5);
  }
  g.setColor(TangoColorFactory.ORANGE_3);
  HardSoftScore score=solution.getScore();
  if (score != null) {
    String fuelString;
    if (!score.isFeasible()) {
      fuelString="Not feasible";
    }
 else {
      double fuel=((double)-score.getSoftScore()) / 1000.0;
      fuelString=NUMBER_FORMAT.format(fuel) + " fuel";
    }
    g.setFont(g.getFont().deriveFont(Font.BOLD,(float)TEXT_SIZE * 2));
    g.drawString(fuelString,(int)width - g.getFontMetrics().stringWidth(fuelString) - 10,(int)height - 10 - TEXT_SIZE);
  }
}
