{
  JPanel processingPanel=new JPanel(new GridLayout(3,1));
  processingPanel.setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED));
  JPanel row0Panel=new JPanel(new GridLayout(1,4));
  importAction=new ImportAction();
  importAction.setEnabled(solutionBusiness.hasImporter());
  row0Panel.add(new JButton(importAction));
  openAction=new OpenAction();
  openAction.setEnabled(true);
  row0Panel.add(new JButton(openAction));
  saveAction=new SaveAction();
  saveAction.setEnabled(false);
  row0Panel.add(new JButton(saveAction));
  exportAction=new ExportAction();
  exportAction.setEnabled(false);
  row0Panel.add(new JButton(exportAction));
  processingPanel.add(row0Panel);
  JPanel row1Panel=new JPanel(new GridLayout(1,2));
  solveAction=new SolveAction();
  solveAction.setEnabled(false);
  row1Panel.add(new JButton(solveAction));
  terminateSolvingEarlyAction=new TerminateSolvingEarlyAction();
  terminateSolvingEarlyAction.setEnabled(false);
  row1Panel.add(new JButton(terminateSolvingEarlyAction));
  processingPanel.add(row1Panel);
  refreshScreenDuringSolvingCheckBox=new JCheckBox("Refresh screen during solving",solutionPanel.isRefreshScreenDuringSolving());
  processingPanel.add(refreshScreenDuringSolvingCheckBox);
  return processingPanel;
}
