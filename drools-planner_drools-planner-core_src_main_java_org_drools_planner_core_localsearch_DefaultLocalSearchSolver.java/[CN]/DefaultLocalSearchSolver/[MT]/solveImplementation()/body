{
  LocalSearchSolverScope localSearchSolverScope=this.localSearchSolverScope;
  solvingStarted(localSearchSolverScope);
  StepScope stepScope=createNextStepScope(localSearchSolverScope,null);
  while (!terminatedEarly.get() && !termination.isTerminated(stepScope)) {
    stepScope.setTimeGradient(termination.calculateTimeGradient(stepScope));
    beforeDeciding(stepScope);
    decider.decideNextStep(stepScope);
    Move nextStep=stepScope.getStep();
    if (nextStep == null) {
      logger.warn("No move accepted for step index ({}) out of {} accepted moves. Terminating by exception.",stepScope.getStepIndex(),decider.getForager().getAcceptedMovesSize());
      break;
    }
    logger.info("Step index ({}), time spend ({}) taking step ({}) out of {} accepted moves.",new Object[]{stepScope.getStepIndex(),localSearchSolverScope.calculateTimeMillisSpend(),nextStep,decider.getForager().getAcceptedMovesSize()});
    stepDecided(stepScope);
    nextStep.doMove(stepScope.getWorkingMemory());
    localSearchSolverScope.getWorkingSolution().setScore(stepScope.getScore());
    stepTaken(stepScope);
    stepScope=createNextStepScope(localSearchSolverScope,stepScope);
  }
  solvingEnded(localSearchSolverScope);
}
