{
  HardMediumSoftLongScoreHolder scoreHolder=new HardMediumSoftLongScoreHolder(constraintMatchEnabled);
  scoreHolder.addHardConstraintMatch(createRuleContext("scoreRule1"),-1000L);
  RuleContext ruleContext2=createRuleContext("scoreRule2");
  scoreHolder.addHardConstraintMatch(ruleContext2,-200L);
  callUnMatch(ruleContext2);
  RuleContext ruleContext3=createRuleContext("scoreRule3");
  scoreHolder.addMediumConstraintMatch(ruleContext3,-30L);
  scoreHolder.addMediumConstraintMatch(ruleContext3,-3L);
  scoreHolder.addHardConstraintMatch(ruleContext3,-300L);
  scoreHolder.addHardConstraintMatch(ruleContext3,-400L);
  scoreHolder.addSoftConstraintMatch(createRuleContext("scoreRule4"),-4L);
  RuleContext ruleContext5=createRuleContext("scoreRule5");
  scoreHolder.addHardConstraintMatch(ruleContext5,-1L);
  scoreHolder.addSoftConstraintMatch(ruleContext5,-1L);
  callUnMatch(ruleContext5,2);
  assertEquals(HardMediumSoftLongScore.valueOf(-1401L,-3L,-4L),scoreHolder.extractScore());
  if (constraintMatchEnabled) {
    assertEquals(7,scoreHolder.getConstraintMatchTotals().size());
  }
}
