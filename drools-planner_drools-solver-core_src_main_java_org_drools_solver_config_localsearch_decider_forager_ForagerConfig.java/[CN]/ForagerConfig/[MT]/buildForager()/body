{
  if (forager != null) {
    return forager;
  }
 else   if (foragerClass != null) {
    try {
      return foragerClass.newInstance();
    }
 catch (    InstantiationException e) {
      throw new IllegalArgumentException("foragerClass (" + foragerClass.getName() + ") does not have a public no-arg constructor",e);
    }
catch (    IllegalAccessException e) {
      throw new IllegalArgumentException("foragerClass (" + foragerClass.getName() + ") does not have a public no-arg constructor",e);
    }
  }
 else   if (foragerType != null) {
switch (foragerType) {
case MAX_SCORE_OF_ALL:
      return new AcceptedForager(PickEarlyByScore.NONE,false);
case FIRST_BEST_SCORE_IMPROVING:
    return new AcceptedForager(PickEarlyByScore.FIRST_BEST_SCORE_IMPROVING,false);
case FIRST_LAST_STEP_SCORE_IMPROVING:
  return new AcceptedForager(PickEarlyByScore.FIRST_LAST_STEP_SCORE_IMPROVING,false);
case FIRST_RANDOMLY_ACCEPTED:
return new AcceptedForager(PickEarlyByScore.NONE,true);
default :
throw new IllegalStateException("The foragerType (" + foragerType + ") is not implemented");
}
}
 else {
return new AcceptedForager(PickEarlyByScore.NONE,false);
}
}
