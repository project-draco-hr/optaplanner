{
  int balancePenaltyListSize=readIntegerValue();
  List<MrBalancePenalty> balancePenaltyList=new ArrayList<MrBalancePenalty>(balancePenaltyListSize);
  long balancePenaltyId=0L;
  for (int i=0; i < balancePenaltyListSize; i++) {
    String line=readStringValue();
    String[] lineTokens=splitBySpace(line);
    MrBalancePenalty balancePenalty=new MrBalancePenalty();
    balancePenalty.setId(balancePenaltyId);
    int originResourceIndex=Integer.parseInt(lineTokens[0]);
    if (originResourceIndex >= resourceListSize) {
      throw new IllegalArgumentException("BalancePenalty with id (" + balancePenaltyId + ") has a non existing originResourceIndex ("+ originResourceIndex+ ").");
    }
    balancePenalty.setOriginResource(resourceList.get(originResourceIndex));
    int targetResourceIndex=Integer.parseInt(lineTokens[1]);
    if (targetResourceIndex >= resourceListSize) {
      throw new IllegalArgumentException("BalancePenalty with id (" + balancePenaltyId + ") has a non existing targetResourceIndex ("+ targetResourceIndex+ ").");
    }
    balancePenalty.setTargetResource(resourceList.get(targetResourceIndex));
    balancePenalty.setMultiplicand(Integer.parseInt(lineTokens[2]));
    balancePenalty.setWeight(readIntegerValue());
    balancePenaltyList.add(balancePenalty);
    balancePenaltyId++;
  }
  machineReassignment.setBalancePenaltyList(balancePenaltyList);
}
