{
  int processListSize=readIntegerValue();
  List<MrProcess> processList=new ArrayList<MrProcess>(processListSize);
  long processId=0L;
  int resourceListSize=resourceList.size();
  List<MrRequirement> requirementList=new ArrayList<MrRequirement>(processListSize * resourceListSize);
  for (int i=0; i < processListSize; i++) {
    String line=readStringValue();
    String[] lineTokens=splitBySpace(line);
    MrProcess process=new MrProcess();
    process.setId(processId);
    int serviceIndex=Integer.parseInt(lineTokens[0]);
    if (serviceIndex >= serviceList.size()) {
      throw new IllegalArgumentException("Process with id (" + processId + ") has a non existing serviceIndex ("+ serviceIndex+ ").");
    }
    MrService service=serviceList.get(serviceIndex);
    process.setService(service);
    for (int j=0; j < resourceListSize; j++) {
      MrRequirement requirement=new MrRequirement();
      requirement.setProcess(process);
      requirement.setResource(resourceList.get(j));
      requirement.setUsage(Integer.parseInt(lineTokens[1 + j]));
      requirementList.add(requirement);
    }
    processList.add(process);
    processId++;
  }
  machineReassignment.setProcessList(processList);
  machineReassignment.setRequirementList(requirementList);
}
