{
  int machineListSize=readIntegerValue();
  List<MrNeighborhood> neighborhoodList=new ArrayList<MrNeighborhood>(machineListSize);
  Map<String,MrNeighborhood> idToNeighborhoodMap=new HashMap<String,MrNeighborhood>(machineListSize);
  List<MrLocation> locationList=new ArrayList<MrLocation>(machineListSize);
  Map<String,MrLocation> idToLocationMap=new HashMap<String,MrLocation>(machineListSize);
  List<MrMachine> machineList=new ArrayList<MrMachine>(machineListSize);
  List<MrResource> resourceList=machineReassignment.getResourceList();
  int resourceListSize=resourceList.size();
  List<MrCapacity> capacityList=new ArrayList<MrCapacity>(machineListSize * resourceListSize * 2);
  long machineId=0L;
  for (int i=0; i < machineListSize; i++) {
    String line=readStringValue();
    String[] lineTokens=splitBySpace(line);
    MrMachine machine=new MrMachine();
    machine.setId(machineId);
    machineId++;
    long neighborhoodId=Long.parseLong(lineTokens[0]);
    MrNeighborhood neighborhood=idToNeighborhoodMap.get(neighborhoodId);
    if (neighborhood == null) {
      neighborhood=new MrNeighborhood();
      neighborhood.setId(neighborhoodId);
    }
    machine.setNeighborhood(neighborhood);
    long locationId=Long.parseLong(lineTokens[0]);
    MrLocation location=idToLocationMap.get(locationId);
    if (location == null) {
      location=new MrLocation();
      location.setId(locationId);
    }
    machine.setLocation(location);
    for (int j=0; j < resourceListSize; j++) {
      MrCapacity capacity=new MrCapacity();
      capacity.setMachine(machine);
      capacity.setResource(resourceList.get(j));
      capacity.setMaximumCapacity(Integer.parseInt(lineTokens[2 + j]));
      capacity.setSafetyCapacity(Integer.parseInt(lineTokens[2 + (j * 2)]));
    }
    machineList.add(machine);
  }
  machineReassignment.setNeighborhoodList(neighborhoodList);
  machineReassignment.setLocationList(locationList);
  machineReassignment.setMachineList(machineList);
  machineReassignment.setCapacityList(capacityList);
}
