{
  LocalDate from=LocalDate.of(2016,7,1);
  LocalDate to=LocalDate.of(2016,7,8);
  assertEquals(7L,new TemporalValueRange(from,to,1,ChronoUnit.DAYS).getSize());
  assertEquals(3L,new TemporalValueRange(from,to,2,ChronoUnit.DAYS).getSize());
  assertEquals(0L,new TemporalValueRange(from,to,1,ChronoUnit.MONTHS).getSize());
  from=LocalDate.of(2016,7,7);
  to=LocalDate.of(2016,7,17);
  assertEquals(10L,new TemporalValueRange(from,to,1,ChronoUnit.DAYS).getSize());
  assertEquals(5L,new TemporalValueRange(from,to,2,ChronoUnit.DAYS).getSize());
  assertEquals(1L,new TemporalValueRange(from,to,8,ChronoUnit.DAYS).getSize());
  assertEquals(0L,new TemporalValueRange(from,to,1,ChronoUnit.MONTHS).getSize());
  from=LocalDate.of(2016,1,1);
  to=LocalDate.of(2016,7,17);
  assertEquals(198L,new TemporalValueRange(from,to,1,ChronoUnit.DAYS).getSize());
  assertEquals(99L,new TemporalValueRange(from,to,2,ChronoUnit.DAYS).getSize());
  assertEquals(6L,new TemporalValueRange(from,to,1,ChronoUnit.MONTHS).getSize());
  from=LocalDate.of(2015,12,20);
  to=LocalDate.of(2016,1,21);
  assertEquals(32L,new TemporalValueRange(from,to,1,ChronoUnit.DAYS).getSize());
  assertEquals(16L,new TemporalValueRange(from,to,2,ChronoUnit.DAYS).getSize());
  assertEquals(1L,new TemporalValueRange(from,to,1,ChronoUnit.MONTHS).getSize());
  from=LocalDate.of(1960,12,24);
  to=LocalDate.of(2050,7,7);
  assertEquals(32702L,new TemporalValueRange(from,to,1,ChronoUnit.DAYS).getSize());
  assertEquals(16351L,new TemporalValueRange(from,to,2,ChronoUnit.DAYS).getSize());
  assertEquals(1074L,new TemporalValueRange(from,to,1,ChronoUnit.MONTHS).getSize());
  assertEquals(89L,new TemporalValueRange(from,to,1,ChronoUnit.YEARS).getSize());
  LocalDateTime fromTime=LocalDateTime.of(2016,7,7,7,7,7);
  LocalDateTime toTime=LocalDateTime.of(2016,7,7,7,7,8);
  assertEquals(0L,new TemporalValueRange(fromTime,toTime,1,ChronoUnit.MONTHS).getSize());
  assertEquals(0L,new TemporalValueRange(fromTime,toTime,1,ChronoUnit.DAYS).getSize());
  assertEquals(0L,new TemporalValueRange(fromTime,toTime,1,ChronoUnit.HOURS).getSize());
  assertEquals(0L,new TemporalValueRange(fromTime,toTime,1,ChronoUnit.MINUTES).getSize());
  assertEquals(1L,new TemporalValueRange(fromTime,toTime,1,ChronoUnit.SECONDS).getSize());
  fromTime=LocalDateTime.of(2016,7,7,7,7,7);
  toTime=LocalDateTime.of(2016,12,12,12,12,12);
  assertEquals(5L,new TemporalValueRange(fromTime,toTime,1,ChronoUnit.MONTHS).getSize());
  assertEquals(158L,new TemporalValueRange(fromTime,toTime,1,ChronoUnit.DAYS).getSize());
  assertEquals(3797L,new TemporalValueRange(fromTime,toTime,1,ChronoUnit.HOURS).getSize());
  assertEquals(227825L,new TemporalValueRange(fromTime,toTime,1,ChronoUnit.MINUTES).getSize());
  assertEquals(13669505L,new TemporalValueRange(fromTime,toTime,1,ChronoUnit.SECONDS).getSize());
}
