{
  LocalDate from=LocalDate.of(2016,7,1);
  LocalDate to=LocalDate.of(2016,7,8);
  assertEquals(LocalDate.of(2016,7,1),new TemporalValueRange(from,to,1,ChronoUnit.DAYS).get(0));
  assertEquals(LocalDate.of(2016,7,2),new TemporalValueRange(from,to,1,ChronoUnit.DAYS).get(1));
  assertEquals(LocalDate.of(2016,7,7),new TemporalValueRange(from,to,1,ChronoUnit.DAYS).get(6));
  from=LocalDate.of(2016,1,1);
  to=LocalDate.of(2016,7,1);
  assertEquals(LocalDate.of(2016,1,1),new TemporalValueRange(from,to,1,ChronoUnit.MONTHS).get(0));
  assertEquals(LocalDate.of(2016,6,1),new TemporalValueRange(from,to,1,ChronoUnit.MONTHS).get(5));
  from=LocalDate.of(1992,1,1);
  to=LocalDate.of(2016,1,1);
  assertEquals(LocalDate.of(1992,1,1),new TemporalValueRange(from,to,1,ChronoUnit.YEARS).get(0));
  assertEquals(LocalDate.of(2015,1,1),new TemporalValueRange(from,to,1,ChronoUnit.YEARS).get(23));
  LocalDateTime fromTime=LocalDateTime.of(2016,1,1,1,1,1);
  LocalDateTime toTime=LocalDateTime.of(2016,7,7,7,7,7);
  assertEquals(LocalDateTime.of(2016,1,1,1,1,1),new TemporalValueRange(fromTime,toTime,1,ChronoUnit.SECONDS).get(0));
  assertEquals(LocalDateTime.of(2016,1,1,1,1,1),new TemporalValueRange(fromTime,toTime,1,ChronoUnit.MINUTES).get(0));
  assertEquals(LocalDateTime.of(2016,1,1,1,1,1),new TemporalValueRange(fromTime,toTime,1,ChronoUnit.HOURS).get(0));
  assertEquals(LocalDateTime.of(2016,1,1,1,1,1),new TemporalValueRange(fromTime,toTime,1,ChronoUnit.DAYS).get(0));
  assertEquals(LocalDateTime.of(2016,1,1,1,1,1),new TemporalValueRange(fromTime,toTime,1,ChronoUnit.MONTHS).get(0));
  assertEquals(LocalDateTime.of(2016,1,1,1,1,2),new TemporalValueRange(fromTime,toTime,1,ChronoUnit.SECONDS).get(1));
  assertEquals(LocalDateTime.of(2016,1,1,1,2,1),new TemporalValueRange(fromTime,toTime,1,ChronoUnit.MINUTES).get(1));
  assertEquals(LocalDateTime.of(2016,1,1,2,1,1),new TemporalValueRange(fromTime,toTime,1,ChronoUnit.HOURS).get(1));
  assertEquals(LocalDateTime.of(2016,1,2,1,1,1),new TemporalValueRange(fromTime,toTime,1,ChronoUnit.DAYS).get(1));
  assertEquals(LocalDateTime.of(2016,2,1,1,1,1),new TemporalValueRange(fromTime,toTime,1,ChronoUnit.MONTHS).get(1));
  assertEquals(LocalDateTime.of(2016,6,1,1,1,1),new TemporalValueRange(fromTime,toTime,1,ChronoUnit.MONTHS).get(5));
  assertEquals(LocalDateTime.of(2016,7,6,1,1,1),new TemporalValueRange(fromTime,toTime,1,ChronoUnit.DAYS).get(187));
  assertEquals(LocalDateTime.of(2016,7,7,6,1,1),new TemporalValueRange(fromTime,toTime,1,ChronoUnit.HOURS).get(4517));
  assertEquals(LocalDateTime.of(2016,7,7,7,6,1),new TemporalValueRange(fromTime,toTime,1,ChronoUnit.MINUTES).get(271085));
  assertEquals(LocalDateTime.of(2016,7,7,7,7,6),new TemporalValueRange(fromTime,toTime,1,ChronoUnit.SECONDS).get(16265165));
}
