{
  LocalDateTime fromTime=LocalDateTime.of(2016,7,7,1,1,1);
  LocalDateTime toTime=LocalDateTime.of(2016,7,7,7,1,1);
  assertEquals(false,new TemporalValueRange<>(fromTime,toTime,1,ChronoUnit.HOURS).contains(LocalDateTime.of(2016,7,6,23,59,59)));
  assertEquals(true,new TemporalValueRange<>(fromTime,toTime,1,ChronoUnit.HOURS).contains(LocalDateTime.of(2016,7,7,1,1,1)));
  assertEquals(true,new TemporalValueRange<>(fromTime,toTime,1,ChronoUnit.HOURS).contains(LocalDateTime.of(2016,7,7,6,1,1)));
  assertEquals(false,new TemporalValueRange<>(fromTime,toTime,1,ChronoUnit.HOURS).contains(LocalDateTime.of(2016,7,7,7,7,7)));
  fromTime=LocalDateTime.of(2016,7,7,1,1,1);
  toTime=LocalDateTime.of(2016,7,7,7,7,1);
  assertEquals(false,new TemporalValueRange<>(fromTime,toTime,1,ChronoUnit.MINUTES).contains(LocalDateTime.of(2016,7,7,0,59,59)));
  assertEquals(true,new TemporalValueRange<>(fromTime,toTime,1,ChronoUnit.MINUTES).contains(LocalDateTime.of(2016,7,7,1,1,1)));
  assertEquals(true,new TemporalValueRange<>(fromTime,toTime,1,ChronoUnit.MINUTES).contains(LocalDateTime.of(2016,7,7,7,6,1)));
  assertEquals(false,new TemporalValueRange<>(fromTime,toTime,1,ChronoUnit.MINUTES).contains(LocalDateTime.of(2016,7,7,7,7,1)));
  fromTime=LocalDateTime.of(2016,7,7,1,1,1);
  toTime=LocalDateTime.of(2016,7,7,7,7,7);
  assertEquals(false,new TemporalValueRange<>(fromTime,toTime,1,ChronoUnit.SECONDS).contains(LocalDateTime.of(2016,7,7,1,0,59)));
  assertEquals(true,new TemporalValueRange<>(fromTime,toTime,1,ChronoUnit.SECONDS).contains(LocalDateTime.of(2016,7,7,1,1,1)));
  assertEquals(true,new TemporalValueRange<>(fromTime,toTime,1,ChronoUnit.SECONDS).contains(LocalDateTime.of(2016,7,7,7,7,6)));
  assertEquals(false,new TemporalValueRange<>(fromTime,toTime,1,ChronoUnit.SECONDS).contains(LocalDateTime.of(2016,7,7,7,7,7)));
}
