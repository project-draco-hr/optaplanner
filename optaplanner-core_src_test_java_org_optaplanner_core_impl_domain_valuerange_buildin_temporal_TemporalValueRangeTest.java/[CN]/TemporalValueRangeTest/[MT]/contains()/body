{
  LocalDate from=LocalDate.of(2016,7,1);
  LocalDate to=LocalDate.of(2016,9,8);
  assertEquals(false,new TemporalValueRange(from,to,1,ChronoUnit.DAYS).contains(LocalDate.of(2016,6,30)));
  assertEquals(false,new TemporalValueRange(from,to,1,ChronoUnit.DAYS).contains(LocalDate.of(2015,7,1)));
  assertEquals(true,new TemporalValueRange(from,to,1,ChronoUnit.DAYS).contains(LocalDate.of(2016,7,1)));
  assertEquals(true,new TemporalValueRange(from,to,1,ChronoUnit.DAYS).contains(LocalDate.of(2016,7,3)));
  assertEquals(true,new TemporalValueRange(from,to,1,ChronoUnit.DAYS).contains(LocalDate.of(2016,9,7)));
  assertEquals(false,new TemporalValueRange(from,to,1,ChronoUnit.DAYS).contains(LocalDate.of(2016,9,8)));
  assertEquals(false,new TemporalValueRange(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2016,6,1)));
  assertEquals(true,new TemporalValueRange(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2016,7,1)));
  assertEquals(true,new TemporalValueRange(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2016,8,1)));
  assertEquals(false,new TemporalValueRange(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2016,9,1)));
  assertEquals(false,new TemporalValueRange(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2016,7,7)));
  LocalDateTime fromTime=LocalDateTime.of(2016,7,7,1,1,1);
  LocalDateTime toTime=LocalDateTime.of(2016,7,7,7,7,7);
  assertEquals(false,new TemporalValueRange(fromTime,toTime,1,ChronoUnit.HOURS).contains(LocalDateTime.of(2016,7,6,23,59,59)));
  assertEquals(true,new TemporalValueRange(fromTime,toTime,1,ChronoUnit.HOURS).contains(LocalDateTime.of(2016,7,7,1,1,1)));
  assertEquals(true,new TemporalValueRange(fromTime,toTime,1,ChronoUnit.HOURS).contains(LocalDateTime.of(2016,7,7,6,1,1)));
  assertEquals(false,new TemporalValueRange(fromTime,toTime,1,ChronoUnit.HOURS).contains(LocalDateTime.of(2016,7,7,7,7,7)));
  assertEquals(false,new TemporalValueRange(fromTime,toTime,1,ChronoUnit.MINUTES).contains(LocalDateTime.of(2016,7,7,0,59,59)));
  assertEquals(true,new TemporalValueRange(fromTime,toTime,1,ChronoUnit.MINUTES).contains(LocalDateTime.of(2016,7,7,1,1,1)));
  assertEquals(true,new TemporalValueRange(fromTime,toTime,1,ChronoUnit.MINUTES).contains(LocalDateTime.of(2016,7,7,7,6,1)));
  assertEquals(false,new TemporalValueRange(fromTime,toTime,1,ChronoUnit.MINUTES).contains(LocalDateTime.of(2016,7,7,7,7,1)));
  assertEquals(false,new TemporalValueRange(fromTime,toTime,1,ChronoUnit.SECONDS).contains(LocalDateTime.of(2016,7,7,1,0,59)));
  assertEquals(true,new TemporalValueRange(fromTime,toTime,1,ChronoUnit.SECONDS).contains(LocalDateTime.of(2016,7,7,1,1,1)));
  assertEquals(true,new TemporalValueRange(fromTime,toTime,1,ChronoUnit.SECONDS).contains(LocalDateTime.of(2016,7,7,7,7,6)));
  assertEquals(false,new TemporalValueRange(fromTime,toTime,1,ChronoUnit.SECONDS).contains(LocalDateTime.of(2016,7,7,7,7,7)));
}
