{
  LocalDate from=LocalDate.of(2016,7,1);
  LocalDate to=LocalDate.of(2016,9,8);
  assertEquals(false,new TemporalValueRange<>(from,to,1,ChronoUnit.DAYS).contains(LocalDate.of(2016,6,30)));
  assertEquals(false,new TemporalValueRange<>(from,to,1,ChronoUnit.DAYS).contains(LocalDate.of(2015,7,1)));
  assertEquals(true,new TemporalValueRange<>(from,to,1,ChronoUnit.DAYS).contains(LocalDate.of(2016,7,1)));
  assertEquals(true,new TemporalValueRange<>(from,to,1,ChronoUnit.DAYS).contains(LocalDate.of(2016,7,3)));
  assertEquals(true,new TemporalValueRange<>(from,to,1,ChronoUnit.DAYS).contains(LocalDate.of(2016,9,7)));
  assertEquals(false,new TemporalValueRange<>(from,to,1,ChronoUnit.DAYS).contains(LocalDate.of(2016,9,8)));
  from=LocalDate.of(2016,7,1);
  to=LocalDate.of(2016,9,1);
  assertEquals(false,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2016,6,1)));
  assertEquals(true,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2016,7,1)));
  assertEquals(true,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2016,8,1)));
  assertEquals(false,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2016,9,1)));
  assertEquals(false,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2016,7,7)));
  from=LocalDate.of(2017,1,31);
  to=LocalDate.of(2017,2,28);
  assertEquals(false,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2017,1,30)));
  assertEquals(true,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2017,1,31)));
  assertEquals(false,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2017,2,1)));
  assertEquals(false,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2017,2,27)));
  assertEquals(false,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2017,2,28)));
  assertEquals(false,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2017,3,1)));
  from=LocalDate.of(2017,1,31);
  to=LocalDate.of(2017,3,31);
  assertEquals(false,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2017,1,30)));
  assertEquals(true,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2017,1,31)));
  assertEquals(false,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2017,2,1)));
  assertEquals(false,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2017,2,27)));
  assertEquals(true,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2017,2,28)));
  assertEquals(false,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2017,3,1)));
  assertEquals(false,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2017,3,30)));
  assertEquals(false,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2017,3,31)));
  assertEquals(false,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2017,4,1)));
  from=LocalDate.of(2017,1,31);
  to=LocalDate.of(2017,4,30);
  assertEquals(false,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2017,1,30)));
  assertEquals(true,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2017,1,31)));
  assertEquals(false,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2017,2,1)));
  assertEquals(false,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2017,2,27)));
  assertEquals(true,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2017,2,28)));
  assertEquals(false,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2017,3,1)));
  assertEquals(false,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2017,3,30)));
  assertEquals(true,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2017,3,31)));
  assertEquals(false,new TemporalValueRange<>(from,to,1,ChronoUnit.MONTHS).contains(LocalDate.of(2017,4,1)));
}
