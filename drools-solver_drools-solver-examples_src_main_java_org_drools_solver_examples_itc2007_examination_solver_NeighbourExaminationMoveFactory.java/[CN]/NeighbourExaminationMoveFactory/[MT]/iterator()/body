{
  Examination examination=(Examination)localSearchSolver.getCurrentSolution();
  List<Period> periodList=examination.getPeriodList();
  List<Room> roomList=examination.getRoomList();
  List<Move> moveList=new ArrayList<Move>();
  for (  Exam exam : examination.getExamList()) {
    if (exam.getExamCoincidence() != null) {
      if (exam.isCoincidenceLeader()) {
        for (        Period period : periodList) {
          int distance=calculateShortestDistance(period.getPeriodIndex(),exam.getPeriod().getPeriodIndex(),periodList.size());
          if (distance <= PERIOD_JUMP) {
            moveList.add(new PeriodChangeBulkMove(exam.getExamCoincidence().getCoincidenceExamSet(),period));
          }
        }
      }
    }
 else {
      for (      Period period : periodList) {
        int distance=calculateShortestDistance(period.getPeriodIndex(),exam.getPeriod().getPeriodIndex(),periodList.size());
        if (distance <= PERIOD_JUMP) {
          moveList.add(new PeriodChangeMove(exam,period));
        }
      }
    }
    for (    Room room : roomList) {
      long distance=calculateShortestDistance(room.getId(),exam.getRoom().getId(),roomList.size());
      if (distance <= ROOM_JUMP) {
        moveList.add(new RoomChangeMove(exam,room));
      }
    }
  }
  return moveList.iterator();
}
