{
  TreePath path=tree.getPathForLocation(e.getX(),e.getY());
  if (path != null) {
    DefaultMutableTreeNode currentNode=(DefaultMutableTreeNode)path.getLastPathComponent();
    MixedCheckBox checkbox=(MixedCheckBox)currentNode.getUserObject();
switch (checkbox.getStatus()) {
case CHECKED:
{
        checkbox.setStatus(UNCHECKED);
        selectChildren(currentNode,UNCHECKED);
        TreeNode[] ancestorNodes=currentNode.getPath();
        for (int i=ancestorNodes.length - 2; i >= 0; i--) {
          DefaultMutableTreeNode ancestorNode=(DefaultMutableTreeNode)ancestorNodes[i];
          MixedCheckBox ancestorCheckbox=(MixedCheckBox)ancestorNode.getUserObject();
          if (checkChildren(ancestorNode,UNCHECKED)) {
            ancestorCheckbox.setStatus(UNCHECKED);
          }
 else {
            ancestorCheckbox.setStatus(MIXED);
          }
        }
        break;
      }
case UNCHECKED:
{
      checkbox.setStatus(CHECKED);
      selectChildren(currentNode,CHECKED);
      TreeNode[] ancestorNodes=currentNode.getPath();
      for (int i=ancestorNodes.length - 2; i >= 0; i--) {
        DefaultMutableTreeNode ancestorNode=(DefaultMutableTreeNode)ancestorNodes[i];
        MixedCheckBox ancestorCheckbox=(MixedCheckBox)ancestorNode.getUserObject();
        if (checkChildren(ancestorNode,CHECKED)) {
          ancestorCheckbox.setStatus(CHECKED);
        }
 else {
          ancestorCheckbox.setStatus(MIXED);
        }
      }
      break;
    }
case MIXED:
{
    checkbox.setStatus(CHECKED);
    selectChildren(currentNode,CHECKED);
    TreeNode[] ancestorNodes=currentNode.getPath();
    for (int i=ancestorNodes.length - 2; i >= 0; i--) {
      DefaultMutableTreeNode ancestorNode=(DefaultMutableTreeNode)ancestorNodes[i];
      MixedCheckBox ancestorCheckbox=(MixedCheckBox)ancestorNode.getUserObject();
      if (checkChildren(ancestorNode,CHECKED)) {
        ancestorCheckbox.setStatus(CHECKED);
      }
 else {
        break;
      }
    }
  }
}
tree.treeDidChange();
}
}
